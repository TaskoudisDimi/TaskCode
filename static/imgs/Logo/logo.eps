%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2001.i039.031.P.m004.c33.branding isometric concept icons-12.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 3/27/2021
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 12 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2001.i039.031.P.m004.c33.branding isometric concept icons</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-03-27T08:00:44+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-03-27T08:00:44+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-03-27T08:00:44+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9R3V5a2kYkuZUhQnirOw&#xA;UFj0UV7mmERJVR0i6lubJZJWDSVYMVFB1NNqnp0wcEo7S3LKdXtyYXq35o6Ja+aLXRFvf9Nk1GPT&#xA;3tApMgd5EQV/Z4EPXl/HbM2Gn9Bke5rMt3oGYTJ2KuxV2KuxV2KuxVAa7fXFlpry2qhrl2SKAN9k&#xA;PK4QFvYVrgLk6TFGc6l9IBJ9wFsPt/NmqW0v1g3v6StAR66PB6DcK0MkJFAy7/Rkbd1LQY5jhMPD&#xA;n09XFv3S7izyCaKeGOaI8o5VDo3iGFRk3npwMSQeYX4sXYq7FXYq7FXYq8u8+za1J5lFuSyhnjj0&#xA;sKaDgUQmRaHaRpmdCeoVRSgLcpTnUQI8zzd92JpccuPLkFxh/aSzDQrW60u3EUl7NeEj4xO3IBu/&#xA;Co5Ae1cIx06zWaoZpWIxj7v09PsULnz9ZJfGxs7Sa+uEP770acF7H4j4fd75DrQ3crH2VLw/EySj&#xA;jieV8z+Pn5J9pmp22o2v1iAMoDFJI5BxdHXqrL2OLgZ8Jxyo0fMciPJFYtLsVdirsVdirsVeOfmU&#xA;/muw/NrQtR0+8uNM0a5s4rO7vkAe29UTzlY51YMnxGRQCw7/AA75l4yPBO1m/wBTbp8YnlAldeX3&#xA;fFlvl38yYLzzZP5P1OERa3CnqxTwfHbTxheXJdy0bU6qa/PKfC9HGOS58fBOuh3DNsqakh89rF/h&#xA;PUZJY0ljt4jOwkdowBD8fLkgLAjj2wgyH0mi3aeIlMA8njHlXz55ntIYtY0xLaz8sLd21jY6I8Ze&#xA;WW3ldo/hkDVRl6jxPWo+1scohI8H8QHNrlhlGAmeUjswzzBqdn/yvN9VZ6WVlrQuZ5QCwEVlKHlY&#xA;cQSfgiJ2zJjE+CB/R+9xj9T6p0XXtG1ywS/0i8ivbST7MsTVoaVow6q3irCuaacDE0W4G0fkUuxV&#xA;2KuxV2Ksb8ya1ZWPmPy9YzSypd6g9wtlGhYRSPEisyyUI/ZJ41FOv0zjj4gT3MozoEd6T6/pcNtq&#xA;TwWz31xqd8xu0ijcLEKSciD48aUFBttmNlhYIsi+56LR6gzxXIY444+ncb8q/HexDyn5xs/Mt7ea&#xA;fCknp6c8UAIBMRhAkSSQE04D0wQRQVqMsxaTLhxQjkkJyrmAeQ77J3rm42PUxkZmIrhJNkiyTyFd&#xA;fUL5mnpnk245aXDbryMcUMbBnFDWSrn6N9suljEYjzddrpmWeZIr1fdsn+VuK7FXYq7FXYq068lK&#xA;1K17jrhCsB8wy2ttBdX94SItGmErTmsjRlY/WcnYtSg+zvXbMvHHxDUh7i5ENTLEDwnaQqQS25/M&#xA;vy7rXl27l8vXvr3Q9OKSMJJHJGZgT0cKeisOS1Fe+VZ4ygN3K7H08c2cA/TH1F4RZebvzJ0XzvJH&#xA;bRXMNzNcJAdHlQmJ1ZqRhkO3xdnXfwNMzseLHCAB5lxu0NbPUZTP+Ech3Do+qvKAL2l7eD+6vbtp&#xA;YT4pHHHAG+TGEke2auRsktutHDwQPOEKPvJMvs4qT7A4LsVdirsVdiry/V/MN5rOmXGmabeSzvbX&#xA;Yjl1uNkSNX2JRDGyc/T9QKyhgammZGHFUvU5I3BMR3CufmT9iP8ALt/f3lvPp+r3C3tzbqqszBav&#xA;CxZByX9oco2+Jtz3ywCuXJryw4K70BH5S8p+XPNi+eJbs6dHbxSJeiVy1vxkQqCvKpQ8iAFXbsFr&#xA;kzZhwANeScpy4pEk+bOPLfm/y15mt5bjQtQiv4oWCzenUMhNackYKwrTao3zDnjlDmGINpB568ya&#xA;ReteeR7edZNXvrNzdRKQTDBKVi+L/Lb1g3HqEBb+XlKGOVcQ2ALOEgDu+cdfu9X8ualFo0k7y3um&#xA;twsreNBG9vIQDFITSTnIFf4KUPRgQaHMzB6gZkCMepPXv9wdhro4YRjEZDlNbADh4ffzs+XPvZF5&#xA;A/LR7jRLi/1ETQ32tQGw0xxDzS1+sLyE04DK4E0Xwoenx79Rkp6oymQPpj1vn7nVDF6b6l6f+Rvl&#xA;+38sw6poEkyS6xE0c2p+kzsgZ+Ri4h1WlYytflmNqiZHi/hPJmAAK6h6pmKrsVdirsVdirBfzC13&#xA;VLPW9B0/SRAmp3BnmguL5wlqFiCq6lQOcjUfojAj37XYsQlZPReMjYdUrl/MPzZpD38HmC2s7owW&#xA;M19FNpPq0X0AOSypJ6rpWv2/wOXjBE0R39WNl5d+WPmbRrnzBqFjdWkk+reYJjOz21yptmlHqOaK&#xA;gjMakOR8TN9GZOp0wlRJ2iz02qljNx5+4F7rozah9eQWkEqW4UJL6yKiBUBCr8JNSP8AJzGyCIjR&#xA;+xBkZGzzLKswldirsVdirsVdiryjTbV7m4/MyC/me2tdSLW1tczRyvCoKzW/JQyqr8XdaqreHahz&#xA;KyzAED3Jw4ZZJcMRZLxbTPIvmex82aSIOMst1fwh7uyDfVo0klUOroFVlUcq+HH5ZL8yJQ4QdhGv&#xA;V9V9/n99uz/I5dLkjkkCRdnh7uo/Gz3LzPNfafoc2veYtKhtbXTp7ZDWcSORJdwxmWsat+6UPyKk&#xA;1NCKd8rIjkIFWef7HC4xAngJ57dNu87vQNBuoLvQ9OuoIhBBcW0MsUIFAivGGC09gaZRKNGmmUzI&#xA;8R3JR2BDsVdirsVdiryjVvLWpeV9DuYtIsJWutQ1CeVDaGe9VI5FMnrOgtpuL8kCqvDjvuTTMrDM&#xA;mXqLOWYRjUY/Ln/Z5JVp2r8RqPmrTCJb7ULNFXS7zlbi3it42ljkkY15ggyNVfhIBHLll2QyBAI2&#xA;vcrAwyGge4D9vcp+aNc0y78uxaL54uLJE1LgY7/T3aVEZTy5mP8AvIyvSu4PfbI48hkScY3Dl5NE&#xA;MdHIdrr+afhfTzZp+U3kDRvKWnXraes5kv3Uzy3LVZ1h5COihIwoo5anGu++UZsxnVuLmxRxzMYm&#xA;x+Pu5IX8zPy+j1KF7vQ9KifWb+6t31G8qqu0VujFQWblQFlQHiNzQnpk9Pm4eZ2aZRYLdf8AOPus&#xA;a/511O91TUI7XQ7i5FzF9XXneFQoURF2UCMKKitW3A2PUWnUAb7k1Xl8kcL0LTfJY0nz4k9k0o0+&#xA;LQ7fTraAxyGNVtpAqlrg/AX4qBxPxU3zH8YkUR1u2fCKu/gjPLvlLVtN8963rsxh+parFEqojszq&#xA;YVVFqCANwCx+eHJlEoAdyAN2ZZjpdirsVdirsVS3X/LeheYLH6jrVjFf2ocSLHMteLgEB0PVWoSK&#xA;g5KMjE2FIYj5h/Lzyvpmk236K0F5oLa8W8mtLRmLu4jZAzq5PqjenH9Qrl8MnFYkeYWOxBHRLvJX&#xA;kXVLXzHd6lrui2cMFnI1zoM9k3pzfv8Al+6nSLgspiRuPOVa1ru1a5Kc48IjE+RY7k2WfWsWsfWD&#xA;K5SOE7CDqBv7d/8APfK5mFUOfeyTPKFdirsVdirsVdirTKrqVYBlYUZTuCD2OKQa3DGNV8i2Mzi4&#xA;01hZTpV0iXaEuN12H2RXw2/ycgYdzt9P2vOI4cnrHf1r9P3+bHtU1jWLG1bSdYFEnC0e4pLyIdXY&#xA;8n+B6DagNBtU1yBPQufHQ4s/rxfd8OXP9bPtJuIrnTLWeIlo5IkKsV4kinWgqPuy0cnnc+MwmYy5&#xA;govC1OxV2KuxV2KuxV5iPJeuX3mzWbSW1Fl5Vk4fVoYyiJJG6LHKjcCTR2jduAp8JUHwGdHPERF/&#xA;UGNHl0Ytbf8AOO3laPXzIdSudS0tCDDpwUI/IEbSzqRyT3VV69dt7zqp8O4pj4b2uztLpZDNczFp&#xA;D+wp+Gnhv/ADNfOYqgGxGZUrsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqya&#xA;3gnQJNGsqAhgrqGFR0NDiyjOUTYNL8WLsVdirsVdirsVdirsVWpFFGWKIqFzVyoAqfE0wkk81XYF&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVUrm4jt4+b1pWgA6k5KMbKoC016GaSKOaF7d5vhTlRhz3+Go+WWz05F0bpUmu&#xA;/wAydFtr6W2aOR44WKtMlGB49SoFajw8cxTMO8x9g5pwErFnoyxJEkUOjB0PRlNQfpGTdIQQaLeK&#xA;HYq7FXYq7FXYqsmk9KF5OJbgpbivU0FaDFMRZpDabq1nqEPqQNRhs8TU5KaVoaE/hhIZTgY7EIzA&#xA;wdirsVdirsVdirsVcTTc4qh7LUtOv0MljdQ3UY41eCRZAOShl3UnqpqPbCYkc1RGBXYq7FXYq7FX&#xA;Yq7FXYq7FWE+bvzN0ry75m0nSpZYHhuPWOqESD1bYCMG3qtdvVkag5U23zIxYDOJPyYmVJr5W84D&#xA;zE8r22nXMFgiho76UII3atOCUY89t+ack/ysGbDwAb7pBtMNXWKSMEOpeBviTqQWG3y2yOGW5CSE&#xA;pjhjuLVpa/vbeUhlGzIa/A4PXpmSZEGu8Iecz29pZXF9FewNwkEi2kwrUOtCpFad6Bq9jmvzY+GR&#xA;2e80molnxwlCQJFcQ++/0M//AC1vZrjRJI5AaQyfC5rQ8h0A9qV+nBA7Og7exCOYEdQy7Jujdirs&#xA;VdirsVS/UdVWz9Xm0caxRiQu5oBy5BS3+yXJiFhUoh82QXnlP9JQhrz1LCW5MluOCsUh9QBedGHq&#xA;A1XbIAEHhPTm3Rj6gR37BiFhJHpk1ldpeetbQRm9uroN+/e3CMW9WGrFgoAQGpofow8M798tvIUO&#xA;vvtu8QcJEu77f7PuZdoXn7StSt0ndlS2lHKG9jJe3YGlA7UDRN8QqsgGGcTE0RSfygnHixHj8uUv&#xA;l1+FsoBBFQag9DkXCdirsVdirsVcSAKnYDqcVeX/AJq+bfPWl61bado0Nquh3FvH+kL2Y/vozPK8&#xA;TlBzT7KAEUU75k4Bj/iPq6M/AyGBmB6RzLE7u/lgvk1jRLc6bccm+sX2lzi4imRpfU9T6sQnrL8D&#xA;+oORpRBU/Zy7HU4i736SFEfqaZbFknlj8ydf1bVY7APay6kiiJ0ikR7SYj1ZOLMCHguPTjb4SDy4&#xA;k8VUZRlwmIscnL02TCRw5AR/SHT3jqPtek6Rqv6QikL28trPC3CaKUd6VqrDZ1PYjKCGOfDwGgRI&#xA;EXY/Gx8kfgaXYq7FXYq7FUv1/XtM0DR7nV9TkMVjaKGmdVZyOTBFAVQSaswGShAyNBBNPEb78zfz&#xA;L/Ma9l0r8v7CTS9IqI59Wk+CUA7EvOOSQ7MDwi5SbVB7ZnjBjxC5mz3NfETyYbrX5Y2/lnz/AOXf&#xA;Lmo3Lap+nPqo1OahQA3N00T+keXKq8Nmb507ZfDUcUDIdEcNF9VWVpBZWcFnbrwt7aNIYU8EjUKo&#xA;+4ZqJSs2W55rN5n0+2/MTX7TU4JIhpQgawnjkeP6wt9bq0qyKSI3WNkHEn7JGTPDjgCOcjv8HN0m&#xA;jy6kkR5R/SyOC5sLxzNZH1AQK0+0oIqA+X48okObTqNLPEakKUL/AEm0nQfX4BIzvVe/AkBAajse&#xA;IOSkIz27l0+ryYTcDw2nWjfUrBbbT7Kz9GCTmzyJQDmoHxP3ZmA65hSjwmgNk5808xM5yuX45J1i&#xA;47sVdirsVdiqX3eiWl1cyzyjkZoVhZGHJf3b+ojUJ/ZbemHi2pXlmq66vlPV7e51VpIvKenx3Fhb&#xA;WSII47kiKOFI0hBAcLxY1ccBXY12zJwxOSJHXvcjVRhAQMTzFnyPc84k82W13BqJ0l7gW90k0hto&#xA;2ImiDKaxtEGb1I+NeTpUdKonXMr8uYkHua/zPFExkLvfztnH5Z+tDb6Qk1ut5H9QtmZmorss6fFC&#xA;VB/epFyLcWBPgu2azNOXHPhP8VGJ+Bse8e7mzxxoAjYgXY/X0e22lrb2lultbp6cEQ4xoKkAeG+B&#xA;rnMzkZHclVxYOxV2KuxVC6pZfXtOuLPlw+sRtHz8OQpXGm3BlOOYmP4Tbyrzr5a8zRaTLbyot5bg&#xA;qqXsimbhGrclRoyacRQ/aDKK4cczA77h6CIwau+A+FkI5dD+g89uvVJF0+MwqJ5JmMriZZ5GaP0n&#xA;HFzNG68REiSK+42QPRRXplwzRkdufc6LU6bJhPBLoebDtSsdO8qea9L1Rr3h9XuTdWaLQQmK3cTv&#xA;FI68iRIlyyox+z9k1y7jnKH0+9EMGImjPerB5D3H9D6f0uyjtYSIpTLDIecZJr8J32I69c0+nwDF&#xA;AQF0Cee/M3Xwa8mQzNlGZcwdirsVdirsVYJ+ZeqWlzo0uj3FsZbe4lQTh9kdYnD8QwIZW5KpqP15&#xA;cYyhHjBdl2XpIajKYS5Umv5f/uPI2mpFbRw/V4TGsEACofTYryotfialXp+1XK5T4jbi6rT+DkMD&#xA;0eO+fNUh1b82vy81KN0kS7j0yVXUkBq30m6hgCPpAzPwxMccgfP7nDkbls+iM1zYkWr+UtBv55ry&#xA;+R3kkAoebH02UBecQ34MQq1ptt0rWo4Aem7l6bX5sH0Sod3QsKl0DWLCWS40SSW4TkQ0IJiljiBB&#xA;UHk55rtQkeFd8GTBKG70GDtPBqBw5QInz3BPy2/ATLQPOthf3cWnXoBmmYJHMjDlzZiACnbsPbvh&#xA;hnNuLruwzjgckOQ6eXv/AB5Kt41/bfmnomn2U0n6PayuLnUYBUrWjJE7niQKtsNx0zL4rxknnbzn&#xA;VneYrJ2KuxV2KuxVj/nf/Ev6HQ6B6nrCdDeC29H6ybWjep9X9ekXqV4/aPStPioMsxcN+pBYBNrc&#xA;enRyaJ5zlvbfR9UEZ0mbWIIpBzRmSSC6lhDRCpVXUk9KlqbVzICzxRAJHOmN96R63+QOkXlza3+g&#xA;ap9TgkKvMhRpUCmpEsDq3yopb3r2y2OrPIhBgzjyjozWN3Lor2y3VrakKLxqmWQs1WknPFRz2r4n&#xA;bMLUQx5PURuPxsfx1ciM5QA4T+PN6HmO1uxV2KuxV2KuxVxAIodweoxVgM/ku/ufNOsw3ASPQNQs&#xA;ni01Y05LDI8SJIaDh6ZDguADvWoNa0nYHCR0/W5Rz8WOQlZmSN76UQf0KOm/kp5cTU7PUNalk1tr&#xA;Czhs7a1ugDArR15SMnSSuyqGrQDfkdxdLUyqhs4fC9CiijijSKJBHFGAqIoAVVAoAANgAMxmS7FX&#xA;Yq7FXYq7FUj1vRYpXjnWy+vNzZmgZlC1ZCK/F/nXMnHMSiYyNBsx5ZQNxJBSfTofq2mRW2miWPTk&#xA;lYoasPU5EtKu+6r8VO2/TLIYYwsHm2arUzzz45/UxbUvyzbWPNvlfWNMuLexh0JLYT6YVYmMQStc&#xA;qo3J3ZuND065M5BASBs3e7iGO713Nezdiq30YuYk4LzHR6Cv34bPJUOmk6Ul6b5LKBb1q8roRIJT&#xA;UUNXA5dPfI0G46nKYcBlLg7rNfJFYWl2KuxV2KuxV2KuxVQv9PsdQtJLO/t47q0mHGW3mRZI2HXd&#xA;WBBwgkGwrdvZWdtFHFbwpFFCqpFGihVRVFFCgbAAeGJkVVsCuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KrJYY5YXhcVjkBVwNtm67jCJEGwqX6doFpYzmZJZpn34iZ+QWvXiKDL8moMxVAe5U&#xA;zzHV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxVDT6np0Eohmuoo5SQPTZ1DfFuKiu1cFhthhnMXEE0icLU7FXYq7F&#xA;XYq7FXYq7FXYqsgnjngjniNYpVV0JBUlWFRsaEbeOJFKvxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KoK41rTLbUI9PuJ1iupk5xK+wYEldmO1ajphpujp5ygZgXEc0bgaXYqsM8ImWEyKJmBZY&#xA;yRyIHUgdaYLTRq2LX3n3QYdSjU3ojjgeSOVCQPUdQeSqp+JjHxr/AGZKGMzOx5dO9zMukniiDMVx&#xA;8vx5sa1y7XzJrutadawpZRaZFaTy6tJIU5R3kAdTwVGPwgU4k1NNqZLPgqAPU/ocvsfWeFlMSDL+&#xA;jXM/o/GzLdA8x2UktppNv+8ihtwhunYRuWj4opERqSr+PKoNBTeuUxN7NOv0mSJOSQril8r3q2SZ&#xA;N1rsVdirsVdiqD1fVrTSrJru55FQQscUYBkkkbZY41JFWP8AadsWzFiM5cIS5fOmi/U3uZWaHhQ+&#xA;kxR3YMeKlfSaQEFgRsevXBblHs7LxiA3J+HLvumO+YdX8warpk/1a4/QNpKjJDcy09cu44oeIYcf&#xA;jI7g+GJyCJiTyMgPM/jr3Ddvlhw4YyBPiZKPL6Y/Hr+vZP8AyDLcnypYW13dLeXllH9VuLhQRzMJ&#xA;KKxqTuyKDWu+W5SOM06qiALZBlauxV2KuxV2KrJZooUMkjBUHUnCATyVBX2oLaxtfy3MEGmRwl2m&#xA;lYIvM/ZqxIAGREJnIBtw9f517V8ObLavNKPKty99C2u3l9LPzDJCvpvb23DZi8MT/E6ns7de2WHG&#xA;Qa6uRnz45Dhxx4Y953kfef0DZkkE8U8KTRNyjcVVh3GRlEg0XFX4FdirsVdirsVdirsVee/mLaWl&#xA;xetLI4SSG3gEchairzndGLewJFT2wZZAYzI/wgl3vZOqOED+YZG/lsl1h5p8w+XGWK65X+mVCiQh&#xA;iF3pQS0oD/ktmD2fr/zMDLhIrn/b1c/UaHTag+gjHlPTv+H6noGheYtM1q3Mtk5LJT1YmFHQnxGZ&#xA;/uec1WjyYJcMxX6WC2Op+Y9W8zajEl3Hay6deXVuswKkmFJawgRKfiIRqNy9u+WZMJ2I5VzcvSaj&#xA;TwwkTHHMnl+39W/N55+YPmq/8vpHfXFnBcI1zcx2DoQUfk/qsk6E8gULsK9ye2Wx0fEaBofa2Dte&#xA;HhGMokyPD7rjte/LYBl3mN7i28ix+ZdFgtk1LUdOtjrhllmHrQW9sJCIog/pepGqGhK8gtaZOOIE&#xA;8ErocnXY9XKGXxgBxXbHvJFjrGvarpt3SWztGuLK9dYwJneO1uEcxvShSP1OB5Cu25G21EsBxGx6&#xA;und8f2O37Q7ZhqsQx8PDW/fv3ftL6Dyp0LsVdirsVdirF/PFhqFyljJApktYGl+sxKpc8nj4xuUX&#xA;cqvxA03Fa4ux7OyxhM3tt+kdWC6BFbaZqepfpS6r+j0e6jW5uGe6YQp6nP0gxJRTzP2a+w6ZjmBB&#xA;Mh6pASobc+dd/d5fFy8+pAx8Mf4jz5+n9H4rokmp695h8x3Ul/pasLbT6yafA6ssc0qLyjknrRuH&#xA;qCiLsT18KU6DS5JZBm1AHjnp0xjfYf0iPqPwCfy+OGCUpHhjvwjrM1z9wP62VflrrPm22sdS/wAS&#xA;W8NvewXENQnOODjN8Ui+o5KFo+mzbE9677nUx5cLo8dHm9TzEQ7FXYq7FXYqhNXkeLSryVIjPJHB&#xA;I6QqeJdlUkKDQ0JIphFXukX0YuNX0zUPLFj6+nRz3i21veT6XIVmMFw6IfSkBC1kUy/tKPHbMjHj&#xA;N89uV94RI77sd1bzbplxfSJd6nbx3FssknAMzIirWFi6K2y8nH2h18KZPUZPAgCImRJqu/r+hYR4&#xA;jzpCeWfN3nLStS1e218oumwW4uNONvExSYKkjyvA7k/FxTnwJI++po8SOeEZj0GXMHm2jCY3txCP&#xA;UM78kwTTWr+YDevdW+vwWd5bxOpQoPqyAsRyKhpPtEKqgdKdzR4IhI9/X8fj5bMJTv3MlyTF2Kux&#xA;V2KuxVhsnnm907zWdH8w2sWm2UxcaZqCuZY7mrViUkcfRk41Uo6/Ew+EnLRhMt4m/LqzPDw3R/Ry&#xA;3YLo2v6PrcuqXOt3kej6ol7dWUVvbLNJCscc4cvO5DIxMh/vCqbA9BXL8mlEY8IHplz+PNs0+sMJ&#xA;AkcQHQ8v7fNN9N8w2FzA8V68d9YRTGOW4tq8EYMAyXMI+JT8P7Q+XjmBpdANJExj9JNuzlHHqSJY&#xA;TWQfwk7/AOaev3sg8hW9rBquqLa+mYmitnYwv6kYkYOXVDUkKD0Fcvnw9HF1k8xxxGXisGX1c/4U&#xA;v/MfTdLh1PR9ZlmntbmyuKQWtpG0pufVb1ZFaOIcjURE1O3jmTppGiHWyYPrq6FrWsHVUsxMEkSN&#xA;IZ4mQrOI39UyRGn7xSqD4hXfbKNRLJA1fpL1PY+n0+XGLA8SPFffzjW3xO/kzrSvy3stTlF/rZnk&#xA;jRbm2gs2Zo1eCdXiYuBxPxRuR2I7UxhnlGNB03aRhLLca+kXXf1ZZ5c8qaF5csltNKtvSRV4mR2a&#xA;SVhUtRpHJagLEhegrsMhPIZGy4AFJvkEuxV2KuxV2KrJwTBIAKkqaAfLDHmry3UNMm03V4Y9TkgN&#xA;pcRzQ3c8g4l1dHZg8hMTKGaVieBbj06/EKtLpjASsiUpSJH49znHJGUY8IlY5/opC3OiNrsWia55&#xA;blaTT7GW4jij+FCrrO8U0nptRZOaDj8XxcaU33zIyzyYIEQHEa5dT3BtwzwZuM5zIT/hO/282U2X&#xA;lM6ok6anEphmuIru4WRVrJJFKsiDjGRRU4UXkxPjXeul0MtZPOcuUeHHhoC/0WfP5tGbwowEYniN&#xA;/juZtm2cN2KuxV2KuxVZcQrPBJC5IWVGRiOtGFD1xV5drPke58s6fqU+iQtJa3Mkk8ltG7lnllVF&#xA;U8qh0USAFlBPjyH2cyZ6q479KbtJhE58NgbHn7nmWgeRNM0jWZLfVdauYPNF431W3msvRmjt7m4I&#xA;Qq4kkjluXX1F5+knw16hxVcjU1mhRFx59Ry36cvn9jiwJibHN7R5Q8n64lm6+Yby4knttQuntHZ4&#xA;i0tpLEsK8+HIR8gCeKMONe3bBycGwjyArr+nc/FycWecYyH86vsNs2ghSGGOFPsRqEWu5oooMgA1&#xA;k2bX4odirsVdirsVee/m3oFtc6ZPrV1BFPaafaSG7ElXYxpV6JHxKluXQkinXJ4weL0mpOfptXGO&#xA;M48lnGTe1XfxUPLXkbRfqUcsmlW7Jdqt0l43J5Q00akmkvJ0c8QWZWFTv1zIGWY+ouPnGE0cd+4s&#xA;QOg+XfKuuG8h0q9v5YrkxyyLPSVLOUUfm3OLmEcUUvyPHkHbjSkvHmZGJ2FbIGm9AnHvovSPy0tr&#xA;ZtCg1NXiN7ewp9eSCnpiRCwJCgkKTvVex7DKM1XsNmefPlmBHIbMWQa55f0bXbQWmq2sd3ArB1WQ&#xA;V4sO6nqD22yEMhibDikJLb/l9Y6fr9vq2i3lxp0Sqkd7pit6tpcRRR8Ix6cnL03XilHTsPcnJnOZ&#xA;RqW6gUdmVZSl2KuxV2KuxV2KuxV2Kpbq+hwalYz2jSNGs68WYfERvXvkuLai3afOcWQTHOLegaBp&#xA;uhaTBpWnIyWdtzMYdjI1ZHaRyWapJZ3JxnMyNlpTHIq7FXYq7FXYq7FXYqhdU0yz1TTrjT7xS9rd&#xA;IY5VVirUburKQVI7EYQaNqp6JoWj6Hp8enaTaR2dnF9mKMdT0LMTVmY03ZiScM5mRsoApHZFLsVd&#xA;irsVdirsVdiqF1XT11HTbmxaRoVuY2jMqBGZQwpULIrof9kpGKYmjYVba2SC2htweYhRY1YhQTxA&#xA;FaKFUdOwAxQWDP8Al1qsnnWHWpb6F7OA3MkUnp/6SjXTuTEvIOAFRlX1A/j8A2IyTnuHCotmOmaX&#xA;FZRRsT6l36EMFxcVNZPRDUYgk7kuxr18colK1RuRV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVppEVlVmAZvsgnc08MNK3gV2Ku&#xA;xVQvryGytJLqavpRDlIVFSFruae2IZ44GchEcyxfRtXutG0h7rVdR/TNhLcsbW/t4/7u3kLOolC1&#xA;+x9mvyy7LKJojZvxaLJKZx8pjodvh72U2l7aXkCz2sqzQuKq6EEH7spaJwlA1IUQrYsHYq7FXYq7&#xA;FXEgdcVSK/8AOOkWuqT6OkiyaxFCZ0s2YR81C8vtGtNu9P1HDRcrHpSYiRNR+ZG9XXdbFX/OjQH1&#xA;ZNKR0tb5VgkYXLqsEqzwiXhFODxDLzH2+NenXMn8rLh4g1REBMxmeXUbi/1PQLG6F3aRXIRo/VUN&#xA;6bU5LXsaVGYxFMJCiRdq+Bi7FXYq7FXYq7FXEgCpNAOpxVJ9D8wwai88Tssdwk0iRQdHMad6VNad&#xA;CRkcfEQSR1crVafwiN7sWnGScV2KuxV2KuxV2KuxVxIAqdgOpxVC8LG+USceYU/C9CpqO4Oxyy5Q&#xA;2VWM8QcRlvi6f7eQoqqYFYz/AI702G3nN0pNzZiR7+GBlZbdEAeskkhiX+7dWp136UwiEu7dyoaY&#xA;Ss8QjHYXKxufgf1KN/5muNS8vPqegXESxLG8jeogdiFFWXc8VIG+4Ndu2NbWHJw6WMM4xZgdyACD&#xA;38jy3SW21fSdH0G216K0NxqV6pgm02ykRopZGDBHlQHhEHKCvw/AW40yIzYfE8MyjGdXRO/fy5sN&#xA;VlzEcJ9cYS2lXdt9Xd8e5PPKl75RutRuTo8scGoFed7piuhZOJ48uCMybFvi4nuK0OWcJEbrY9XG&#xA;zanJkAjM3w/P5sqyDQ7FXYq7FXYqx3zBfuZZohLFBHp6pdPPK3FAArlw71oKLQ79svwCjvyO3mk1&#xA;XmxyKTy3c3sesanZxXd9LGIGvERCstpMGjqz0bnHxc7A0Ip7ZkS05P0mh+lnHORAx6EV8LuvmPxZ&#xA;eM6Zoklt+ZEja3ookjvZbmbS1BC6eQqSyqAzI1Qqx8UQqPcCmZeXKY4/TuQ0Y8dzos1/LfzdcPrY&#xA;TRtWtovLnq3MU+kyc3WBY2kW3lgdmdkEgVCVYKgqeO/TE1PLceroejk4tKZx4oEHvj/EP1/B7dYS&#xA;3Mtqj3KhJT9oKag+4zWYuPgHGAJ1uBytrmACa5IjLGLsVdirsVQWs3cdpplzPJL9XijidpLkkKsK&#xA;BSWlZm+FQg3qcIjeyYmix6y85adqHlmO8stRhvkeH0xdKDSSZVAYlfgK1PbbL44TE+rokDjlURz5&#xA;B5foP5y+VbTz7cS3lg2mQLFJHfXbxl5GuOUaUURgkghKliASB06ZlZNNKQ9Jsd3T3sDOvSRRd52g&#xA;0zVvzL0zzRwunsLSSyZrr64IVhEE3KTjAUkkIZN+MbrvUmhNcoxZ4jEQTXN2GTsjUDIIiJkT3ch8&#xA;Xv2YjgOxV2KuxV2KuxVh1x5z0q5v7O4gunOnRSXCSPCxFZYXWMpIncblvlT+bHLj4as0e5zdHpp5&#xA;hLhAP4/SlvmfXvMLRvq+llktYSY7UAijktxDFf2i7UCincDxyqBnPkOv4LstCNLAGGbn1/V+P1Ma&#xA;/Lbzyvm278yJfI+m6pFwnumhlkWDjT0kKpIz+ky0HPifizZ6jCYxAB5/Y6CExxctgXr+mFjp1sWk&#xA;9Y+kn74mpf4R8df8rrmDw1smRs28a8z+RdH0T8trjSr036wvezSyGFFedoHljdnIjLrwiMabv2Hu&#xA;DmVhnOc+Kht+Pm3wOMRMCfTKjfcR+jcg/PpTErHzdeaRolxbeR4pdU0TTBG13HdhjcOJF9JeKoNw&#xA;j/E3EbDjl8MdTuYriO37ff0btXljLHCMZCUscaJ33s7AbDkGbfl3pfm288s2cWtabBo1pFGiJLIW&#xA;eaZVFOX1cBeBI6kv49M5nL7M4hrDqDMy9fFw115/VfL4WxjrpeHwV0plnljyZY6TqVze6IsySyr6&#xA;ZurshoxGzcmWNVWPnXiprv0pyG+dDlzExqThAM5zDS7FXYq7FXYqwLzL5NjbUde1vUIU1PT76G1Q&#xA;aVzkjLm2ZePJgyoRyZjxb4a8a5kwzUALqr3QIWa70Fd6Mms6BZXNjDNYz2PJoPRZRGgkBHCSEVil&#xA;WgB8V7EZdhrGa6FMySd2L+ZNdu/KWkSp5ssnlt76N4YZLVUaK4cqChHJiYZEpzo1e/EtTLckY5ok&#xA;R5s9PqJYckZjnE2lX5AeTtStvMMmsvDaDTNStJo5rST1pJ40Ei03ZBFRnUftnbKdTqIzjQSNPkhE&#xA;ZOQPnvf39H0MiKiKiiiqAFHgBtmCTbW3irsVdirsVS7zJFaS+XdUivWRLKS0nW6eUExiJo2EhcLv&#xA;x41rTCAb25pBAO7yS1PlmOMWWg2F3p0CWzXSwvDIkUjr6aNKgct8BBUV2y3PCdXI3X3u67IzwB4R&#xA;QMpdf5vkf0MS8z+Q/M+t6RJqKaTLLqMhjWydSsbBdwVaNytUYsp5HpT+Uk5b2fMxBvkz9pJYJTjH&#xA;EQTG+Kv1/ik38yTWMh5t6zGyu5dIjtGT05XktgGDFqN+7MRD81UkigCk0rE6HiIs+mm3T+0fg45c&#xA;MP3kpX/R3+34fa9k8o+ctJ8yWCTW08AvgvK6sI5lkki3IBYURwrdQWRT4gGoymcOH3d7zYKfZBLs&#xA;VdirsVdirxnSvy51l9d1qe8t5rTSZL66ubJYzHxYtdTq1UJ5jnD6TIwWlMyM0YZOE3uAA7Ps7tWe&#xA;ljKIjEiXzv8AV5Ibyy/nKfTPO+kXjNb29reQQaFHc2qvGI2nfkhEip6qMpQNVjTtlpOOPDw7gc93&#xA;CEJ5sh4tjKz5crSrzTpem3Plu+j0mzmt9GN88utz2xSMOsdvLIGm5MJXSKX02IoRT5DJ49QJGx0+&#xA;9s1vZ8tPwiRHFLevLp5bvU/y1g1NPK3l/wBRl+pppNmoKkEO3oJRh7UynOY71ztw4ssurW3uoWgu&#xA;I1libqrD8fY++Y0ZEcmTzzy55U1u085au0NlHp+hrcCS3JiiLXCyr8ZYhn+y0QYU3NV5UIYZmzzg&#xA;xF/UxZxBpI9RpruVrh2IKxt9he+w7/Tt7DMY5Og2ZJhlSuxV2KuxV2KuxVbLDFNG0UyLJG2zI4DK&#xA;R7g4qptaQ+ksSKI40FERAAoHyG2S4irGvNf5caJ5qWzh1d5jbWcxmWGGRolk5IUZH4/ssrEHjQ++&#xA;WDLXRFMi0/TdP060is7C3jtrWBRHDDEoVVUdgBlUpE7lKJwK7FXYq7FXYq4gEEEVB2IOKsR1P8rv&#xA;K1xZGHS4W0G6V/Wt73Sz9WkSTiVrRKKy8SRxI6E0pl8dRIHff3sTFP8AT9LaCzt4ruc3tzFGizXD&#xA;KqerIqgNIUX4V5HenQZWZ92zJJPO3kGz8zi1YypbT2xcMzxmVJIpQOaMgeLq0aGte1KEHLMWcwYy&#xA;jav5P8h6J5UN6dMMhOoNHJP6pViGjXj8LcQ/EmrcSxVSTxAGVynYAqgGXmyPIK7FXYq7FXYqwXzr&#xA;+Wd75g1a01iy8x32m39hJ6tmnwS20TUAqkI9Pc0o1WNRmTh1AiKMQQWJjaKufLV8ml6hFLczy3Wp&#xA;QPHOYmAjjmkUgywBg7IeR5AMzBcGMQ4tmzxZbb7jk8m/Kr8v/wA1tP1zVZLiE2FiEePjdyH0ricu&#xA;pD8FL8wEr8dKb033zJ1WeJiBCrZ6Qw8W83EY9a5voW3jaO3ijbjyRFU8BxWoFPhHYZrmEqs1yf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:253d55d1-12ce-e347-9cd9-896c3bf0a26c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:253d55d1-12ce-e347-9cd9-896c3bf0a26c</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:88a78799-4ec8-4d14-aa40-8c7146fe5134</stRef:instanceID>
            <stRef:documentID>xmp.did:f68a7a36-c15f-ce4f-a2a7-4af92a0adecd</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3a20f972-edde-0b45-bb2e-054a8dc7c649</stEvt:instanceID>
                  <stEvt:when>2018-10-13T13:53:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4ce38ef9-21fb-b146-9e0c-42838ca9588c</stEvt:instanceID>
                  <stEvt:when>2020-01-30T12:15:18+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8848f875-d6f9-444c-b4de-f99195ae99fc</stEvt:instanceID>
                  <stEvt:when>2021-03-26T04:48:30+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:253d55d1-12ce-e347-9cd9-896c3bf0a26c</stEvt:instanceID>
                  <stEvt:when>2021-03-27T08:00:44+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=151 B=224</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>165</xmpG:red>
                           <xmpG:green>151</xmpG:green>
                           <xmpG:blue>223</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
229.892 315.842 mo
128.015 328.082 li
98.1616 245.257 li
200.038 233.016 li
229.892 315.842 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.74902 .745098 .929412 rgb
f
287.523 300.353 mo
223.183 337.501 li
132.585 285.193 li
196.925 248.045 li
287.523 300.353 li
.882353 .870588 .972549 rgb
f
266.997 318.815 mo
219.908 362.79 li
112.659 324.506 li
159.749 280.531 li
266.997 318.815 li
cp
.952941 .94902 .988235 rgb
f
312.13 280.868 mo
266.532 254.304 li
291.349 248.438 li
329.699 270.724 li
312.13 280.868 li
.145098 .160784 .337255 rgb
f
299.091 282.135 mo
253.494 255.571 li
256.829 257.509 261.444 257.241 266.532 254.304 cv
312.13 280.868 li
307.041 283.806 302.426 284.073 299.091 282.135 cv
.196078 .223529 .454902 rgb
f
gsave
299.091 282.135 mo
253.494 255.571 li
256.829 257.509 261.444 257.241 266.532 254.304 cv
312.13 280.868 li
307.041 283.806 302.426 284.073 299.091 282.135 cv
clp
299.091 282.135 mo
253.494 255.571 li
255.653 256.826 258.349 257.156 261.363 256.435 cv
306.961 282.999 li
303.947 283.72 301.25 283.39 299.091 282.135 cv
cp
.145098 .160784 .337255 rgb
f
306.961 282.999 mo
261.363 256.435 li
263.004 256.043 264.739 255.339 266.532 254.304 cv
312.13 280.868 li
310.336 281.903 308.601 282.607 306.961 282.999 cv
f
grestore
296.751 286.161 mo
251.153 259.597 li
247.267 257.338 244.854 252.541 244.834 245.731 cv
290.432 272.294 li
290.451 279.105 292.864 283.902 296.751 286.161 cv
cp
f
gsave
296.751 286.161 mo
251.153 259.597 li
247.267 257.338 244.853 252.541 244.834 245.731 cv
290.432 272.294 li
290.451 279.105 292.864 283.902 296.751 286.161 cv
clp
296.751 286.161 mo
251.153 259.597 li
247.968 257.746 245.773 254.191 245.073 249.219 cv
290.671 275.783 li
291.37 280.754 293.566 284.31 296.751 286.161 cv
cp
f
290.671 275.783 mo
245.073 249.219 li
244.919 248.124 244.838 246.96 244.834 245.731 cv
290.432 272.294 li
290.435 273.524 290.517 274.688 290.671 275.783 cv
cp
f
grestore
290.432 272.294 mo
244.834 245.731 li
244.723 206.415 li
290.32 232.979 li
290.432 272.294 li
cp
.235294 .262745 .517647 rgb
f
290.32 232.979 mo
244.723 206.415 li
248.028 204.507 li
293.625 231.071 li
290.32 232.979 li
cp
.196078 .223529 .454902 rgb
f
293.626 231.071 mo
293.737 270.386 li
293.77 281.997 302.015 286.707 312.13 280.868 cv
329.699 270.724 li
329.709 274.522 li
312.141 284.666 li
300.21 291.554 290.47 286.004 290.432 272.294 cv
290.32 232.979 li
293.626 231.071 li
.152941 .180392 .403922 rgb
f
190.996 44.5725 mo
184.502 48.3464 li
185.862 47.5562 187.747 47.6681 189.828 48.8699 cv
196.323 45.0963 li
194.241 43.8944 192.357 43.7817 190.996 44.5725 cv
cp
.929412 .92549 .972549 rgb
f
gsave
190.996 44.5725 mo
184.502 48.3465 li
185.862 47.5562 187.747 47.6681 189.828 48.8698 cv
196.322 45.0963 li
194.241 43.8944 192.357 43.7818 190.996 44.5725 cv
clp
189.828 48.8699 mo
196.323 45.0963 li
194.241 43.8944 192.357 43.7817 190.996 44.5725 cv
184.502 48.3464 li
185.862 47.5562 187.747 47.6681 189.828 48.8699 cv
cp
f
grestore
373.789 302.625 mo
380.284 298.851 li
381.627 298.071 382.459 296.41 382.466 294.049 cv
375.971 297.823 li
375.964 300.185 375.133 301.845 373.789 302.625 cv
cp
f
gsave
373.789 302.625 mo
380.284 298.851 li
381.627 298.071 382.459 296.41 382.466 294.049 cv
375.971 297.823 li
375.964 300.185 375.133 301.845 373.789 302.625 cv
clp
373.789 302.625 mo
380.284 298.851 li
381.627 298.071 382.459 296.41 382.466 294.049 cv
375.971 297.823 li
375.964 300.185 375.133 301.845 373.789 302.625 cv
cp
f
grestore
375.971 297.823 mo
382.466 294.049 li
382.842 161.396 li
376.347 165.171 li
375.971 297.823 li
cp
f
368.888 152.25 mo
375.383 148.476 li
196.323 45.0963 li
189.828 48.8699 li
368.888 152.25 li
cp
f
376.347 165.171 mo
382.842 161.396 li
382.855 156.643 379.518 150.864 375.383 148.476 cv
368.888 152.25 li
373.024 154.638 376.361 160.418 376.347 165.171 cv
cp
f
gsave
376.347 165.171 mo
382.842 161.396 li
382.855 156.643 379.518 150.864 375.383 148.476 cv
368.888 152.25 li
373.024 154.638 376.361 160.418 376.347 165.171 cv
clp
376.347 165.171 mo
382.842 161.396 li
382.855 156.643 379.518 150.864 375.383 148.476 cv
368.888 152.25 li
373.024 154.638 376.361 160.418 376.347 165.171 cv
cp
f
grestore
189.828 48.8699 mo
185.692 46.4818 182.333 48.3955 182.32 53.1482 cv
181.944 185.802 li
181.93 190.554 185.267 196.334 189.403 198.722 cv
368.463 302.102 li
372.599 304.49 375.958 302.576 375.971 297.823 cv
376.347 165.171 li
376.361 160.418 373.024 154.638 368.888 152.25 cv
189.828 48.8699 li
cp
.882353 .870588 .972549 rgb
f
371.999 288.74 mo
371.974 297.812 li
371.971 298.563 371.837 298.96 371.757 299.129 cv
371.576 299.115 371.146 299.035 370.461 298.64 cv
191.402 195.26 li
188.484 193.575 185.932 189.16 185.941 185.813 cv
185.954 181.323 li
371.999 288.74 li
cp
f
185.955 181.325 mo
371.996 288.737 li
372.005 285.778 li
372.349 165.16 li
372.357 161.81 369.807 157.397 366.888 155.709 cv
189.161 53.1027 li
187.826 52.3351 li
187.146 51.9357 186.715 51.8552 186.531 51.8387 cv
186.45 52.0157 186.323 52.407 186.314 53.1583 cv
185.955 181.325 li
cp
.705882 .643137 .960784 rgb
f
188.798 179.997 mo
360.118 278.918 li
372.004 285.776 li
372.086 256.1 li
372.183 222.161 li
372.264 194.069 li
372.346 165.158 li
372.354 161.812 369.809 157.394 366.887 155.713 cv
338.17 139.134 li
303.599 119.171 li
268.054 98.6503 li
215.313 68.2007 li
189.163 53.1023 li
188.798 179.997 li
cp
1 .411765 .552941 rgb
f
231.426 251.335 mo
231.449 258.224 li
231.439 255.187 229.416 252.158 225.388 249.867 cv
217.381 245.31 204.493 245.391 196.6 250.046 cv
192.676 252.359 190.724 255.365 190.734 258.364 cv
190.71 251.475 li
190.7 248.477 192.652 245.47 196.576 243.157 cv
204.47 238.503 217.356 238.421 225.364 242.978 cv
229.392 245.27 231.415 248.298 231.426 251.335 cv
.145098 .160784 .337255 rgb
f
gsave
231.426 251.335 mo
231.449 258.224 li
231.439 255.187 229.416 252.158 225.388 249.867 cv
217.381 245.31 204.493 245.391 196.6 250.046 cv
192.676 252.359 190.724 255.365 190.734 258.364 cv
190.71 251.475 li
190.7 248.477 192.652 245.47 196.576 243.157 cv
204.47 238.503 217.356 238.421 225.364 242.978 cv
229.392 245.27 231.415 248.298 231.426 251.335 cv
clp
231.426 251.335 mo
231.449 258.224 li
231.439 255.187 229.416 252.158 225.388 249.867 cv
217.381 245.31 204.493 245.391 196.6 250.046 cv
192.676 252.359 190.724 255.365 190.734 258.364 cv
190.71 251.475 li
190.7 248.477 192.652 245.47 196.576 243.157 cv
204.47 238.503 217.356 238.421 225.364 242.978 cv
229.392 245.27 231.415 248.298 231.426 251.335 cv
f
grestore
234.9 251.323 mo
234.915 256.844 li
234.927 260.354 232.642 263.873 228.052 266.58 cv
218.809 272.029 203.721 272.126 194.349 266.794 cv
189.634 264.111 187.265 260.565 187.252 257.008 cv
187.237 251.487 li
187.249 255.043 189.619 258.59 194.334 261.273 cv
203.705 266.605 218.794 266.508 228.037 261.059 cv
232.627 258.352 234.912 254.833 234.9 251.323 cv
f
gsave
234.9 251.323 mo
234.915 256.844 li
234.927 260.354 232.642 263.873 228.052 266.58 cv
218.809 272.029 203.721 272.126 194.349 266.794 cv
189.634 264.111 187.265 260.565 187.252 257.008 cv
187.237 251.487 li
187.249 255.043 189.619 258.59 194.334 261.273 cv
203.705 266.605 218.794 266.508 228.037 261.059 cv
232.627 258.352 234.912 254.833 234.9 251.323 cv
clp
234.9 251.323 mo
234.915 256.844 li
234.927 260.354 232.642 263.873 228.052 266.58 cv
218.809 272.029 203.721 272.126 194.349 266.794 cv
189.634 264.111 187.265 260.565 187.252 257.008 cv
187.237 251.487 li
187.249 255.043 189.619 258.59 194.334 261.273 cv
203.705 266.605 218.794 266.508 228.037 261.059 cv
232.627 258.352 234.912 254.833 234.9 251.323 cv
f
grestore
196.775 259.834 mo
204.778 264.388 217.665 264.307 225.563 259.651 cv
233.457 254.996 233.368 247.532 225.364 242.978 cv
217.356 238.421 204.47 238.503 196.576 243.157 cv
188.678 247.813 188.767 255.277 196.775 259.834 cv
227.804 241.539 mo
237.176 246.871 237.276 255.611 228.037 261.059 cv
218.794 266.508 203.705 266.605 194.334 261.273 cv
184.963 255.941 184.858 247.199 194.102 241.75 cv
203.341 236.302 218.433 236.207 227.804 241.539 cv
.235294 .262745 .517647 rgb
f
220.703 261.773 mo
207.696 254.264 li
205.091 247.037 li
207.069 246.68 209.12 246.502 211.172 246.502 cv
216.308 246.502 221.441 247.621 225.388 249.867 cv
227.874 251.282 229.597 252.977 230.554 254.782 cv
230.549 254.792 230.544 254.801 230.539 254.811 cv
229.607 256.574 227.948 258.24 225.561 259.649 cv
224.093 260.515 222.452 261.224 220.703 261.773 cv
.952941 .948235 .98902 rgb
f
207.696 254.264 mo
198.598 249.011 li
200.581 248.111 202.785 247.453 205.091 247.037 cv
207.696 254.264 li
.803922 .796078 .945098 rgb
f
210.984 263.197 mo
205.85 263.197 200.719 262.078 196.775 259.834 cv
194.287 258.418 192.563 256.722 191.606 254.916 cv
192.532 253.14 194.196 251.463 196.6 250.046 cv
197.235 249.671 197.903 249.326 198.598 249.011 cv
207.696 254.264 li
220.703 261.773 li
220.343 261.886 219.98 261.992 219.612 262.092 cv
216.884 262.828 213.934 263.197 210.984 263.197 cv
.882353 .870588 .972549 rgb
f
191.606 254.916 mo
191.286 254.313 191.052 253.697 190.903 253.076 cv
191.464 250.618 193.361 248.241 196.596 246.336 cv
200.598 243.975 205.886 242.791 211.169 242.791 cv
216.305 242.791 221.438 243.91 225.386 246.155 cv
228.7 248.044 230.658 250.425 231.252 252.901 cv
231.108 253.535 230.876 254.165 230.554 254.782 cv
229.597 252.977 227.874 251.282 225.388 249.867 cv
221.441 247.621 216.308 246.502 211.172 246.502 cv
209.12 246.502 207.069 246.68 205.091 247.037 cv
202.785 247.453 200.581 248.111 198.598 249.011 cv
197.903 249.326 197.235 249.671 196.6 250.046 cv
194.196 251.463 192.532 253.14 191.606 254.916 cv
.439216 .443137 .592157 rgb
f
210.983 263.199 mo
205.849 263.199 200.72 262.08 196.776 259.835 cv
193.452 257.944 191.493 255.558 190.902 253.08 cv
190.902 253.078 190.903 253.077 190.903 253.076 cv
191.052 253.697 191.286 254.313 191.606 254.916 cv
192.563 256.722 194.287 258.418 196.775 259.834 cv
200.719 262.078 205.85 263.197 210.984 263.197 cv
213.934 263.197 216.884 262.828 219.612 262.092 cv
216.884 262.829 213.932 263.199 210.983 263.199 cv
230.539 254.811 mo
230.544 254.801 230.549 254.792 230.554 254.782 cv
230.876 254.165 231.108 253.535 231.252 252.901 cv
231.253 252.904 231.254 252.907 231.254 252.911 cv
231.107 253.552 230.868 254.187 230.539 254.811 cv
.494118 .505882 .698039 rgb
f
243.998 270.33 mo
229.157 261.773 li
228.805 261.571 228.318 261.601 227.782 261.913 cv
242.624 270.469 li
243.16 270.157 243.646 270.126 243.998 270.33 cv
cp
.882353 .870588 .972549 rgb
f
gsave
243.998 270.33 mo
229.157 261.773 li
228.805 261.571 228.318 261.601 227.782 261.913 cv
242.624 270.469 li
243.16 270.157 243.646 270.126 243.998 270.33 cv
clp
243.998 270.33 mo
229.157 261.773 li
228.805 261.571 228.318 261.601 227.782 261.913 cv
242.624 270.469 li
243.16 270.157 243.646 270.126 243.998 270.33 cv
cp
f
grestore
226.438 266.489 mo
241.279 275.045 li
240.932 274.844 240.715 274.417 240.712 273.808 cv
240.704 272.583 241.56 271.088 242.624 270.469 cv
227.782 261.913 li
226.719 262.532 225.863 264.027 225.87 265.252 cv
225.874 265.861 226.091 266.289 226.438 266.489 cv
cp
f
gsave
226.438 266.489 mo
241.279 275.045 li
240.932 274.844 240.715 274.417 240.712 273.808 cv
240.704 272.583 241.56 271.088 242.624 270.469 cv
227.782 261.913 li
226.719 262.532 225.863 264.027 225.87 265.252 cv
225.874 265.861 226.091 266.289 226.438 266.489 cv
clp
242.624 270.469 mo
227.782 261.913 li
226.719 262.532 225.863 264.027 225.87 265.252 cv
225.874 265.861 226.091 266.289 226.438 266.489 cv
241.279 275.045 li
240.932 274.844 240.715 274.417 240.712 273.808 cv
240.704 272.583 241.56 271.088 242.624 270.469 cv
cp
f
grestore
242.624 270.469 mo
241.56 271.088 240.704 272.583 240.712 273.808 cv
240.72 275.034 241.588 275.525 242.652 274.906 cv
243.716 274.286 244.573 272.791 244.565 271.565 cv
244.558 270.341 243.688 269.849 242.624 270.469 cv
cp
f
271.289 282.277 mo
238.614 264.667 li
237.967 264.297 237.074 264.355 236.093 264.931 cv
268.262 282.593 li
269.441 281.902 270.512 281.832 271.289 282.277 cv
cp
.196078 .223529 .454902 rgb
f
gsave
271.289 282.277 mo
238.614 264.667 li
237.967 264.297 237.074 264.355 236.093 264.931 cv
268.262 282.593 li
269.441 281.902 270.512 281.832 271.289 282.277 cv
clp
271.289 282.277 mo
238.614 264.667 li
237.967 264.297 237.074 264.355 236.093 264.931 cv
268.262 282.593 li
269.441 281.902 270.512 281.832 271.289 282.277 cv
cp
f
grestore
233.646 273.339 mo
265.327 292.681 li
264.561 292.243 264.082 291.303 264.07 289.962 cv
264.045 287.262 265.923 283.963 268.262 282.593 cv
236.093 264.931 li
234.143 266.073 232.578 268.822 232.599 271.072 cv
232.609 272.19 233.008 272.973 233.646 273.339 cv
cp
f
gsave
233.646 273.339 mo
265.327 292.681 li
264.561 292.243 264.082 291.303 264.07 289.962 cv
264.045 287.262 265.923 283.963 268.262 282.593 cv
236.093 264.931 li
234.143 266.073 232.578 268.822 232.599 271.072 cv
232.609 272.19 233.008 272.973 233.646 273.339 cv
clp
264.07 289.962 mo
264.045 287.262 265.923 283.963 268.262 282.593 cv
236.093 264.931 li
234.143 266.073 232.578 268.822 232.599 271.072 cv
264.07 289.962 li
cp
.235294 .262745 .517647 rgb
f
232.599 271.072 mo
232.609 272.19 233.008 272.973 233.646 273.339 cv
265.327 292.681 li
264.561 292.243 264.082 291.303 264.07 289.962 cv
232.599 271.072 li
cp
.196078 .223529 .454902 rgb
f
grestore
268.262 282.593 mo
265.923 283.963 264.045 287.262 264.07 289.962 cv
264.094 292.661 266.012 293.737 268.352 292.366 cv
270.693 290.995 272.571 287.697 272.546 284.996 cv
272.521 282.296 270.604 281.221 268.262 282.593 cv
cp
.152941 .180392 .403922 rgb
f
208.814 152.285 mo
216.165 148.014 li
216.154 152.02 218.241 153.297 220.165 154.407 cv
220.377 154.53 li
213.026 158.802 li
212.814 158.679 li
210.891 157.569 208.802 156.292 208.814 152.285 cv
cp
.145098 .160784 .337255 rgb
f
gsave
208.814 152.285 mo
216.165 148.014 li
216.154 152.02 218.241 153.297 220.165 154.407 cv
220.377 154.53 li
213.026 158.802 li
212.814 158.679 li
210.891 157.569 208.803 156.292 208.814 152.285 cv
clp
208.814 152.285 mo
216.165 148.014 li
216.154 152.02 218.241 153.297 220.165 154.407 cv
220.377 154.53 li
213.026 158.802 li
212.814 158.679 li
210.891 157.569 208.802 156.292 208.814 152.285 cv
cp
.74902 .745098 .929412 rgb
f
grestore
213.026 158.802 mo
220.377 154.53 li
234.427 162.641 li
227.077 166.913 li
213.026 158.802 li
cp
.74902 .745098 .929412 rgb
f
227.077 166.913 mo
234.427 162.641 li
234.388 176.272 li
227.038 180.544 li
227.077 166.913 li
cp
f
208.927 112.639 mo
216.277 108.367 li
216.165 148.014 li
208.814 152.285 li
208.927 112.639 li
cp
f
195.694 105 mo
203.045 100.728 li
216.277 108.367 li
208.927 112.639 li
195.694 105 li
cp
f
208.927 112.639 mo
208.814 152.285 li
208.802 156.292 210.891 157.569 212.814 158.679 cv
213.026 158.802 li
227.077 166.913 li
227.038 180.544 li
206.852 168.89 li
200.649 165.309 195.541 158.987 195.566 150.133 cv
195.694 105 li
208.927 112.639 li
cp
.929412 .92549 .972549 rgb
f
262.021 177.093 mo
254.67 181.364 li
253.521 182.033 251.859 181.528 249.507 180.17 cv
256.858 175.898 li
259.21 177.256 260.872 177.761 262.021 177.093 cv
cp
1 .768627 0 rgb
f
gsave
262.021 177.093 mo
254.67 181.364 li
253.521 182.033 251.859 181.528 249.507 180.17 cv
256.858 175.898 li
259.21 177.256 260.872 177.761 262.021 177.093 cv
clp
249.507 180.17 mo
256.858 175.898 li
259.21 177.256 260.872 177.761 262.021 177.093 cv
254.67 181.364 li
253.521 182.033 251.859 181.528 249.507 180.17 cv
cp
f
grestore
244.299 147.948 mo
251.649 143.677 li
250.002 144.634 249.494 148.367 249.47 156.645 cv
249.437 168.636 250.17 172.037 256.858 175.898 cv
249.507 180.17 li
242.819 176.309 242.086 172.907 242.12 160.916 cv
242.143 152.639 242.652 148.905 244.299 147.948 cv
cp
f
gsave
244.299 147.948 mo
251.649 143.677 li
250.002 144.634 249.494 148.367 249.47 156.645 cv
249.437 168.636 250.17 172.037 256.858 175.898 cv
249.507 180.17 li
242.819 176.309 242.086 172.907 242.12 160.916 cv
242.143 152.639 242.652 148.905 244.299 147.948 cv
clp
244.299 147.948 mo
251.649 143.676 li
250.002 144.634 249.494 148.367 249.47 156.645 cv
249.437 168.636 250.17 172.037 256.858 175.898 cv
249.507 180.17 li
242.819 176.309 242.086 172.907 242.12 160.916 cv
242.143 152.639 242.652 148.905 244.299 147.948 cv
cp
f
grestore
234.636 132.144 mo
241.987 127.872 li
245.757 125.682 251.072 128.062 256.983 131.475 cv
249.633 135.747 li
243.721 132.334 238.406 129.953 234.636 132.144 cv
cp
f
gsave
234.636 132.144 mo
241.987 127.872 li
245.757 125.682 251.072 128.062 256.983 131.475 cv
249.633 135.747 li
243.721 132.334 238.406 129.953 234.636 132.144 cv
clp
234.636 132.144 mo
241.987 127.872 li
245.757 125.682 251.072 128.062 256.983 131.475 cv
249.633 135.747 li
243.721 132.334 238.406 129.953 234.636 132.144 cv
cp
f
grestore
272.01 193.213 mo
264.66 197.485 li
268.152 195.455 270.176 189.501 270.211 177.135 cv
270.287 150.256 261.429 142.557 249.633 135.747 cv
256.983 131.475 li
268.78 138.285 277.638 145.984 277.562 172.863 cv
277.527 185.229 275.503 191.183 272.01 193.213 cv
cp
f
gsave
272.01 193.213 mo
264.66 197.485 li
268.152 195.455 270.176 189.501 270.211 177.135 cv
270.287 150.256 261.429 142.557 249.633 135.747 cv
256.983 131.475 li
268.78 138.285 277.638 145.984 277.562 172.863 cv
277.527 185.229 275.503 191.183 272.01 193.213 cv
clp
249.633 135.747 mo
256.983 131.475 li
268.78 138.285 277.638 145.984 277.562 172.863 cv
277.527 185.229 275.503 191.183 272.01 193.213 cv
264.66 197.485 li
268.152 195.455 270.176 189.501 270.211 177.135 cv
270.287 150.256 261.429 142.557 249.633 135.747 cv
cp
f
grestore
249.507 180.17 mo
255.367 183.553 256.944 181.639 256.979 169.495 cv
257.017 156.181 255.797 152.958 249.594 149.378 cv
243.592 145.912 242.16 146.892 242.12 160.916 cv
242.086 172.907 242.819 176.309 249.507 180.17 cv
cp
249.633 135.747 mo
261.429 142.557 270.287 150.256 270.211 177.135 cv
270.139 202.44 261.74 200.897 249.468 193.812 cv
237.197 186.727 228.814 179.369 228.887 153.277 cv
228.964 126.397 238.179 129.134 249.633 135.747 cv
cp
.992157 .85098 .372549 rgb
f
304.361 214.502 mo
297.01 218.774 li
297.416 218.538 297.804 218.209 298.233 217.805 cv
305.583 213.534 li
305.155 213.938 304.767 214.266 304.361 214.502 cv
cp
.145098 .160784 .337255 rgb
f
gsave
304.361 214.502 mo
297.01 218.774 li
297.416 218.538 297.804 218.209 298.233 217.805 cv
305.583 213.534 li
305.155 213.938 304.767 214.266 304.361 214.502 cv
clp
298.233 217.805 mo
305.583 213.534 li
305.155 213.938 304.767 214.266 304.361 214.502 cv
297.01 218.774 li
297.416 218.538 297.804 218.209 298.233 217.805 cv
cp
.74902 .745098 .929412 rgb
f
grestore
289.179 173.016 mo
296.53 168.744 li
294.663 169.829 294.224 173.953 294.201 181.922 cv
294.165 194.777 294.567 197.44 300.57 200.905 cv
302.566 202.057 303.766 201.984 304.48 201.569 cv
297.129 205.841 li
296.415 206.256 295.215 206.329 293.219 205.177 cv
287.216 201.711 286.814 199.049 286.85 186.194 cv
286.873 178.225 287.312 174.1 289.179 173.016 cv
cp
f
gsave
289.179 173.015 mo
296.53 168.743 li
294.663 169.829 294.224 173.953 294.201 181.922 cv
294.165 194.777 294.567 197.44 300.57 200.905 cv
302.566 202.057 303.766 201.984 304.48 201.569 cv
297.129 205.841 li
296.415 206.256 295.215 206.329 293.219 205.177 cv
287.216 201.711 286.814 199.049 286.85 186.194 cv
286.873 178.225 287.312 174.1 289.179 173.015 cv
clp
289.179 173.016 mo
296.53 168.744 li
294.663 169.829 294.224 173.953 294.201 181.922 cv
294.165 194.777 294.567 197.44 300.57 200.905 cv
302.566 202.057 303.766 201.984 304.48 201.569 cv
297.129 205.841 li
296.415 206.256 295.215 206.329 293.219 205.177 cv
287.216 201.711 286.814 199.049 286.85 186.194 cv
286.873 178.225 287.312 174.1 289.179 173.016 cv
cp
.74902 .745098 .929412 rgb
f
grestore
279.095 157.043 mo
286.446 152.771 li
288.968 151.306 292.563 151.776 297.623 154.697 cv
290.272 158.969 li
285.213 156.048 281.617 155.578 279.095 157.043 cv
cp
f
gsave
279.095 157.043 mo
286.446 152.771 li
288.968 151.306 292.563 151.776 297.623 154.697 cv
290.272 158.969 li
285.213 156.048 281.617 155.578 279.095 157.043 cv
clp
279.095 157.043 mo
286.446 152.771 li
288.968 151.306 292.563 151.776 297.623 154.697 cv
290.272 158.969 li
285.213 156.048 281.617 155.578 279.095 157.043 cv
cp
.74902 .745098 .929412 rgb
f
grestore
294.842 187.195 mo
302.192 182.923 li
305.261 182.812 309.627 185.256 314.127 187.854 cv
315.564 188.683 317.123 189.66 318.769 190.774 cv
311.418 195.046 li
309.773 193.932 308.213 192.955 306.776 192.125 cv
302.277 189.527 297.91 187.083 294.842 187.195 cv
cp
f
gsave
294.842 187.195 mo
302.192 182.923 li
305.261 182.812 309.627 185.256 314.127 187.854 cv
315.564 188.683 317.123 189.66 318.769 190.774 cv
311.418 195.046 li
309.773 193.932 308.213 192.955 306.776 192.125 cv
302.277 189.527 297.91 187.083 294.842 187.195 cv
clp
294.842 187.195 mo
302.192 182.923 li
305.261 182.812 309.627 185.256 314.127 187.854 cv
315.564 188.683 317.123 189.66 318.769 190.774 cv
311.418 195.046 li
309.773 193.932 308.213 192.955 306.776 192.125 cv
302.277 189.527 297.91 187.083 294.842 187.195 cv
cp
.74902 .745098 .929412 rgb
f
grestore
311.418 195.046 mo
318.769 190.774 li
318.672 224.933 li
311.321 229.205 li
311.418 195.046 li
cp
.74902 .745098 .929412 rgb
f
310.992 173.844 mo
318.343 169.572 li
318.31 181.247 li
310.959 185.518 li
310.992 173.844 li
cp
f
290.272 158.969 mo
297.623 154.697 li
308.467 160.958 309.152 161.354 318.343 169.572 cv
310.992 173.844 li
301.802 165.625 301.116 165.23 290.272 158.969 cv
cp
.145098 .160784 .337255 rgb
f
gsave
290.272 158.969 mo
297.623 154.697 li
308.467 160.958 309.152 161.353 318.343 169.572 cv
310.992 173.844 li
301.802 165.625 301.116 165.23 290.272 158.969 cv
clp
290.272 158.969 mo
297.623 154.697 li
308.467 160.958 309.152 161.354 318.343 169.572 cv
310.992 173.844 li
301.802 165.625 301.116 165.23 290.272 158.969 cv
cp
.74902 .745098 .929412 rgb
f
grestore
290.272 158.969 mo
301.116 165.23 301.802 165.625 310.992 173.844 cv
310.959 185.518 li
310.55 185.282 302.992 179.189 294.326 174.186 cv
287.991 170.528 286.886 173.427 286.85 186.194 cv
286.814 199.049 287.216 201.711 293.219 205.177 cv
297.442 207.616 298.103 204.564 298.137 204.404 cv
298.154 198.523 li
294.815 196.595 li
294.842 187.195 li
297.91 187.083 302.277 189.527 306.776 192.125 cv
308.213 192.955 309.773 193.932 311.418 195.046 cv
311.321 229.205 li
301.97 223.806 li
298.233 217.805 li
296.322 219.604 295.226 219.912 289.764 217.153 cv
289.288 216.913 288.825 216.662 288.375 216.403 cv
275.515 208.978 273.574 193.991 273.619 178.401 cv
273.668 160.923 276.707 151.137 290.272 158.969 cv
cp
.929412 .92549 .972549 rgb
f
349.101 227.368 mo
341.751 231.64 li
340.601 232.308 338.939 231.803 336.587 230.445 cv
343.938 226.174 li
346.29 227.532 347.952 228.036 349.101 227.368 cv
cp
.145098 .160784 .337255 rgb
f
gsave
349.101 227.368 mo
341.751 231.64 li
340.601 232.308 338.939 231.804 336.587 230.445 cv
343.938 226.174 li
346.29 227.532 347.952 228.036 349.101 227.368 cv
clp
336.587 230.445 mo
343.938 226.174 li
346.29 227.532 347.952 228.036 349.101 227.368 cv
341.751 231.64 li
340.601 232.308 338.939 231.803 336.587 230.445 cv
cp
.74902 .745098 .929412 rgb
f
grestore
331.373 198.223 mo
338.724 193.951 li
337.076 194.909 336.564 198.641 336.541 206.915 cv
336.507 218.906 337.25 222.313 343.938 226.174 cv
336.587 230.445 li
329.899 226.585 329.156 223.178 329.19 211.186 cv
329.214 202.912 329.725 199.181 331.373 198.223 cv
cp
f
gsave
331.373 198.223 mo
338.724 193.951 li
337.076 194.909 336.564 198.641 336.541 206.915 cv
336.507 218.906 337.25 222.313 343.938 226.174 cv
336.587 230.445 li
329.899 226.585 329.156 223.178 329.19 211.186 cv
329.214 202.912 329.725 199.181 331.373 198.223 cv
clp
331.373 198.223 mo
338.724 193.951 li
337.076 194.909 336.564 198.641 336.541 206.915 cv
336.507 218.906 337.25 222.313 343.938 226.174 cv
336.587 230.445 li
329.899 226.585 329.156 223.178 329.19 211.186 cv
329.214 202.912 329.725 199.181 331.373 198.223 cv
cp
.74902 .745098 .929412 rgb
f
grestore
321.714 182.417 mo
329.065 178.145 li
332.833 175.955 338.148 178.335 344.063 181.75 cv
336.713 186.022 li
330.797 182.607 325.483 180.227 321.714 182.417 cv
cp
f
gsave
321.714 182.417 mo
329.065 178.145 li
332.833 175.955 338.148 178.335 344.063 181.75 cv
336.713 186.022 li
330.797 182.607 325.483 180.227 321.714 182.417 cv
clp
321.714 182.417 mo
329.065 178.145 li
332.833 175.955 338.148 178.335 344.063 181.75 cv
336.713 186.022 li
330.797 182.607 325.483 180.227 321.714 182.417 cv
cp
.74902 .745098 .929412 rgb
f
grestore
359.09 243.489 mo
351.74 247.76 li
355.232 245.731 357.256 239.776 357.291 227.41 cv
357.367 200.531 348.509 192.833 336.713 186.022 cv
344.063 181.75 li
355.859 188.561 364.718 196.26 364.642 223.138 cv
364.607 235.504 362.583 241.459 359.09 243.489 cv
cp
f
gsave
359.09 243.488 mo
351.74 247.76 li
355.232 245.731 357.256 239.776 357.291 227.41 cv
357.367 200.531 348.509 192.833 336.713 186.022 cv
344.063 181.75 li
355.859 188.561 364.718 196.26 364.642 223.138 cv
364.607 235.504 362.583 241.459 359.09 243.488 cv
clp
336.713 186.022 mo
344.063 181.75 li
355.859 188.561 364.718 196.26 364.642 223.138 cv
364.607 235.504 362.583 241.459 359.09 243.489 cv
351.74 247.76 li
355.232 245.731 357.256 239.776 357.291 227.41 cv
357.367 200.531 348.509 192.833 336.713 186.022 cv
cp
.74902 .745098 .929412 rgb
f
grestore
336.587 230.445 mo
342.447 233.829 344.024 231.915 344.059 219.77 cv
344.096 206.457 342.876 203.234 336.674 199.653 cv
330.671 196.188 329.23 197.162 329.19 211.186 cv
329.156 223.178 329.899 226.585 336.587 230.445 cv
cp
336.713 186.022 mo
348.509 192.833 357.367 200.531 357.291 227.41 cv
357.219 252.715 348.82 251.172 336.548 244.087 cv
324.267 236.997 315.894 229.644 315.967 203.552 cv
316.044 176.673 325.25 179.404 336.713 186.022 cv
cp
.929412 .92549 .972549 rgb
f
156.462 271.407 mo
156.469 269.135 157.974 266.865 160.976 265.131 cv
163.979 263.398 167.91 262.529 171.845 262.525 cv
156.462 271.407 li
.721569 .717647 .913725 rgb
f
171.876 280.324 mo
167.931 280.324 163.986 279.455 160.976 277.718 cv
157.959 275.975 156.454 273.69 156.462 271.407 cv
171.845 262.525 li
171.855 262.525 171.866 262.525 171.876 262.525 cv
175.821 262.525 179.766 263.394 182.776 265.131 cv
188.795 268.607 188.795 274.242 182.776 277.718 cv
179.766 279.455 175.821 280.324 171.876 280.324 cv
.85098 .835294 .956863 rgb
f
161.607 267.236 mo
161.7 266.943 161.887 266.786 162.418 266.742 cv
163.046 266.691 163.676 266.662 164.305 266.623 cv
165.157 266.568 166.007 266.514 166.858 266.459 cv
166.815 265.77 166.796 265.07 166.72 264.385 cv
167.625 264.579 168.127 264.314 168.994 263.994 cv
170.014 263.617 171.049 263.276 172.094 262.972 cv
172.541 262.843 173.008 262.719 173.464 262.812 cv
174.614 263.047 175.242 264.94 175.087 265.933 cv
174.979 266.637 174.502 267.236 173.944 267.676 cv
173.106 268.337 171.926 268.875 170.871 269.034 cv
169.739 269.203 168.7 269.556 167.788 270.27 cv
166.609 271.193 165.768 272.167 164.205 272.278 cv
162.636 272.391 161.335 271.439 161.275 269.818 cv
161.254 269.236 161.355 268.658 161.457 268.086 cv
161.521 267.727 161.54 267.446 161.607 267.236 cv
cp
.145098 .160784 .337255 rgb
f
169.576 271.118 mo
169.577 270.994 169.574 270.87 169.566 270.745 cv
169.483 269.469 169.974 268.392 170.439 267.213 cv
170.612 266.773 170.802 266.312 171.171 266.018 cv
172.013 265.347 173.349 265.934 173.883 266.87 cv
174.131 267.303 174.269 267.791 174.49 268.239 cv
174.914 269.087 175.763 270.099 176.788 270.146 cv
178.164 270.208 179.711 269.734 181.105 269.65 cv
181.649 269.617 182.211 269.599 182.716 269.802 cv
183.906 270.283 184.248 272.203 183.823 273.273 cv
183.562 273.934 182.966 274.413 182.323 274.719 cv
181.36 275.178 180.089 275.443 179.024 275.363 cv
177.883 275.278 176.792 275.392 175.744 275.885 cv
173.948 276.734 171.86 277.953 170.045 276.301 cv
169.56 275.858 169.323 275.197 169.267 274.543 cv
169.166 273.386 169.559 272.266 169.576 271.118 cv
cp
f
164.726 213.657 mo
165.567 214.554 168.875 213.034 168.931 212.607 cv
172.896 209.702 172.11 221.709 170.864 226.455 cv
170.197 229.014 170.188 235.124 169.76 237.729 cv
169.283 240.632 168.59 243.501 167.689 246.302 cv
167.496 246.908 167.279 247.533 166.83 247.982 cv
165.904 248.914 164.385 248.781 163.096 248.533 cv
161.98 248.32 160.734 247.969 160.209 246.961 cv
159.885 246.34 159.916 245.604 159.94 244.904 cv
160.001 243.06 160.065 241.155 159.746 239.333 cv
159.406 237.39 159.159 232.02 158.82 230.076 cv
158.523 228.376 158.226 226.672 158.101 224.95 cv
157.878 221.838 158.223 218.713 158.785 215.653 cv
159.08 214.047 158.626 211.01 160.925 210.746 cv
163.005 210.508 164.165 213.059 164.726 213.657 cv
cp
.152941 .180392 .403922 rgb
f
167.254 245.271 mo
166.614 244.333 164.966 244.336 164.409 244.566 cv
163.971 244.746 160.867 242.852 159.959 242.131 cv
160.028 242.185 159.882 242.945 159.872 243.06 cv
159.843 243.379 159.815 243.699 159.79 244.019 cv
159.738 244.649 159.692 245.281 159.652 245.913 cv
159.573 247.149 159.519 248.385 159.493 249.624 cv
159.444 252.048 159.513 254.474 159.732 256.889 cv
159.954 259.354 160.334 261.804 160.869 264.222 cv
161.072 265.146 161.297 266.067 161.543 266.981 cv
161.742 267.717 161.994 268.53 162.67 268.972 cv
163.008 269.191 163.41 269.281 163.807 269.343 cv
164.198 269.404 164.595 269.443 164.988 269.396 cv
165.405 269.346 165.857 269.194 166.144 268.873 cv
166.469 268.51 166.692 268.027 166.841 267.566 cv
167.104 266.746 167.15 265.874 167.18 265.012 cv
167.321 260.967 167.148 256.916 167.252 252.87 cv
167.333 249.75 167.585 246.613 168.257 243.572 cv
167.254 245.271 li
cp
f
170.417 215.812 mo
170.787 215.613 172.677 214.621 172.653 214.103 cv
172.635 213.755 173.57 213.449 173.813 213.448 cv
174.25 213.449 174.697 213.723 175.055 213.969 cv
175.937 214.575 176.595 215.52 177.01 216.536 cv
177.579 217.932 177.737 219.473 177.85 220.989 cv
178.183 225.509 178.209 233.484 177.812 237.997 cv
177.61 240.276 177.316 242.544 176.93 244.796 cv
176.738 245.922 176.522 247.042 176.283 248.158 cv
176.056 249.231 175.84 249.569 174.953 250.149 cv
173.052 251.394 169.582 251.296 168.166 249.144 cv
166.643 246.828 167.193 243.167 166.672 240.541 cv
165.915 236.724 163.253 230.535 162.017 226.919 cv
161.107 224.263 161.178 221.741 161.58 219.01 cv
161.769 217.72 162.112 214.635 163.409 213.859 cv
163.753 213.653 166.102 213.074 168.044 214.934 cv
169.179 216.02 169.058 216.543 170.417 215.812 cv
cp
.235294 .262745 .517647 rgb
f
157.569 204.504 mo
157.486 203.83 157.385 203.157 157.267 202.487 cv
156.702 199.275 155.741 196.138 155.336 192.897 cv
155.023 190.381 154.797 187.243 156.793 185.297 cv
157.119 184.981 157.493 184.717 157.888 184.495 cv
161.767 182.304 165.478 184.972 169.113 186.281 cv
171.502 187.142 173.792 188.27 175.931 189.638 cv
176.676 190.114 177.439 190.44 177.939 191.18 cv
178.471 191.966 178.755 192.815 178.81 193.764 cv
178.871 194.842 178.672 195.915 178.493 196.979 cv
177.447 203.176 178.019 208.533 177.868 214.816 cv
177.839 216.02 177.772 217.392 177.788 218.597 cv
177.798 219.344 176.928 220.972 176.928 220.972 cv
176.928 220.972 172.425 222.024 167.146 221.694 cv
161.608 221.349 158.961 221.818 158.236 220.961 cv
157.778 220.421 157.931 219.427 157.896 218.753 cv
157.848 217.835 157.812 216.914 157.834 215.994 cv
157.923 212.164 158.048 208.316 157.569 204.504 cv
cp
.882353 .870588 .972549 rgb
f
157.904 219.651 mo
157.911 220.14 157.958 220.633 158.236 220.961 cv
158.961 221.818 161.617 222.532 167.155 222.878 cv
172.434 223.207 177.852 221.023 177.852 221.023 cv
177.852 221.023 177.799 219.444 177.788 218.597 cv
172.021 221.27 164.387 220.676 157.904 219.651 cv
cp
.145098 .160784 .337255 rgb
f
172.486 220.135 mo
172.486 220.958 172.486 221.709 172.486 222.502 cv
173.001 222.409 173.484 222.304 173.949 222.195 cv
173.949 221.446 173.949 220.627 173.949 219.857 cv
173.467 219.963 172.98 220.057 172.486 220.135 cv
cp
.235294 .262745 .517647 rgb
f
164.134 220.381 mo
163.537 220.338 162.941 220.29 162.349 220.229 cv
162.37 220.901 162.535 221.642 162.624 222.423 cv
162.997 222.479 163.721 222.861 164.142 222.911 cv
164.211 222.256 164.194 221.108 164.134 220.381 cv
cp
f
176.185 249.948 mo
176.052 251.913 175.932 253.878 175.831 255.844 cv
175.75 257.399 175.68 258.955 175.627 260.512 cv
175.587 261.71 175.556 262.908 175.535 264.108 cv
175.427 270.671 176.147 272.133 173.07 273.04 cv
172.38 273.243 171.645 273.313 170.944 273.154 cv
168.922 272.692 168.541 270.928 168.253 268.739 cv
168.092 267.508 168 266.023 167.938 264.776 cv
167.885 263.724 167.844 262.669 167.808 261.615 cv
167.757 260.189 167.716 258.763 167.675 257.336 cv
167.623 255.454 167.573 253.573 167.527 251.691 cv
167.465 249.285 167.215 246.833 167.155 244.426 cv
167.146 244.077 167.361 243.71 167.636 243.521 cv
167.993 243.276 175.289 245.795 176.041 246.603 cv
176.041 246.603 176.349 247.52 176.185 249.948 cv
cp
f
170.083 183.777 mo
170.223 183.002 170.951 183.182 170.583 182.479 cv
170.271 181.883 169.798 181.334 169.162 180.937 cv
168.528 180.542 167.725 180.308 166.923 180.343 cv
166.647 180.355 166.463 180.483 166.189 180.484 cv
165.432 180.486 164.673 180.369 163.918 180.458 cv
163.165 180.545 162.471 180.589 162.471 181.273 cv
162.472 182.185 162.426 183.287 162.064 184.183 cv
161.87 184.662 161.845 184.546 161.793 185.047 cv
161.691 186.035 162.914 186.664 164.019 187.095 cv
165.377 187.625 166.376 187.534 167.822 187.364 cv
168.547 187.28 169.338 187.384 169.764 186.826 cv
170.083 186.407 170.218 186.32 170.149 185.861 cv
170.044 185.164 169.956 184.477 170.083 183.777 cv
cp
1 .780392 .678431 rgb
f
162.064 184.183 mo
161.793 184.468 161.544 185.025 161.522 185.234 cv
161.42 186.221 162.488 186.972 163.592 187.403 cv
164.951 187.933 166.417 188.219 167.862 188.05 cv
168.587 187.965 169.609 187.849 170.034 187.291 cv
170.329 186.905 170.237 186.411 170.167 185.977 cv
166.737 186.859 164.471 185.347 162.064 184.183 cv
cp
.929412 .92549 .972549 rgb
f
168.453 168.676 mo
165.303 170.507 li
165.527 170.378 165.835 170.395 166.174 170.59 cv
169.323 168.76 li
169.127 168.647 168.942 168.593 168.777 168.593 cv
168.657 168.593 168.547 168.622 168.453 168.676 cv
cp
.145098 .160784 .337255 rgb
f
gsave
168.453 168.676 mo
165.303 170.507 li
165.527 170.378 165.835 170.395 166.174 170.59 cv
169.323 168.76 li
169.127 168.647 168.942 168.593 168.777 168.593 cv
168.657 168.593 168.547 168.622 168.453 168.676 cv
clp
166.173 170.59 mo
169.323 168.76 li
168.985 168.564 168.677 168.547 168.453 168.676 cv
165.303 170.507 li
165.527 170.378 165.835 170.395 166.173 170.59 cv
cp
.498039 .537255 .65098 rgb
f
grestore
173.329 170.836 mo
173.785 171.392 174.142 172.017 174.252 172.75 cv
174.496 174.385 173.838 176.064 174.193 177.685 cv
174.537 179.256 173.863 182.824 170.765 183.737 cv
169.198 184.2 166.105 183.658 165.111 183.181 cv
163.775 182.542 162.893 181.248 162.104 179.995 cv
155.633 169.722 168.939 165.496 173.329 170.836 cv
cp
1 .780392 .678431 rgb
f
159.156 175.391 mo
159.198 175.694 159.24 175.999 159.298 176.3 cv
159.343 176.529 159.396 176.754 159.468 176.975 cv
159.528 177.167 159.599 177.353 159.683 177.534 cv
159.991 178.222 160.428 178.852 160.863 179.471 cv
161.464 180.328 162.108 181.217 163.052 181.672 cv
163.459 181.869 163.905 181.973 164.346 182.07 cv
165.569 182.341 167.375 182.398 168.316 181.384 cv
168.735 180.933 168.903 180.295 168.98 179.698 cv
169.053 179.109 169.074 178.607 169.234 178.015 cv
169.271 177.87 169.31 177.726 169.355 177.582 cv
169.427 177.351 169.509 177.125 169.628 176.915 cv
169.822 176.576 170.116 176.277 170.49 176.164 cv
171.131 175.969 171.899 176.332 172.456 175.961 cv
172.744 175.77 172.888 175.433 173.019 175.115 cv
173.148 174.8 173.263 174.448 173.393 174.103 cv
173.564 173.646 173.762 173.195 174.045 172.837 cv
174.195 172.647 174.373 172.473 174.49 172.262 cv
174.655 171.973 174.845 171.704 174.857 171.374 cv
174.919 169.868 173.68 168.382 172.641 167.423 cv
172.082 166.909 171.463 166.444 170.765 166.143 cv
170.152 165.88 169.489 165.749 168.831 165.655 cv
166.875 165.373 164.78 165.42 163.054 166.38 cv
162.599 166.634 162.159 166.967 161.937 167.443 cv
161.888 167.547 161.85 167.661 161.774 167.751 cv
161.675 167.87 161.522 167.932 161.38 168 cv
160.911 168.217 160.526 168.494 160.212 168.817 cv
158.629 170.447 158.857 173.223 159.156 175.391 cv
cp
.690196 .564706 .380392 rgb
f
169.788 175.462 mo
168.549 175.357 168.207 176.892 169.038 178.098 cv
169.283 178.449 169.717 178.766 170.038 179.048 cv
172.23 180.982 172.824 178.941 172.129 178.283 cv
170.512 176.756 171.35 175.593 169.788 175.462 cv
cp
1 .780392 .678431 rgb
f
170.125 177.81 mo
169.985 177.677 168.581 176.817 169.557 176.265 cv
169.826 176.111 170.12 176.35 170.155 176.634 cv
170.174 176.78 170.126 176.931 170.145 177.077 cv
170.237 177.322 li
170.358 177.529 170.785 177.734 170.695 178.031 cv
170.615 178.295 170.205 177.886 170.125 177.81 cv
cp
.952941 .662745 .517647 rgb
f
207.416 195.118 mo
207.753 194.922 208.04 194.639 208.265 194.276 cv
207.416 195.118 li
cp
.145098 .160784 .337255 rgb
f
214.552 170.319 mo
214.404 169.665 214.71 168.95 214.946 168.349 cv
215.564 166.77 216.853 165.325 218.198 164.332 cv
220.241 162.823 222.834 162.203 225.006 160.898 cv
225.948 160.332 227.321 159.765 228.104 158.989 cv
227.753 159.317 227.321 159.821 227.169 160.282 cv
226.787 161.44 228.986 160.652 229.55 160.501 cv
230.655 160.204 231.911 159.749 232.589 158.766 cv
232.638 159.312 232.455 159.842 232.506 160.409 cv
232.569 161.109 232.669 161.739 232.525 162.427 cv
232.319 163.413 232.112 164.912 231.452 165.686 cv
230.727 166.536 229.415 166.938 228.501 167.55 cv
229.107 167.531 229.847 167.464 230.466 167.333 cv
229.755 167.483 229.099 168.888 228.636 169.384 cv
227.894 170.178 226.779 170.742 225.834 171.261 cv
224.153 172.184 222.409 172.786 220.603 173.399 cv
219.835 173.66 219.042 173.879 218.319 174.254 cv
217.701 174.576 217.275 175.188 216.619 175.401 cv
215.751 175.684 215.083 175.229 214.667 174.48 cv
214.231 173.695 214.08 172.7 214.086 171.813 cv
214.088 171.481 214.071 171.026 214.221 170.718 cv
214.224 170.712 214.526 170.206 214.552 170.319 cv
cp
.313726 .219608 .133333 rgb
f
215.666 169.916 mo
214.359 169.406 213.469 170.117 213.675 171.499 cv
213.883 172.88 215.11 174.418 216.416 174.929 cv
217.729 175.442 218.619 174.73 218.413 173.348 cv
218.207 171.967 216.98 170.429 215.666 169.916 cv
cp
.929412 .92549 .972549 rgb
f
214.092 170.002 mo
194.275 184.257 li
194.84 183.803 195.705 183.724 196.739 184.126 cv
215.667 169.919 li
215.006 169.661 214.452 169.713 214.092 170.002 cv
cp
.882353 .870588 .972549 rgb
f
214.092 170.002 mo
194.275 184.257 li
194.84 183.803 195.704 183.724 196.739 184.126 cv
215.667 169.919 li
215.283 169.77 214.935 169.724 214.64 169.769 cv
214.428 169.801 214.243 169.881 214.092 170.002 cv
cp
f
gsave
214.092 170.002 mo
194.275 184.257 li
194.84 183.803 195.704 183.724 196.739 184.126 cv
215.667 169.919 li
215.283 169.77 214.935 169.724 214.64 169.769 cv
214.428 169.801 214.243 169.881 214.092 170.002 cv
clp
196.739 184.126 mo
215.667 169.919 li
196.647 184.093 li
196.739 184.126 li
cp
.929412 .92549 .972549 rgb
f
196.647 184.093 mo
215.608 169.898 li
215.324 169.794 215.06 169.747 214.823 169.753 cv
195.422 183.867 li
195.789 183.858 196.204 183.93 196.647 184.093 cv
cp
.882353 .870588 .972549 rgb
f
195.422 183.867 mo
214.823 169.753 li
214.614 169.757 214.426 169.805 214.264 169.89 cv
194.547 184.081 li
194.798 183.949 195.092 183.874 195.422 183.867 cv
cp
f
194.547 184.081 mo
214.264 169.89 li
214.092 170.002 li
194.275 184.257 li
194.358 184.189 194.45 184.129 194.547 184.081 cv
cp
f
grestore
200.369 191.816 mo
217.992 174.84 li
218.347 174.554 218.516 174.035 218.413 173.352 cv
218.207 171.965 216.973 170.43 215.667 169.919 cv
196.74 184.126 li
198.781 184.925 200.705 187.322 201.028 189.49 cv
201.189 190.559 200.926 191.37 200.369 191.816 cv
cp
.74902 .745098 .929412 rgb
f
196.739 184.126 mo
198.781 184.925 200.705 187.322 201.029 189.489 cv
201.189 190.559 200.925 191.37 200.369 191.816 cv
217.991 174.84 li
218.347 174.554 218.517 174.035 218.413 173.352 cv
218.207 171.965 216.973 170.43 215.667 169.919 cv
196.739 184.126 li
cp
f
gsave
196.739 184.126 mo
198.781 184.925 200.705 187.322 201.029 189.489 cv
201.189 190.559 200.925 191.37 200.369 191.816 cv
217.991 174.84 li
218.347 174.554 218.517 174.035 218.413 173.352 cv
218.207 171.965 216.973 170.43 215.667 169.919 cv
196.739 184.126 li
clp
200.369 191.816 mo
217.992 174.84 li
218.347 174.554 218.516 174.035 218.413 173.352 cv
218.38 173.135 218.323 172.915 218.245 172.694 cv
200.764 188.461 li
200.888 188.805 200.979 189.151 201.028 189.49 cv
201.189 190.559 200.926 191.37 200.369 191.816 cv
cp
f
200.764 188.462 mo
218.245 172.694 li
218.149 172.425 218.018 172.156 217.865 171.899 cv
200.17 187.22 li
200.411 187.622 200.614 188.04 200.764 188.462 cv
cp
.882353 .870588 .972549 rgb
f
200.17 187.219 mo
217.865 171.899 li
217.692 171.611 217.489 171.336 217.263 171.083 cv
199.233 185.945 li
199.584 186.341 199.903 186.771 200.17 187.219 cv
cp
f
199.233 185.945 mo
217.263 171.083 li
216.799 170.565 216.241 170.144 215.667 169.919 cv
196.739 184.127 li
197.634 184.478 198.508 185.135 199.233 185.945 cv
cp
.929412 .92549 .972549 rgb
f
grestore
196.739 184.126 mo
194.687 183.326 193.294 184.429 193.618 186.596 cv
193.94 188.751 195.857 191.147 197.909 191.947 cv
199.95 192.745 201.353 191.648 201.029 189.49 cv
200.704 187.322 198.782 184.925 196.739 184.126 cv
cp
.929412 .92549 .972549 rgb
f
196.801 184.023 mo
194.758 183.225 193.367 184.337 193.69 186.496 cv
194.013 188.653 195.931 191.057 197.971 191.855 cv
200.023 192.656 201.414 191.545 201.093 189.386 cv
200.771 187.227 198.852 184.824 196.801 184.023 cv
cp
.235294 .262745 .517647 rgb
f
194.34 184.157 mo
151.618 221.992 li
151.9 221.765 152.332 221.726 152.85 221.927 cv
196.801 184.028 li
195.769 183.624 194.904 183.705 194.34 184.157 cv
cp
.196078 .223529 .454902 rgb
f
194.34 184.157 mo
151.618 221.992 li
151.9 221.765 152.332 221.725 152.85 221.927 cv
196.801 184.028 li
196.201 183.794 195.657 183.723 195.197 183.793 cv
194.865 183.843 194.576 183.967 194.34 184.157 cv
cp
.145098 .160784 .337255 rgb
f
gsave
194.34 184.157 mo
151.618 221.992 li
151.9 221.765 152.332 221.725 152.85 221.927 cv
196.801 184.028 li
196.201 183.794 195.657 183.723 195.197 183.793 cv
194.865 183.843 194.576 183.967 194.34 184.157 cv
clp
152.85 221.927 mo
196.801 184.028 li
196.709 183.995 152.804 221.91 152.804 221.91 cv
152.85 221.927 li
cp
.196078 .223529 .454902 rgb
f
152.804 221.91 mo
196.709 183.994 li
196.266 183.832 195.853 183.758 195.483 183.768 cv
152.191 221.797 li
152.375 221.792 152.582 221.828 152.804 221.91 cv
cp
f
152.191 221.797 mo
195.483 183.768 li
195.156 183.775 194.862 183.849 194.61 183.981 cv
151.754 221.904 li
151.879 221.838 152.026 221.801 152.191 221.797 cv
cp
f
151.754 221.904 mo
194.61 183.981 li
194.515 184.032 194.423 184.089 194.34 184.157 cv
151.618 221.992 li
151.754 221.904 li
cp
f
grestore
154.665 225.772 mo
200.434 191.717 li
200.99 191.27 201.254 190.459 201.093 189.391 cv
200.77 187.224 198.843 184.826 196.801 184.028 cv
152.85 221.927 li
153.871 222.326 154.833 223.525 154.994 224.609 cv
155.075 225.143 154.943 225.548 154.665 225.772 cv
cp
.196078 .223529 .454902 rgb
f
152.85 221.927 mo
153.871 222.326 154.833 223.525 154.995 224.608 cv
155.075 225.143 154.943 225.548 154.665 225.772 cv
200.433 191.716 li
200.99 191.27 201.254 190.459 201.093 189.391 cv
200.77 187.224 198.843 184.826 196.801 184.028 cv
152.85 221.927 li
cp
.145098 .160784 .337255 rgb
f
gsave
152.85 221.927 mo
153.871 222.326 154.833 223.525 154.995 224.608 cv
155.075 225.143 154.943 225.548 154.665 225.772 cv
200.433 191.716 li
200.99 191.27 201.254 190.459 201.093 189.391 cv
200.77 187.224 198.843 184.826 196.801 184.028 cv
152.85 221.927 li
clp
154.665 225.772 mo
200.434 191.717 li
200.99 191.27 201.254 190.459 201.093 189.391 cv
201.042 189.052 200.952 188.708 200.83 188.364 cv
154.863 224.094 li
154.925 224.266 154.97 224.439 154.994 224.609 cv
155.075 225.143 154.943 225.548 154.665 225.772 cv
cp
.152941 .180392 .403922 rgb
f
154.863 224.094 mo
200.83 188.364 li
200.679 187.942 200.475 187.523 200.235 187.12 cv
154.565 223.473 li
154.686 223.674 154.788 223.883 154.863 224.094 cv
cp
f
154.565 223.473 mo
200.235 187.12 li
199.966 186.671 199.649 186.241 199.295 185.846 cv
154.097 222.836 li
154.273 223.034 154.432 223.249 154.565 223.473 cv
cp
.196078 .223529 .454902 rgb
f
154.097 222.836 mo
199.295 185.846 li
198.57 185.036 197.698 184.379 196.801 184.027 cv
152.85 221.927 li
153.297 222.102 153.734 222.431 154.097 222.836 cv
cp
.235294 .262745 .517647 rgb
f
grestore
152.85 221.927 mo
151.823 221.526 151.127 222.078 151.289 223.161 cv
151.45 224.239 152.409 225.437 153.435 225.837 cv
154.456 226.236 155.157 225.687 154.995 224.608 cv
154.833 223.525 153.871 222.326 152.85 221.927 cv
cp
f
202.417 189.608 mo
202.138 189.676 201.741 189.662 201.79 189.317 cv
201.876 188.722 202.342 188.215 202.35 187.615 cv
202.353 187.401 202.263 187.152 202.055 187.097 cv
201.81 187.032 201.599 187.273 201.461 187.486 cv
201.132 188 200.813 188.531 200.374 188.956 cv
200.045 189.273 199.657 189.52 199.289 189.791 cv
198.92 190.062 198.563 190.365 198.327 190.756 cv
198.1 191.133 198.103 191.464 198.101 191.884 cv
198.1 192.23 197.872 192.561 197.811 192.905 cv
197.719 193.409 197.651 193.926 197.659 194.439 cv
197.665 194.789 197.683 195.281 197.956 195.543 cv
198.264 195.837 198.707 195.637 199.014 195.448 cv
199.495 195.151 199.757 194.667 200.169 194.305 cv
200.362 194.137 200.476 193.925 200.66 193.762 cv
200.876 193.567 201.195 193.492 201.463 193.4 cv
202.081 193.188 202.661 192.869 203.173 192.464 cv
203.726 192.027 204.13 191.594 204.39 190.943 cv
204.563 190.508 204.649 190.057 204.767 189.605 cv
204.899 189.1 204.942 188.582 204.757 188.086 cv
204.517 187.445 204.283 188.119 204.035 188.365 cv
203.616 188.782 203.125 189.27 202.596 189.544 cv
202.417 189.608 li
cp
1 .780392 .678431 rgb
f
199.356 193.231 mo
199.072 192.863 198.712 192.571 198.326 192.444 cv
197.392 192.139 196.539 192.425 195.798 192.828 cv
193.333 194.168 191.207 196.723 188.294 197.007 cv
187.068 197.126 185.857 196.331 184.973 195.569 cv
183.746 194.51 182.369 193.645 181.079 192.667 cv
180.237 192.029 179.413 191.297 178.513 190.739 cv
177.303 189.99 175.934 189.416 174.557 189.899 cv
173.282 190.346 172.267 191.357 171.711 192.635 cv
171.132 193.962 171.271 195.578 172.069 196.788 cv
172.813 197.915 174.025 198.631 175.194 199.308 cv
176.484 200.054 177.755 200.83 179.044 201.576 cv
179.707 201.96 180.375 202.337 181.052 202.697 cv
181.677 203.029 182.308 203.209 182.948 203.488 cv
184.412 204.127 186.26 204.227 187.839 204.095 cv
188.919 204.005 189.867 203.662 190.815 203.16 cv
193.868 201.544 196.569 199.5 198.859 196.894 cv
199.267 196.429 199.832 195.844 199.953 195.21 cv
200.07 194.591 199.807 193.815 199.356 193.231 cv
cp
.929412 .92549 .972549 rgb
f
118.829 241.771 mo
118.659 240.59 117.173 231.524 117.043 230.827 cv
116.864 229.859 116.072 226.997 115.971 226.513 cv
115.467 224.106 114.261 221.615 112.077 220.213 cv
111.715 219.981 111.272 219.768 110.813 219.887 cv
110.307 220.017 109.984 220.489 109.752 220.924 cv
109.239 221.887 108.894 222.778 108.91 223.803 cv
108.926 224.82 108.341 225.391 108.694 226.325 cv
109.555 228.608 111.127 232.131 112.379 234.886 cv
112.185 235.714 111.503 236.129 111.651 236.918 cv
112.02 238.878 112.542 240.812 113.064 242.735 cv
113.38 243.899 113.646 245.743 114.553 246.789 cv
114.882 247.169 115.297 247.443 115.829 247.542 cv
116.587 247.682 117.371 247.342 117.944 246.827 cv
118.548 246.285 119.66 249.841 119.671 249.027 cv
119.686 247.976 118.865 242.02 118.829 241.771 cv
cp
.74902 .745098 .929412 rgb
f
111.027 283.229 mo
110.481 284.754 108.51 283.065 107.683 284.458 cv
107.278 285.139 109.453 285.129 109.005 285.782 cv
108.467 286.567 108.211 286.809 107.223 286.508 cv
105.552 285.996 102.729 282.914 102.6 279.226 cv
102.531 277.238 102.74 274.42 102.706 272.431 cv
102.634 268.318 100.148 256.396 108.609 254.167 cv
109.341 253.974 109.75 252.774 110.027 252.176 cv
110.354 251.469 110.673 250.218 111.33 249.732 cv
113.255 248.312 114.541 253.759 114.691 254.709 cv
115.08 257.164 115.842 269.78 111.027 283.229 cv
cp
.952941 .662745 .517647 rgb
f
98.3582 220.954 mo
100.013 220.201 100.615 219.789 102.354 219.396 cv
102.635 219.333 103.584 219.69 103.866 219.63 cv
105.979 219.183 108.229 219.283 110.188 220.145 cv
110.254 220.176 li
110.254 233.148 li
97.8223 233.148 li
98.3582 220.954 li
cp
f
107.605 219.175 mo
107.71 219.179 li
107.402 219.084 107.225 219.164 107.605 219.175 cv
cp
.882353 .870588 .972549 rgb
f
91.5413 226.946 mo
91.4917 227.479 92.2236 228.201 92.4021 228.824 cv
92.5991 229.555 92.8459 230.267 93.1233 230.969 cv
94.6257 234.794 96.9783 238.333 97.6604 242.385 cv
97.9272 243.977 97.9272 245.588 97.8384 247.19 cv
97.7883 247.951 97.6604 248.732 97.6997 249.483 cv
97.71 249.691 97.6604 250.067 97.6997 250.244 cv
97.759 250.521 97.8975 250.62 98.155 250.818 cv
99.5381 251.895 101.179 252.517 102.879 252.814 cv
104.709 253.12 106.685 252.992 108.445 252.696 cv
108.969 252.607 109.463 252.508 109.938 252.399 cv
112.033 251.905 113.604 251.272 113.872 251.075 cv
114.257 250.778 114.089 250.867 113.763 248.07 cv
112.419 236.584 117.489 236.376 115.512 230.366 cv
115.177 229.337 114.484 228.369 114.059 227.341 cv
112.487 223.575 113.476 219.384 107.713 219.176 cv
108.069 219.285 108.603 219.63 108.652 220.59 cv
108.771 223.012 108.099 224.524 107.041 225.305 cv
106.764 225.522 106.458 225.68 106.131 225.789 cv
103.482 226.689 99.5586 224.474 98.3625 220.955 cv
95.8708 222.458 91.8088 223.95 91.5413 226.946 cv
cp
f
108.445 252.696 mo
108.969 252.607 109.463 252.508 109.938 252.399 cv
112.537 244.6 112.556 232.105 107.041 225.305 cv
106.764 225.522 106.458 225.68 106.131 225.789 cv
107.555 229.1 109.156 232.026 109.68 235.882 cv
110.481 241.644 110.678 247.229 108.445 252.696 cv
cp
f
106.809 314.585 mo
106.802 314.742 106.783 314.897 106.752 315.052 cv
106.646 315.566 106.358 316.068 105.894 316.313 cv
105.521 316.51 105.071 316.524 104.664 316.417 cv
103.227 316.038 102.29 314.604 101.845 313.279 cv
101.31 311.684 101.424 309.767 100.504 308.332 cv
100.29 307.998 100.015 307.705 99.825 307.358 cv
99.5251 306.809 99.4604 306.154 99.5476 305.534 cv
99.6216 305.005 99.8132 304.474 100.195 304.101 cv
100.944 303.369 102.161 303.6 102.904 304.197 cv
103.464 304.647 104.421 304.663 104.762 305.322 cv
105.172 306.115 105.071 306.22 105.292 306.924 cv
105.896 308.839 106.487 311.485 106.74 313.484 cv
106.787 313.848 106.826 314.219 106.809 314.585 cv
cp
.235294 .262745 .517647 rgb
f
101.059 304.696 mo
100.194 310.37 li
99.8843 310.499 99.7029 310.408 99.5334 310.228 cv
99.6523 305.918 li
101.059 304.696 li
cp
f
106.436 307.969 mo
106.862 302.731 li
108.301 302.849 li
107.5 308.103 li
107.145 308.316 106.724 308.355 106.436 307.969 cv
cp
.152941 .180392 .403922 rgb
f
116.07 307.895 mo
116.712 308.824 117.526 310.27 118.055 311.268 cv
118.202 311.543 118.322 311.854 118.259 312.159 cv
118.195 312.469 117.948 312.718 117.662 312.855 cv
117.376 312.992 117.054 313.032 116.739 313.054 cv
115.493 313.14 114.229 312.966 113.052 312.547 cv
112.408 312.318 111.771 312.001 111.33 311.479 cv
110.698 310.734 110.563 309.704 110.377 308.745 cv
110.191 307.786 109.866 306.751 109.035 306.237 cv
108.807 306.095 108.551 306.002 108.317 305.87 cv
106.596 304.901 106.426 302.497 107.549 301.017 cv
108.159 300.213 108.87 300.329 109.688 300.756 cv
110.67 301.268 111.151 302.171 111.856 302.977 cv
111.956 303.092 112.059 303.202 112.169 303.307 cv
112.922 304.027 112.052 300.296 112.449 301.318 cv
113.57 304.19 115.296 306.777 116.07 307.895 cv
cp
f
115.043 279.344 mo
114.206 283.849 113.228 288.443 112.883 292.581 cv
112.726 294.463 112.532 299.778 112.802 301.65 cv
112.947 302.652 111.072 303.199 110.208 302.67 cv
109.609 302.304 108.445 301.431 108.428 300.729 cv
108.335 296.764 106.56 293.04 105.902 289.129 cv
105.419 286.271 105.634 282.581 106.39 279.344 cv
115.043 279.344 li
cp
.952941 .662745 .517647 rgb
f
112.703 300.446 mo
112.716 301.113 112.806 301.779 112.936 302.433 cv
112.995 302.737 112.999 303.033 113.087 303.333 cv
113.182 303.657 113.32 303.966 113.464 304.27 cv
113.73 304.831 114.022 305.378 114.342 305.909 cv
114.644 306.411 115.07 306.871 115.286 307.417 cv
115.423 307.765 115.463 308.166 115.317 308.51 cv
115.113 308.994 114.323 308.58 114.009 308.401 cv
113.783 308.273 113.569 308.121 113.373 307.951 cv
112.609 307.287 112.131 306.357 111.454 305.604 cv
110.69 304.754 109.649 304.286 108.748 303.595 cv
108.476 303.386 108.206 303.164 108.019 302.875 cv
107.744 302.447 107.679 301.906 107.77 301.406 cv
107.88 300.796 108.307 300.323 108.388 299.724 cv
108.469 299.13 108.491 298.483 108.854 297.977 cv
112.703 300.446 li
cp
f
108.466 274.608 mo
107.958 281.498 105.625 289.645 105.052 296.528 cv
104.896 298.41 104.85 306.185 105.119 308.057 cv
105.263 309.059 102.656 309.04 101.792 308.511 cv
101.194 308.145 100.615 305.377 100.598 304.676 cv
100.505 300.711 98.7297 296.987 98.0706 293.076 cv
97.3933 289.056 98.0706 283.372 99.7356 279.651 cv
100.075 278.894 100.568 278.071 101.385 277.923 cv
108.466 274.608 li
cp
1 .780392 .678431 rgb
f
104.184 304.737 mo
104.288 305.209 104.939 305.295 104.975 305.773 cv
105.013 306.312 105.157 307.682 105.269 308.208 cv
105.406 308.853 105.511 309.708 105.42 310.374 cv
105.34 310.953 105.099 311.323 104.562 311.554 cv
103.935 311.825 103.382 311.697 102.936 311.197 cv
102.458 310.662 102.105 310.03 101.81 309.379 cv
101.545 308.794 101.257 308.191 101.119 307.567 cv
100.848 306.343 100.52 304.968 100.623 303.705 cv
100.634 303.574 100.968 301.927 101.056 301.985 cv
101.274 302.126 101.47 302.309 101.671 302.482 cv
102.453 303.158 103.235 303.834 104.017 304.509 cv
104.313 304.765 104.094 304.325 104.184 304.737 cv
cp
f
113.91 249.238 mo
113.91 249.238 114.448 251.577 114.531 252.161 cv
114.976 255.342 114.884 258.697 115.058 261.906 cv
115.406 268.319 115.753 274.731 116.1 281.144 cv
116.161 282.272 116.188 283.516 115.479 284.397 cv
114.716 285.344 113.374 285.541 112.163 285.652 cv
107.776 286.056 102.79 286.8 98.4358 285.942 cv
97.5166 285.765 96.8154 285.696 96.6179 284.72 cv
96.3948 283.621 96.2734 282.499 96.1411 281.385 cv
95.7253 277.879 95.3716 274.379 94.824 270.888 cv
94.2668 267.332 93.6052 263.732 93.9678 260.12 cv
94.3665 256.156 95.8508 252.111 97.7126 248.628 cv
97.4565 249.106 101.541 253.709 110.462 251.934 cv
113.337 251.363 113.91 249.238 113.91 249.238 cv
cp
.996078 .282353 .431373 rgb
f
99.0142 221.513 mo
99.0142 221.513 106.877 226.174 106.762 221.863 cv
106.602 215.857 106.262 215.167 103.629 214.236 cv
102.908 213.98 102.153 213.784 101.391 213.769 cv
98.6121 213.714 99.6885 215.23 99.7927 216.29 cv
100.103 219.429 99.063 219.863 99.0142 221.513 cv
cp
.952941 .662745 .517647 rgb
f
102.65 218.733 mo
102.468 218.493 102.293 218.248 102.123 217.998 cv
101.537 217.134 100.877 216.133 100.562 215.136 cv
99.5471 211.936 100.335 208.139 103.265 206.228 cv
105.344 204.873 108.174 204.766 110.349 205.961 cv
110.938 206.285 111.476 206.693 111.99 207.126 cv
112.433 207.5 112.867 207.904 113.154 208.408 cv
113.343 208.74 113.462 209.104 113.565 209.473 cv
113.681 209.885 113.775 210.308 113.783 210.737 cv
113.817 212.666 112.174 214.251 112.455 216.211 cv
112.516 216.639 112.66 217.054 112.708 217.484 cv
112.755 217.913 112.688 218.382 112.388 218.688 cv
112.103 218.979 111.79 219.087 111.581 219.434 cv
111.298 219.904 111.061 220.418 110.797 220.902 cv
110.51 221.43 110.22 221.964 109.817 222.409 cv
108.831 223.499 107.802 223.345 106.665 222.568 cv
105.128 221.517 103.769 220.212 102.65 218.733 cv
cp
1 .780392 .678431 rgb
f
99.0115 208.878 mo
99.9529 205.355 101.138 204.993 102.747 204.171 cv
104.306 203.375 106.182 203.285 107.869 203.727 cv
109.593 204.179 111.155 205.164 112.41 206.416 cv
112.56 206.568 li
113.207 207.237 113.749 207.958 113.963 208.876 cv
114.163 209.737 114.601 211.187 113.814 211.903 cv
113.402 212.278 112.747 212.127 112.199 212.129 cv
111.423 212.133 110.647 212.135 109.872 212.138 cv
109.149 212.141 108.375 212.139 107.703 212.44 cv
107.035 212.74 106.545 213.35 105.961 213.788 cv
105.081 214.447 103.575 215.583 102.534 214.786 cv
102.089 214.446 101.669 213.944 101.045 214.157 cv
100.468 214.354 100.507 215.055 100.517 215.558 cv
100.52 215.652 100.559 216.37 100.282 216.31 cv
100.004 216.249 97.8804 213.113 99.0115 208.878 cv
cp
.74902 .470588 .447059 rgb
f
105.858 210.903 mo
105.619 211.397 105.782 211.981 105.78 212.53 cv
105.775 213.617 104.992 214.622 103.99 214.998 cv
103.395 215.222 103.029 215.165 102.534 214.786 cv
102.089 214.446 101.669 213.944 101.045 214.157 cv
100.468 214.354 100.733 214.873 100.743 215.375 cv
100.746 215.47 100.537 216.721 100.537 216.721 cv
100.259 216.66 97.8804 213.113 99.0115 208.878 cv
99.5632 206.813 100.198 205.834 100.953 205.212 cv
100.953 205.212 102.431 206.21 103.64 207.566 cv
104.77 208.833 105.858 210.903 105.858 210.903 cv
cp
f
89.9199 241.116 mo
89.9092 240.719 89.9077 240.321 89.9148 239.93 cv
89.9524 237.792 90.0732 235.655 90.2749 233.526 cv
90.395 232.259 90.5042 230.972 90.7241 229.718 cv
90.9121 228.646 91.2485 226.672 91.8218 225.705 cv
92.8809 223.915 95.6145 223.643 97.3738 224.994 cv
98.1292 225.574 98.2539 226.632 98.3943 227.531 cv
98.7239 229.637 98.4558 231.819 97.8586 233.854 cv
97.0771 236.514 96.6689 239.275 95.8611 241.939 cv
95.7075 242.444 95.5754 242.997 95.3188 243.467 cv
94.0996 245.7 91.9072 246.32 90.7388 244.849 cv
90.2576 244.244 90.0959 243.394 90.0176 242.645 cv
89.9653 242.142 89.9343 241.629 89.9199 241.116 cv
cp
.929412 .92549 .972549 rgb
f
101.635 215.1 mo
101.332 215.556 101.196 216.099 101.077 216.634 cv
100.756 218.071 100.52 219.606 101.027 220.988 cv
101.622 222.606 103.133 223.734 103.832 225.311 cv
104.319 226.411 104.371 227.698 103.973 228.834 cv
103.575 229.971 102.732 230.944 101.664 231.5 cv
100.759 231.2 100.125 230.375 99.7073 229.517 cv
99.29 228.659 99.03 227.727 98.5557 226.899 cv
98.0815 226.071 97.3196 225.325 96.3723 225.213 cv
95.8586 225.152 95.3093 225.278 94.8364 225.067 cv
94.2141 224.79 93.9602 224.029 93.9497 223.348 cv
93.927 221.932 94.636 220.617 95.3823 219.415 cv
96.1289 218.211 96.9507 216.999 97.1975 215.606 cv
97.3928 214.501 97.21 213.361 97.3552 212.249 cv
97.4998 211.137 98.1235 209.947 99.2183 209.701 cv
100.281 209.462 101.302 210.193 102.095 210.938 cv
102.599 211.411 103.094 211.932 103.316 212.586 cv
103.488 213.096 103.496 213.923 103.002 214.26 cv
102.513 214.594 102.026 214.511 101.635 215.1 cv
cp
.74902 .470588 .447059 rgb
f
101.651 212.895 mo
100.458 212.535 99.8044 213.969 100.37 215.321 cv
100.534 215.716 100.895 216.115 101.15 216.459 cv
102.896 218.806 103.9 216.931 103.356 216.143 cv
102.089 214.313 103.152 213.347 101.651 212.895 cv
cp
1 .780392 .678431 rgb
f
101.792 215.828 mo
101.681 215.669 100.488 214.537 101.557 214.197 cv
101.852 214.104 102.09 214.398 102.067 214.683 cv
102.054 214.831 101.976 214.967 101.965 215.115 cv
102.003 215.374 li
102.079 215.602 102.454 215.89 102.305 216.163 cv
102.173 216.405 101.855 215.92 101.792 215.828 cv
cp
.952941 .662745 .517647 rgb
f
67.3652 213.993 mo
67.4583 213.751 li
67.5093 213.625 67.5603 213.499 67.6213 213.369 cv
67.6621 213.28 67.7085 213.19 67.7544 213.1 cv
67.8667 212.876 li
68.4392 211.848 69.2847 210.745 70.248 209.875 cv
71.55 208.698 72.6848 208.277 73.1877 208.685 cv
80.2297 214.555 li
79.7278 214.145 78.5903 214.567 77.2888 215.742 cv
76.2578 216.674 75.3567 217.875 74.7971 218.968 cv
74.7507 219.059 74.7048 219.148 74.6624 219.236 cv
74.6013 219.367 74.5491 219.494 74.5005 219.619 cv
74.405 219.862 li
74.3608 219.995 74.3281 220.12 74.2959 220.246 cv
74.2485 220.434 li
74.2131 220.616 74.1951 220.786 74.1982 220.94 cv
74.2068 221.264 74.3047 221.492 74.4714 221.629 cv
67.4314 215.76 li
67.262 215.624 67.1665 215.395 67.1584 215.071 cv
67.1536 214.916 67.1716 214.746 67.2058 214.566 cv
67.2549 214.379 li
67.2864 214.255 67.3193 214.127 67.3652 213.993 cv
cp
.996078 .282353 .431373 rgb
f
72.9182 208.556 mo
73.021 208.581 73.1118 208.623 73.1877 208.685 cv
80.2297 214.555 li
80.1533 214.494 80.0623 214.449 79.9585 214.425 cv
79.7393 214.374 79.4614 214.409 79.1411 214.525 cv
72.0994 208.655 li
72.4197 208.539 72.6965 208.506 72.9182 208.556 cv
cp
f
79.1423 214.523 mo
72.0994 208.655 li
71.5752 208.844 70.9343 209.254 70.248 209.875 cv
69.7039 210.366 69.1941 210.933 68.7515 211.518 cv
75.7942 217.387 li
76.2349 216.8 76.7454 216.233 77.2888 215.742 cv
77.9758 215.123 78.6155 214.713 79.1423 214.523 cv
cp
1 .411765 .552941 rgb
f
75.7942 217.387 mo
68.7515 211.518 li
68.4114 211.968 68.1123 212.429 67.8667 212.876 cv
74.9077 218.744 li
75.1526 218.297 75.4539 217.836 75.7942 217.387 cv
cp
.996078 .282353 .431373 rgb
f
73.5645 221.224 mo
73.6035 222.709 75.26 222.453 77.2549 220.649 cv
79.25 218.848 80.8442 216.167 80.8057 214.682 cv
80.7666 213.195 79.1094 213.454 77.1145 215.254 cv
75.1201 217.057 73.5254 219.736 73.5645 221.224 cv
cp
.152941 .180392 .403922 rgb
f
73.6624 219.891 mo
73.6924 219.801 73.7314 219.706 73.769 219.613 cv
73.8279 219.468 73.8862 219.324 73.9551 219.173 cv
74.0037 219.072 74.0566 218.968 74.1096 218.866 cv
74.2383 218.609 li
74.8943 217.427 75.8655 216.159 76.9717 215.159 cv
78.4675 213.808 79.7729 213.325 80.3501 213.795 cv
160.812 279.053 li
160.238 278.584 158.931 279.068 157.437 280.418 cv
156.252 281.489 155.217 282.868 154.573 284.123 cv
154.519 284.226 154.468 284.33 154.42 284.431 cv
154.349 284.581 154.29 284.727 154.234 284.871 cv
154.196 284.964 154.157 285.059 154.125 285.148 cv
154.073 285.302 154.036 285.447 153.999 285.591 cv
153.944 285.807 li
153.905 286.014 153.881 286.21 153.888 286.386 cv
153.897 286.759 154.009 287.023 154.2 287.179 cv
73.7368 221.919 li
73.5437 221.764 73.4324 221.5 73.4229 221.128 cv
73.4189 220.952 73.4402 220.756 73.4795 220.549 cv
73.5359 220.333 li
73.5696 220.19 73.6082 220.044 73.6624 219.891 cv
cp
f
80.0398 213.648 mo
80.1592 213.675 80.2632 213.724 80.3501 213.795 cv
160.812 279.053 li
160.726 278.984 160.622 278.932 160.503 278.905 cv
160.251 278.847 159.933 278.885 159.565 279.018 cv
79.1003 213.759 li
79.4685 213.626 79.7864 213.588 80.0398 213.648 cv
cp
f
159.565 279.018 mo
79.1003 213.759 li
78.4954 213.977 77.7615 214.447 76.9717 215.159 cv
76.3489 215.725 75.7627 216.376 75.2549 217.048 cv
155.718 282.305 li
156.226 281.633 156.812 280.982 157.437 280.418 cv
158.224 279.707 158.96 279.236 159.565 279.018 cv
cp
.235294 .262745 .517647 rgb
f
155.718 282.305 mo
75.2549 217.048 li
74.8643 217.565 74.5208 218.094 74.2383 218.609 cv
154.701 283.866 li
154.982 283.353 155.329 282.823 155.718 282.305 cv
cp
.196078 .223529 .454902 rgb
f
153.887 286.388 mo
153.925 287.873 155.583 287.616 157.577 285.813 cv
159.573 284.011 161.166 281.331 161.128 279.846 cv
161.089 278.358 159.432 278.617 157.437 280.418 cv
155.442 282.221 153.847 284.9 153.887 286.388 cv
cp
.321569 .262745 .282353 rgb
f
154.124 285.15 mo
154.157 285.059 154.196 284.964 154.234 284.871 cv
154.29 284.727 154.349 284.581 154.42 284.431 cv
154.468 284.33 154.521 284.227 154.574 284.124 cv
154.701 283.866 li
155.358 282.687 156.329 281.419 157.437 280.418 cv
158.931 279.068 160.236 278.586 160.812 279.053 cv
169.72 291.082 li
169.548 290.942 169.156 291.086 168.707 291.492 cv
168.353 291.813 168.041 292.227 167.848 292.603 cv
167.781 292.741 167.763 292.784 167.745 292.827 cv
167.697 292.958 167.687 293.002 167.675 293.044 cv
167.647 293.171 167.64 293.23 167.642 293.282 cv
167.644 293.395 167.678 293.473 167.735 293.52 cv
154.2 287.179 li
154.009 287.023 153.896 286.76 153.887 286.388 cv
153.881 286.21 153.905 286.014 153.944 285.807 cv
153.999 285.594 li
154.035 285.448 154.072 285.304 154.124 285.15 cv
cp
.882353 .870588 .972549 rgb
f
160.503 278.905 mo
160.622 278.932 160.726 278.984 160.812 279.053 cv
169.72 291.082 li
169.55 291.021 169.456 291.033 169.344 291.073 cv
159.564 279.019 li
159.931 278.887 160.251 278.847 160.503 278.905 cv
cp
f
169.344 291.073 mo
159.564 279.019 li
158.96 279.236 158.224 279.707 157.437 280.418 cv
156.812 280.982 156.226 281.633 155.716 282.307 cv
168.191 292.06 li
168.342 291.857 168.52 291.662 168.707 291.492 cv
168.943 291.278 169.164 291.138 169.344 291.073 cv
cp
.929412 .92549 .972549 rgb
f
168.191 292.06 mo
155.716 282.307 li
155.329 282.823 154.982 283.353 154.7 283.868 cv
167.887 292.527 li
167.97 292.374 168.075 292.214 168.191 292.06 cv
cp
f
167.642 293.282 mo
167.655 293.728 168.15 293.651 168.75 293.111 cv
169.348 292.57 169.825 291.766 169.815 291.321 cv
169.802 290.874 169.306 290.952 168.707 291.492 cv
168.109 292.033 167.629 292.837 167.642 293.282 cv
cp
f
167.631 292.905 mo
167.682 292.774 167.701 292.729 167.723 292.681 cv
168.015 292.136 168.319 291.741 168.662 291.431 cv
169.129 291.009 169.536 290.858 169.717 291.004 cv
172.495 294.755 li
172.44 294.713 172.32 294.757 172.178 294.884 cv
172.069 294.984 171.885 295.522 171.885 295.522 cv
167.655 293.539 li
167.594 293.49 167.56 293.407 167.557 293.293 cv
167.574 293.11 li
167.603 293 167.615 292.953 167.631 292.905 cv
cp
.996078 .282353 .431373 rgb
f
169.621 290.96 mo
169.717 291.004 172.495 294.755 172.495 294.755 cv
172.378 294.754 169.327 290.994 169.327 290.994 cv
169.442 290.951 169.542 290.94 169.621 290.96 cv
cp
f
172.378 294.754 mo
169.327 290.994 li
169.139 291.061 168.911 291.209 168.664 291.429 cv
168.469 291.607 168.286 291.808 168.127 292.019 cv
172.019 295.061 li
172.178 294.884 li
172.378 294.754 li
cp
1 .411765 .552941 rgb
f
172.019 295.061 mo
168.127 292.019 li
168.006 292.18 167.899 292.346 167.811 292.507 cv
171.921 295.207 li
172.019 295.061 li
cp
f
171.846 295.441 mo
171.849 295.581 172.005 295.558 172.192 295.387 cv
172.378 295.221 172.528 294.968 172.524 294.829 cv
172.52 294.69 172.366 294.716 172.178 294.884 cv
171.993 295.053 171.844 295.303 171.846 295.441 cv
cp
.996078 .282353 .431373 rgb
f
114.524 250.834 mo
114.788 250.535 114.751 249.894 114.401 250.048 cv
114.494 249.859 114.469 249.605 114.298 249.492 cv
114.076 249.344 113.782 249.498 113.525 249.589 cv
113.174 249.713 112.795 249.713 112.426 249.712 cv
111.645 249.71 110.84 249.318 110.928 249.213 cv
111.149 248.95 111.48 248.741 111.816 248.794 cv
112.009 248.824 112.183 248.94 112.379 248.953 cv
112.542 248.964 112.702 248.903 112.854 248.842 cv
112.997 248.751 li
113.069 248.655 113.014 248.517 112.936 248.43 cv
112.812 248.293 112.641 248.211 112.474 248.131 cv
112.067 247.937 111.628 247.737 111.176 247.803 cv
111.027 247.824 110.881 247.875 110.734 247.909 cv
110.572 247.946 110.406 247.965 110.249 248.019 cv
110.046 248.09 108.858 248.57 108.447 248.861 cv
106.371 249.481 106.337 250.752 107.265 251.717 cv
107.712 252.18 109.182 252.676 110.011 252.878 cv
110.083 252.9 li
110.234 252.929 li
110.247 252.932 li
111.421 253.156 113.864 253.465 114.011 252.413 cv
113.824 252.284 li
114.872 251.52 114.014 251.411 114.524 250.834 cv
cp
1 .780392 .678431 rgb
f
91.2358 245.226 mo
100.496 251.053 106.571 252.119 106.92 251.978 cv
107.262 251.839 107.465 251.492 107.643 251.168 cv
107.835 250.817 108.029 250.461 108.132 250.074 cv
108.234 249.687 108.237 249.258 108.055 248.901 cv
107.893 248.583 107.603 248.351 107.311 248.146 cv
106.51 247.582 103.057 245.567 102.187 244.996 cv
100.985 244.207 99.7705 243.431 98.5007 242.755 cv
97.5471 242.247 94.0034 240.53 92.9185 240.385 cv
91.4827 240.193 90.0745 244.495 91.2358 245.226 cv
cp
.929412 .92549 .972549 rgb
f
326.555 358.414 mo
330.593 395.271 li
330.713 396.402 331.935 397.056 332.942 396.53 cv
333.495 396.242 333.832 395.66 333.807 395.037 cv
332.597 358.414 li
326.555 358.414 li
cp
.152941 .180392 .403922 rgb
f
270.092 318.294 mo
253.15 351.276 li
252.634 352.288 251.259 352.463 250.506 351.612 cv
250.093 351.145 249.986 350.481 250.231 349.908 cv
264.449 316.135 li
270.092 318.294 li
cp
f
363.17 340.087 mo
357.726 340.087 li
369.133 371.666 li
369.537 372.729 370.884 373.051 371.725 372.286 cv
372.186 371.866 372.364 371.219 372.182 370.622 cv
363.17 340.087 li
cp
f
309.105 383.682 mo
309.691 379.861 li
308.816 379.934 307.94 380.032 307.063 380.07 cv
302.528 380.258 305.775 372.695 306.336 366.841 cv
306.57 364.39 306.618 351.96 306.604 351.226 cv
297.911 360.937 li
297.902 361.127 297.894 361.318 297.888 361.518 cv
297.822 363.592 297.642 365.595 297.997 367.661 cv
298.606 371.194 299.254 374.594 299.835 378.129 cv
299.766 379.405 299.956 380.715 299.528 381.917 cv
299.16 382.953 298.654 384.049 298.962 385.104 cv
299.145 385.732 299.624 386.267 300.228 386.518 cv
302.099 387.297 304.016 385.993 305.794 385.57 cv
307.854 385.082 310.692 385.656 312.385 384.185 cv
309.105 383.682 li
cp
.952941 .662745 .517647 rgb
f
300.627 383.086 mo
303.662 383.969 309.289 384.006 309.56 379.871 cv
311.53 379.701 313.044 379.447 313.438 381.401 cv
313.736 382.878 312.824 384.828 309.668 385.203 cv
308.383 385.355 307.06 385.271 305.794 385.57 cv
304.016 385.993 302.099 387.297 300.228 386.518 cv
299.624 386.267 299.145 385.732 298.962 385.104 cv
298.654 384.049 298.814 383.063 299.182 382.027 cv
299.293 381.716 299.698 380.967 299.785 380.648 cv
299.993 381.601 299.499 382.758 300.627 383.086 cv
cp
.145098 .160784 .337255 rgb
f
294.505 373.141 mo
293.781 369.344 li
292.981 369.705 292.188 370.091 291.374 370.419 cv
287.162 372.112 287.697 363.898 286.269 358.193 cv
285.672 355.805 281.564 344.072 281.307 343.385 cv
276.356 355.442 li
276.412 355.623 276.468 355.807 276.529 355.998 cv
277.159 357.974 277.658 359.923 278.684 361.751 cv
280.438 364.878 282.184 367.866 283.913 371.004 cv
284.274 372.229 284.89 373.401 284.889 374.677 cv
284.887 375.777 284.777 376.978 285.42 377.87 cv
285.802 378.401 286.432 378.745 287.085 378.78 cv
289.109 378.89 290.479 377.019 292.015 376.028 cv
293.793 374.879 296.661 374.473 297.764 372.52 cv
294.505 373.141 li
cp
.952941 .662745 .517647 rgb
f
286.315 375.412 mo
289.471 375.23 294.787 373.385 293.661 369.397 cv
295.461 368.58 296.803 367.834 297.828 369.544 cv
298.601 370.837 298.393 372.98 295.543 374.387 cv
294.383 374.96 293.108 375.322 292.015 376.028 cv
290.479 377.019 289.109 378.89 287.085 378.78 cv
286.432 378.745 285.802 378.401 285.42 377.87 cv
284.777 376.979 284.598 375.995 284.599 374.896 cv
284.6 374.566 284.731 373.725 284.708 373.396 cv
285.222 374.224 285.142 375.479 286.315 375.412 cv
cp
.145098 .160784 .337255 rgb
f
274.213 380.332 mo
281.004 379.507 li
281.004 377.912 li
280.569 377.865 li
277.822 377.567 275.048 378.112 272.619 379.429 cv
255.797 389.34 li
257.39 390.243 li
274.213 380.332 li
cp
.235294 .262745 .517647 rgb
f
279.241 378.813 mo
279.373 378.873 279.501 378.938 279.624 379.007 cv
279.627 380.131 li
279.503 380.061 279.375 379.995 279.241 379.934 cv
279.241 378.813 li
cp
.152941 .180392 .403922 rgb
f
280.364 379.917 mo
278.438 379.255 275.884 379.392 274.213 380.333 cv
274.216 381.686 li
275.886 380.746 278.438 380.609 280.364 381.268 cv
280.364 379.917 li
cp
f
279.624 379.007 mo
279.627 380.131 li
297.653 390.166 li
297.649 389.042 li
279.624 379.007 li
cp
f
299.108 392.155 mo
299.105 391.032 li
299.103 390.311 298.618 389.591 297.649 389.042 cv
297.653 390.166 li
298.622 390.714 299.106 391.434 299.108 392.155 cv
cp
f
gsave
299.108 392.155 mo
299.105 391.032 li
299.103 390.311 298.618 389.591 297.649 389.042 cv
297.653 390.166 li
298.622 390.714 299.106 391.434 299.108 392.155 cv
clp
297.649 389.042 mo
297.653 390.166 li
298.622 390.714 299.106 391.434 299.108 392.155 cv
299.105 391.032 li
299.103 390.311 298.618 389.591 297.649 389.042 cv
cp
f
grestore
299.424 394.075 mo
300.885 393.253 301.615 392.171 301.611 391.091 cv
301.615 392.214 li
301.617 393.295 300.888 394.376 299.427 395.198 cv
292.257 399.219 li
292.253 397.87 li
299.424 394.075 li
cp
f
297.649 389.042 mo
279.624 379.007 li
279.501 378.938 279.373 378.873 279.241 378.813 cv
279.241 377.218 li
279.998 377.419 280.706 377.695 281.329 378.048 cv
299.458 388.148 li
302.342 389.782 302.327 392.441 299.424 394.075 cv
299.424 394.075 292.384 397.805 292.253 397.87 cv
290.644 396.971 li
290.734 396.926 290.823 396.879 290.907 396.832 cv
297.626 393.05 li
299.589 391.945 299.6 390.147 297.649 389.042 cv
cp
.235294 .262745 .517647 rgb
f
292.253 397.87 mo
290.659 396.967 li
279.734 403.116 li
281.329 404.019 li
292.253 397.87 li
cp
f
277.595 403.322 mo
279.189 404.225 li
279.754 404.545 280.52 404.475 281.329 404.019 cv
279.734 403.116 li
278.926 403.572 278.16 403.642 277.595 403.322 cv
cp
.152941 .180392 .403922 rgb
f
gsave
277.595 403.322 mo
279.189 404.225 li
279.754 404.545 280.52 404.475 281.329 404.019 cv
279.734 403.116 li
278.926 403.572 278.16 403.642 277.595 403.322 cv
clp
279.456 403.259 mo
279.548 403.216 279.641 403.169 279.734 403.116 cv
281.329 404.019 li
281.235 404.072 281.142 404.12 281.05 404.162 cv
280.345 404.486 279.688 404.508 279.189 404.225 cv
277.595 403.322 li
278.094 403.605 278.751 403.583 279.456 403.259 cv
cp
.235294 .262745 .517647 rgb
f
grestore
276.744 404.753 mo
278.337 405.656 li
278.093 405.493 li
277.289 404.869 276.954 403.651 277.169 402.151 cv
275.575 401.247 li
275.36 402.747 275.696 403.965 276.499 404.589 cv
276.744 404.753 li
cp
.235294 .262745 .517647 rgb
f
gsave
276.744 404.753 mo
278.337 405.656 li
278.093 405.493 li
277.289 404.868 276.954 403.651 277.169 402.151 cv
275.575 401.247 li
275.36 402.747 275.696 403.965 276.499 404.589 cv
276.744 404.753 li
clp
275.531 401.641 mo
275.541 401.512 275.556 401.38 275.575 401.247 cv
277.169 402.151 li
277.15 402.284 277.135 402.415 277.125 402.544 cv
277.017 403.862 277.36 404.924 278.093 405.493 cv
278.337 405.656 li
276.744 404.753 li
276.499 404.589 li
275.767 404.02 275.424 402.959 275.531 401.641 cv
cp
f
grestore
302.357 364.423 mo
300.763 363.519 li
282.13 374.009 li
283.724 374.912 li
302.357 364.423 li
cp
.152941 .180392 .403922 rgb
f
279.59 381.12 mo
277.996 380.216 li
275.575 401.247 li
277.169 402.151 li
279.59 381.12 li
cp
.235294 .262745 .517647 rgb
f
283.724 374.912 mo
282.13 374.009 li
280.093 375.156 278.355 377.766 277.996 380.216 cv
279.59 381.12 li
279.949 378.669 281.687 376.059 283.724 374.912 cv
cp
f
gsave
283.724 374.912 mo
282.13 374.009 li
280.093 375.156 278.355 377.766 277.996 380.216 cv
279.59 381.12 li
279.949 378.669 281.687 376.059 283.724 374.912 cv
clp
283.724 374.912 mo
282.13 374.009 li
281.472 374.379 280.846 374.902 280.287 375.522 cv
281.881 376.426 li
282.44 375.805 283.067 375.282 283.724 374.912 cv
cp
f
281.881 376.426 mo
280.287 375.522 li
279.633 376.249 279.071 377.109 278.66 378.017 cv
280.253 378.92 li
280.665 378.013 281.227 377.152 281.881 376.426 cv
cp
f
280.253 378.92 mo
278.66 378.017 li
278.334 378.735 278.104 379.483 277.996 380.216 cv
279.59 381.12 li
279.698 380.386 279.928 379.638 280.253 378.92 cv
cp
f
grestore
283.724 374.912 mo
281.687 376.059 279.949 378.669 279.59 381.12 cv
277.169 402.151 li
276.954 403.651 277.289 404.869 278.093 405.493 cv
278.899 406.119 280.08 406.073 281.333 405.369 cv
292.257 399.219 li
292.253 397.87 li
281.329 404.019 li
280.433 404.524 279.59 404.556 279.015 404.109 cv
278.438 403.661 278.199 402.787 278.357 401.71 cv
280.777 380.68 li
281.038 378.933 282.277 377.077 283.728 376.26 cv
302.361 365.77 li
302.357 364.423 li
283.724 374.912 li
cp
.152941 .180392 .403922 rgb
f
253.657 389.545 mo
255.25 390.448 li
255.815 390.768 256.582 390.698 257.39 390.243 cv
255.797 389.34 li
254.988 389.795 254.221 389.865 253.657 389.545 cv
cp
f
gsave
253.657 389.545 mo
255.25 390.448 li
255.815 390.768 256.582 390.698 257.39 390.243 cv
255.797 389.34 li
254.988 389.795 254.221 389.865 253.657 389.545 cv
clp
255.518 389.483 mo
255.61 389.44 255.703 389.392 255.797 389.34 cv
257.39 390.243 li
257.297 390.296 257.204 390.343 257.112 390.385 cv
256.407 390.709 255.75 390.732 255.25 390.448 cv
253.657 389.545 li
254.156 389.828 254.813 389.807 255.518 389.483 cv
cp
.235294 .262745 .517647 rgb
f
grestore
252.805 390.976 mo
254.4 391.88 li
254.155 391.716 li
253.352 391.092 253.015 389.874 253.231 388.374 cv
251.637 387.471 li
251.422 388.971 251.757 390.189 252.561 390.813 cv
252.805 390.976 li
cp
.235294 .262745 .517647 rgb
f
gsave
252.805 390.976 mo
254.4 391.88 li
254.155 391.716 li
253.352 391.092 253.015 389.874 253.231 388.374 cv
251.637 387.471 li
251.422 388.971 251.757 390.189 252.561 390.813 cv
252.805 390.976 li
clp
251.593 387.864 mo
251.604 387.735 251.618 387.604 251.637 387.471 cv
253.231 388.374 li
253.212 388.507 253.197 388.639 253.187 388.767 cv
253.079 390.086 253.423 391.147 254.155 391.716 cv
254.4 391.88 li
252.805 390.976 li
252.561 390.813 li
251.829 390.244 251.485 389.182 251.593 387.864 cv
cp
f
grestore
278.419 350.646 mo
276.825 349.743 li
258.192 360.233 li
259.786 361.136 li
278.419 350.646 li
cp
.152941 .180392 .403922 rgb
f
255.652 367.343 mo
254.058 366.44 li
251.637 387.471 li
253.231 388.374 li
255.652 367.343 li
cp
.235294 .262745 .517647 rgb
f
259.786 361.136 mo
258.192 360.233 li
256.154 361.379 254.417 363.989 254.058 366.44 cv
255.652 367.343 li
256.011 364.892 257.748 362.283 259.786 361.136 cv
cp
f
gsave
259.786 361.136 mo
258.192 360.233 li
256.154 361.379 254.417 363.989 254.058 366.44 cv
255.652 367.343 li
256.011 364.892 257.748 362.283 259.786 361.136 cv
clp
259.786 361.136 mo
258.192 360.233 li
257.534 360.603 256.908 361.125 256.348 361.746 cv
257.943 362.65 li
258.502 362.029 259.128 361.506 259.786 361.136 cv
cp
f
257.943 362.65 mo
256.348 361.746 li
255.695 362.473 255.133 363.333 254.722 364.24 cv
256.316 365.144 li
256.727 364.236 257.289 363.376 257.943 362.65 cv
cp
f
256.316 365.144 mo
254.722 364.24 li
254.396 364.958 254.165 365.706 254.058 366.44 cv
255.652 367.343 li
255.759 366.609 255.99 365.862 256.316 365.144 cv
cp
f
grestore
259.786 361.136 mo
257.748 362.283 256.011 364.892 255.652 367.343 cv
253.231 388.374 li
253.015 389.874 253.352 391.092 254.155 391.716 cv
254.96 392.342 256.142 392.297 257.394 391.592 cv
274.217 381.68 li
274.213 380.332 li
257.39 390.243 li
256.495 390.747 255.652 390.779 255.077 390.332 cv
254.5 389.885 254.261 389.011 254.419 387.934 cv
256.84 366.903 li
257.1 365.158 258.338 363.3 259.79 362.484 cv
278.423 351.995 li
278.419 350.646 li
259.786 361.136 li
cp
.152941 .180392 .403922 rgb
f
302.976 361.085 mo
302.967 363.811 li
279.493 377.117 li
279.49 374.391 li
302.976 361.085 li
cp
.705882 .643137 .960784 rgb
f
302.976 361.085 mo
279.49 374.391 li
254.911 360.523 li
278.385 347.216 li
302.976 361.085 li
cp
.882353 .870588 .972549 rgb
f
268.017 356.756 mo
268.017 360.197 270.049 362.622 270.96 365.382 cv
270.178 365.645 269.391 365.737 268.522 365.466 cv
268.457 365.442 li
267.748 362.667 268.017 359.712 268.017 356.756 cv
cp
.145098 .160784 .337255 rgb
f
303.813 347.282 mo
302.334 346.663 296.325 341.672 293.141 340.64 cv
291.616 340.144 289.952 340.317 288.392 340.685 cv
281.705 342.265 275.959 346.611 273.097 346.663 cv
273.13 347.041 273.166 347.418 273.2 347.795 cv
270.404 347.282 268.089 348.19 266.82 349.664 cv
263.665 353.326 260.378 362.924 268.522 365.466 cv
269.122 365.654 270.958 366.537 271.398 366.958 cv
271.904 367.441 272.461 367.872 273.071 368.216 cv
274.697 369.134 276.61 369.382 278.447 369.166 cv
280.295 368.949 281.982 367.661 283.616 366.818 cv
287.281 364.925 291.05 363.179 295.035 362.068 cv
297.087 361.496 299.183 361.096 301.235 360.526 cv
302.257 360.241 303.289 359.904 304.136 359.267 cv
307.184 356.976 308.279 349.156 303.813 347.282 cv
cp
.152941 .180392 .403922 rgb
f
266.085 347.23 mo
266.255 348.551 266.383 349.897 266.431 351.226 cv
266.367 349.89 266.253 348.557 266.085 347.23 cv
cp
.952941 .662745 .517647 rgb
f
364.989 337.823 mo
364.98 340.935 li
326.205 363.469 li
326.214 360.357 li
364.989 337.823 li
cp
.705882 .643137 .960784 rgb
f
326.214 360.357 mo
326.205 363.469 li
258.323 323.964 li
258.332 320.852 li
326.214 360.357 li
cp
.74902 .745098 .929412 rgb
f
364.989 337.823 mo
326.214 360.357 li
258.332 320.852 li
297.107 298.318 li
364.989 337.823 li
cp
.929412 .92549 .972549 rgb
f
280.794 324.91 mo
280.797 323.91 li
280.795 324.322 281.067 324.734 281.612 325.049 cv
281.61 326.05 li
281.064 325.734 280.793 325.322 280.794 324.91 cv
cp
.145098 .160784 .337255 rgb
f
gsave
280.794 324.91 mo
280.797 323.91 li
280.795 324.322 281.067 324.734 281.612 325.049 cv
281.61 326.05 li
281.064 325.734 280.793 325.322 280.794 324.91 cv
clp
281.612 325.049 mo
281.61 326.05 li
281.064 325.734 280.793 325.322 280.794 324.91 cv
280.797 323.91 li
280.795 324.322 281.067 324.734 281.612 325.049 cv
cp
.152941 .180392 .403922 rgb
f
grestore
320.958 330.159 mo
320.956 331.159 li
320.953 331.566 320.686 331.972 320.151 332.283 cv
320.154 331.283 li
320.689 330.972 320.956 330.566 320.958 330.159 cv
cp
f
gsave
320.958 330.159 mo
320.956 331.159 li
320.953 331.566 320.686 331.972 320.151 332.283 cv
320.154 331.283 li
320.689 330.972 320.956 330.566 320.958 330.159 cv
clp
320.958 330.159 mo
320.956 331.159 li
320.953 331.566 320.686 331.972 320.151 332.283 cv
320.154 331.283 li
320.689 330.972 320.956 330.566 320.958 330.159 cv
cp
.152941 .180392 .403922 rgb
f
grestore
320.154 331.283 mo
320.151 332.283 li
308.273 339.186 li
308.275 338.186 li
320.154 331.283 li
cp
.152941 .180392 .403922 rgb
f
304.366 338.186 mo
304.363 339.186 li
281.61 326.05 li
281.612 325.049 li
304.366 338.186 li
cp
.145098 .160784 .337255 rgb
f
308.275 338.186 mo
308.273 339.186 li
307.198 339.811 305.447 339.812 304.363 339.186 cv
304.366 338.186 li
305.45 338.812 307.2 338.811 308.275 338.186 cv
cp
f
gsave
308.275 338.186 mo
308.273 339.186 li
307.198 339.811 305.447 339.812 304.363 339.186 cv
304.366 338.186 li
305.45 338.812 307.2 338.811 308.275 338.186 cv
clp
308.275 338.186 mo
308.273 339.186 li
307.198 339.811 305.447 339.812 304.363 339.186 cv
304.366 338.186 li
305.45 338.812 307.2 338.811 308.275 338.186 cv
cp
.152941 .180392 .403922 rgb
f
grestore
320.142 329.018 mo
321.225 329.644 321.231 330.657 320.154 331.283 cv
308.275 338.186 li
307.2 338.811 305.45 338.812 304.366 338.186 cv
281.612 325.049 li
280.529 324.423 280.524 323.41 281.599 322.785 cv
293.479 315.882 li
294.555 315.256 296.304 315.256 297.388 315.882 cv
320.142 329.018 li
cp
.235294 .262745 .517647 rgb
f
317.441 329.54 mo
318.291 330.03 318.295 330.825 317.451 331.315 cv
308.136 336.729 li
307.293 337.219 305.919 337.22 305.07 336.729 cv
287.226 326.427 li
286.376 325.937 286.373 325.141 287.216 324.651 cv
296.531 319.237 li
297.376 318.747 298.747 318.747 299.597 319.237 cv
317.441 329.54 li
cp
.152941 .180392 .403922 rgb
f
292.863 317.435 mo
292.863 317.245 li
292.938 317.348 li
292.937 317.538 li
292.863 317.435 li
cp
.145098 .160784 .337255 rgb
f
gsave
292.863 317.435 mo
292.863 317.245 li
292.938 317.348 li
292.937 317.538 li
292.863 317.435 li
clp
292.938 317.348 mo
292.937 317.538 li
292.863 317.435 li
292.863 317.245 li
292.938 317.348 li
cp
f
grestore
296.583 317.753 mo
296.582 317.943 li
296.508 318.046 li
296.509 317.856 li
296.583 317.753 li
cp
f
gsave
296.583 317.753 mo
296.582 317.943 li
296.508 318.045 li
296.509 317.856 li
296.583 317.753 li
clp
296.583 317.753 mo
296.582 317.943 li
296.508 318.046 li
296.509 317.856 li
296.583 317.753 li
cp
f
grestore
296.509 317.856 mo
296.508 318.046 li
295.346 318.722 li
295.346 318.533 li
296.509 317.856 li
cp
f
294.987 318.533 mo
294.987 318.722 li
292.937 317.538 li
292.938 317.348 li
294.987 318.533 li
cp
f
295.346 318.533 mo
295.346 318.722 li
295.246 318.779 295.086 318.779 294.987 318.722 cv
294.987 318.533 li
295.087 318.589 295.247 318.589 295.346 318.533 cv
cp
f
gsave
295.346 318.533 mo
295.346 318.722 li
295.246 318.779 295.086 318.779 294.987 318.722 cv
294.987 318.533 li
295.087 318.59 295.247 318.59 295.346 318.533 cv
clp
295.346 318.533 mo
295.346 318.722 li
295.246 318.779 295.086 318.779 294.987 318.722 cv
294.987 318.533 li
295.087 318.589 295.247 318.589 295.346 318.533 cv
cp
f
grestore
296.508 317.649 mo
296.607 317.707 296.608 317.799 296.509 317.856 cv
295.346 318.533 li
295.247 318.589 295.087 318.589 294.987 318.533 cv
292.938 317.348 li
292.839 317.292 292.839 317.199 292.938 317.142 cv
294.101 316.466 li
294.199 316.409 294.36 316.409 294.458 316.465 cv
296.508 317.649 li
cp
.152941 .180392 .403922 rgb
f
290.848 318.605 mo
290.849 318.416 li
290.923 318.52 li
290.922 318.709 li
290.848 318.605 li
cp
.145098 .160784 .337255 rgb
f
gsave
290.848 318.605 mo
290.849 318.416 li
290.923 318.52 li
290.922 318.709 li
290.848 318.605 li
clp
290.923 318.52 mo
290.922 318.709 li
290.848 318.605 li
290.849 318.416 li
290.923 318.52 li
cp
f
grestore
294.568 318.924 mo
294.568 319.114 li
294.494 319.217 li
294.494 319.027 li
294.568 318.924 li
cp
f
gsave
294.568 318.924 mo
294.568 319.114 li
294.494 319.217 li
294.494 319.027 li
294.568 318.924 li
clp
294.568 318.924 mo
294.568 319.114 li
294.494 319.217 li
294.494 319.027 li
294.568 318.924 li
cp
f
grestore
294.494 319.027 mo
294.494 319.217 li
293.329 319.893 li
293.329 319.704 li
294.494 319.027 li
cp
f
292.973 319.703 mo
292.972 319.893 li
290.922 318.709 li
290.923 318.52 li
292.973 319.703 li
cp
f
293.329 319.704 mo
293.329 319.893 li
293.232 319.95 293.072 319.95 292.972 319.893 cv
292.973 319.703 li
293.072 319.76 293.232 319.76 293.329 319.704 cv
cp
f
gsave
293.329 319.704 mo
293.329 319.893 li
293.232 319.95 293.072 319.95 292.972 319.893 cv
292.973 319.703 li
293.072 319.76 293.232 319.76 293.329 319.704 cv
clp
293.329 319.704 mo
293.329 319.893 li
293.232 319.95 293.072 319.95 292.972 319.893 cv
292.973 319.703 li
293.072 319.76 293.232 319.76 293.329 319.704 cv
cp
f
grestore
294.493 318.819 mo
294.592 318.877 294.593 318.969 294.494 319.027 cv
293.329 319.704 li
293.232 319.76 293.072 319.76 292.973 319.703 cv
290.923 318.52 li
290.824 318.462 290.824 318.37 290.921 318.314 cv
292.086 317.636 li
292.185 317.579 292.345 317.579 292.443 317.636 cv
294.493 318.819 li
cp
.152941 .180392 .403922 rgb
f
288.833 319.776 mo
288.833 319.586 li
288.908 319.69 li
288.907 319.88 li
288.833 319.776 li
cp
.145098 .160784 .337255 rgb
f
gsave
288.833 319.776 mo
288.833 319.586 li
288.908 319.69 li
288.907 319.88 li
288.833 319.776 li
clp
288.908 319.69 mo
288.907 319.88 li
288.833 319.776 li
288.834 319.586 li
288.908 319.69 li
cp
f
grestore
292.553 320.095 mo
292.552 320.284 li
292.479 320.387 li
292.48 320.198 li
292.553 320.095 li
cp
f
gsave
292.553 320.095 mo
292.552 320.284 li
292.479 320.387 li
292.48 320.198 li
292.553 320.095 li
clp
292.553 320.095 mo
292.552 320.284 li
292.479 320.387 li
292.48 320.198 li
292.553 320.095 li
cp
f
grestore
292.48 320.198 mo
292.479 320.387 li
291.315 321.064 li
291.315 320.875 li
292.48 320.198 li
cp
f
290.958 320.874 mo
290.957 321.063 li
288.907 319.88 li
288.908 319.69 li
290.958 320.874 li
cp
f
291.315 320.875 mo
291.315 321.064 li
291.217 321.121 291.057 321.121 290.957 321.063 cv
290.958 320.874 li
291.058 320.932 291.218 320.932 291.315 320.875 cv
cp
f
gsave
291.315 320.875 mo
291.315 321.064 li
291.217 321.121 291.057 321.121 290.957 321.063 cv
290.958 320.874 li
291.058 320.932 291.218 320.932 291.315 320.875 cv
clp
291.315 320.875 mo
291.315 321.064 li
291.217 321.121 291.057 321.121 290.957 321.063 cv
290.958 320.874 li
291.058 320.932 291.218 320.932 291.315 320.875 cv
cp
f
grestore
292.479 319.991 mo
292.578 320.048 292.577 320.141 292.48 320.198 cv
291.315 320.875 li
291.218 320.932 291.058 320.932 290.958 320.874 cv
288.908 319.69 li
288.81 319.634 288.809 319.541 288.906 319.484 cv
290.072 318.808 li
290.169 318.751 290.33 318.75 290.428 318.806 cv
292.479 319.991 li
cp
.152941 .180392 .403922 rgb
f
286.819 320.947 mo
286.819 320.757 li
286.893 320.861 li
286.892 321.051 li
286.819 320.947 li
cp
.145098 .160784 .337255 rgb
f
gsave
286.819 320.947 mo
286.819 320.757 li
286.893 320.861 li
286.892 321.05 li
286.819 320.947 li
clp
286.893 320.861 mo
286.892 321.051 li
286.819 320.947 li
286.819 320.757 li
286.893 320.861 li
cp
f
grestore
290.538 321.266 mo
290.537 321.455 li
290.464 321.559 li
290.465 321.369 li
290.538 321.266 li
cp
f
gsave
290.538 321.266 mo
290.537 321.455 li
290.464 321.559 li
290.465 321.369 li
290.538 321.266 li
clp
290.538 321.266 mo
290.537 321.455 li
290.464 321.559 li
290.465 321.369 li
290.538 321.266 li
cp
f
grestore
290.465 321.369 mo
290.464 321.559 li
289.299 322.235 li
289.3 322.046 li
290.465 321.369 li
cp
f
288.943 322.044 mo
288.943 322.235 li
286.892 321.051 li
286.893 320.861 li
288.943 322.044 li
cp
f
289.3 322.046 mo
289.299 322.235 li
289.202 322.292 289.042 322.292 288.943 322.235 cv
288.943 322.044 li
289.043 322.102 289.203 322.102 289.3 322.046 cv
cp
f
gsave
289.3 322.046 mo
289.299 322.235 li
289.202 322.292 289.042 322.292 288.943 322.235 cv
288.943 322.044 li
289.043 322.102 289.203 322.102 289.3 322.046 cv
clp
289.3 322.046 mo
289.299 322.235 li
289.202 322.292 289.042 322.292 288.943 322.235 cv
288.943 322.044 li
289.043 322.102 289.203 322.102 289.3 322.046 cv
cp
f
grestore
290.464 321.161 mo
290.563 321.219 290.562 321.312 290.465 321.369 cv
289.3 322.046 li
289.203 322.102 289.043 322.102 288.943 322.044 cv
286.893 320.861 li
286.795 320.804 286.794 320.712 286.892 320.655 cv
288.057 319.978 li
288.154 319.922 288.316 319.921 288.413 319.978 cv
290.464 321.161 li
cp
.152941 .180392 .403922 rgb
f
284.803 322.119 mo
284.804 321.929 li
284.877 322.033 li
284.876 322.222 li
284.803 322.119 li
cp
.145098 .160784 .337255 rgb
f
gsave
284.803 322.119 mo
284.804 321.929 li
284.877 322.033 li
284.876 322.222 li
284.803 322.119 li
clp
284.877 322.033 mo
284.876 322.222 li
284.803 322.119 li
284.804 321.929 li
284.877 322.033 li
cp
f
grestore
288.522 322.438 mo
288.522 322.628 li
288.449 322.729 li
288.45 322.54 li
288.522 322.438 li
cp
f
gsave
288.522 322.438 mo
288.522 322.628 li
288.449 322.729 li
288.45 322.54 li
288.522 322.438 li
clp
288.522 322.438 mo
288.522 322.628 li
288.449 322.729 li
288.45 322.54 li
288.522 322.438 li
cp
f
grestore
288.45 322.54 mo
288.449 322.729 li
287.285 323.406 li
287.285 323.217 li
288.45 322.54 li
cp
f
286.927 323.217 mo
286.927 323.406 li
284.876 322.222 li
284.877 322.033 li
286.927 323.217 li
cp
f
287.285 323.217 mo
287.285 323.406 li
287.187 323.463 287.026 323.463 286.927 323.406 cv
286.927 323.217 li
287.027 323.274 287.188 323.273 287.285 323.217 cv
cp
f
gsave
287.285 323.216 mo
287.285 323.407 li
287.187 323.463 287.026 323.463 286.927 323.407 cv
286.927 323.216 li
287.027 323.274 287.188 323.273 287.285 323.216 cv
clp
287.285 323.217 mo
287.285 323.406 li
287.187 323.463 287.026 323.463 286.927 323.406 cv
286.927 323.217 li
287.027 323.274 287.188 323.273 287.285 323.217 cv
cp
f
grestore
288.448 322.333 mo
288.547 322.391 288.547 322.483 288.45 322.54 cv
287.285 323.217 li
287.188 323.273 287.027 323.274 286.927 323.217 cv
284.877 322.033 li
284.779 321.976 284.78 321.883 284.877 321.826 cv
286.042 321.149 li
286.139 321.093 286.299 321.093 286.397 321.149 cv
288.448 322.333 li
cp
.152941 .180392 .403922 rgb
f
282.789 323.29 mo
282.789 323.1 li
282.862 323.203 li
282.861 323.393 li
282.789 323.29 li
cp
.145098 .160784 .337255 rgb
f
gsave
282.789 323.29 mo
282.789 323.1 li
282.862 323.203 li
282.861 323.393 li
282.789 323.29 li
clp
282.862 323.203 mo
282.861 323.393 li
282.789 323.29 li
282.789 323.1 li
282.862 323.203 li
cp
f
grestore
286.508 323.609 mo
286.507 323.798 li
286.434 323.9 li
286.435 323.71 li
286.508 323.609 li
cp
f
gsave
286.508 323.609 mo
286.507 323.798 li
286.434 323.9 li
286.435 323.71 li
286.508 323.609 li
clp
286.508 323.609 mo
286.507 323.798 li
286.434 323.9 li
286.435 323.71 li
286.508 323.609 li
cp
f
grestore
286.435 323.71 mo
286.434 323.9 li
285.27 324.577 li
285.271 324.387 li
286.435 323.71 li
cp
f
284.912 324.387 mo
284.912 324.577 li
282.861 323.393 li
282.862 323.203 li
284.912 324.387 li
cp
f
285.271 324.387 mo
285.27 324.577 li
285.173 324.634 285.011 324.634 284.912 324.577 cv
284.912 324.387 li
285.012 324.445 285.173 324.444 285.271 324.387 cv
cp
f
gsave
285.27 324.387 mo
285.27 324.577 li
285.173 324.634 285.011 324.634 284.912 324.577 cv
284.912 324.387 li
285.012 324.445 285.173 324.444 285.27 324.387 cv
clp
285.271 324.387 mo
285.27 324.577 li
285.173 324.634 285.011 324.634 284.912 324.577 cv
284.912 324.387 li
285.012 324.445 285.173 324.444 285.271 324.387 cv
cp
f
grestore
286.433 323.504 mo
286.532 323.561 286.532 323.654 286.435 323.71 cv
285.271 324.387 li
285.173 324.444 285.012 324.445 284.912 324.387 cv
282.862 323.203 li
282.764 323.147 282.765 323.053 282.863 322.997 cv
284.027 322.32 li
284.125 322.263 284.284 322.263 284.383 322.32 cv
286.433 323.504 li
cp
.152941 .180392 .403922 rgb
f
287.091 315.363 mo
287.143 315.347 li
287.305 315.284 li
288.512 314.895 291.502 314.106 291.787 315.334 cv
291.589 315.503 li
292.848 316.232 291.89 316.464 292.525 317.051 cv
292.853 317.356 292.876 318.085 292.466 317.955 cv
292.74 318.402 292.526 318.822 291.523 318.586 cv
290.996 318.461 290.148 318.435 288.881 319.19 cv
288.932 319.272 288.393 319.687 289.232 319.682 cv
289.789 319.679 289.786 319.207 290.659 319.453 cv
290.988 319.546 291.049 319.83 290.823 320.009 cv
287.508 322.635 285.731 320.112 285.851 320.182 cv
285.618 320.041 li
285.352 320.021 283.064 320.54 282.862 320.377 cv
282.586 320.154 282.582 319.678 282.459 319.355 cv
282.147 318.539 281.871 318.351 282.108 317.9 cv
282.591 316.977 286.024 315.798 287.091 315.363 cv
cp
1 .780392 .678431 rgb
f
283.887 316.378 mo
281.789 315.904 276.385 316.414 270.921 317.725 cv
267.483 318.549 265.497 320.288 266.172 322.516 cv
266.438 323.394 267.408 324.641 268.404 324.831 cv
269.641 325.068 278.019 321.856 284.014 320.917 cv
284.646 320.819 284.839 319.819 284.84 318.765 cv
284.841 317.771 284.603 316.54 283.887 316.378 cv
cp
.996078 .556863 .654902 rgb
f
262.548 321.583 mo
262.703 319.561 262.405 316.512 264.865 315.601 cv
266.169 315.118 267.963 315.628 269.059 316.376 cv
269.417 316.62 270.835 317.452 271.169 317.628 cv
273.168 318.682 275.102 319.853 277.017 321.051 cv
280.557 323.265 286.214 325.109 288.157 331.789 cv
288.843 334.148 288.548 336.767 287.385 338.929 cv
287.096 339.469 286.726 339.916 286.478 340.478 cv
285.699 342.251 285.372 344.086 285.192 346.031 cv
285.028 347.809 284.975 349.659 285.265 351.42 cv
285.496 352.824 285.652 354.372 284.811 355.647 cv
283.937 356.968 282.238 357.455 280.664 357.625 cv
276.96 358.027 273.214 357.228 269.711 355.959 cv
268.554 355.54 267.398 355.059 266.438 354.287 cv
262.673 351.256 265.822 347.89 266.556 345.636 cv
268.491 339.707 261.766 331.766 262.548 321.583 cv
cp
.996078 .282353 .431373 rgb
f
269.432 314.735 mo
269.396 315.548 269.263 316.778 269.006 317.402 cv
268.703 318.137 268.313 318.498 268.378 319.325 cv
268.448 320.209 268.867 320.964 269.462 321.611 cv
270.581 322.833 272.099 323.683 273.725 324 cv
274.823 324.214 276.061 324.146 277.056 323.597 cv
278.476 322.815 278.072 321.757 277.97 320.35 cv
277.861 318.846 277.915 318.706 279.213 317.4 cv
269.432 314.735 li
cp
1 .780392 .678431 rgb
f
282.033 303.296 mo
282.565 303.925 282.983 304.636 283.12 305.475 cv
283.378 307.059 282.826 308.637 283.015 310.213 cv
283.18 311.597 282.385 313.309 282.019 314.66 cv
281.788 315.512 281.486 316.458 280.705 316.868 cv
280.236 317.114 279.663 317.121 279.213 317.4 cv
278.938 317.57 278.73 317.831 278.473 318.028 cv
277.712 318.614 276.315 318.319 275.447 318.203 cv
274.57 318.085 273.621 317.941 272.811 317.567 cv
271.271 316.854 270.241 315.386 269.318 313.963 cv
261.745 302.295 276.923 297.246 282.033 303.296 cv
cp
f
267.79 301.755 mo
268.546 300.003 270.391 298.669 272.15 298.03 cv
273.999 297.359 276.04 297.292 277.966 297.696 cv
278.354 297.777 278.741 297.878 279.104 298.04 cv
279.805 298.353 280.386 298.877 280.955 299.394 cv
281.576 299.958 282.423 300.494 282.845 301.218 cv
283.27 301.948 283.611 302.802 283.588 303.66 cv
283.578 304.038 283.364 304.349 283.182 304.683 cv
283.049 304.927 282.851 305.128 282.681 305.349 cv
282.118 306.078 281.873 307.127 281.539 307.975 cv
281.395 308.341 281.234 308.73 280.909 308.952 cv
280.276 309.385 279.389 308.982 278.658 309.216 cv
278.232 309.352 277.899 309.699 277.684 310.09 cv
277.469 310.483 277.356 310.922 277.247 311.355 cv
277.074 312.036 277.059 312.611 276.982 313.288 cv
276.905 313.973 276.722 314.706 276.249 315.231 cv
275.189 316.406 273.117 316.369 271.712 316.078 cv
271.205 315.973 270.692 315.86 270.221 315.641 cv
267.775 314.503 266.32 311.161 266.035 308.642 cv
265.551 304.377 266.884 303.861 267.79 301.755 cv
cp
.788235 .611765 .513726 rgb
f
277.796 308.666 mo
276.369 308.678 276.141 310.466 277.218 311.754 cv
277.532 312.13 278.062 312.443 278.458 312.732 cv
281.162 314.706 281.625 312.316 280.762 311.639 cv
278.757 310.068 279.59 308.652 277.796 308.666 cv
cp
1 .780392 .678431 rgb
f
278.426 311.31 mo
278.252 311.173 276.563 310.34 277.615 309.607 cv
277.906 309.404 278.266 309.646 278.337 309.965 cv
278.375 310.131 278.335 310.307 278.372 310.472 cv
278.395 310.57 278.443 310.66 278.503 310.742 cv
278.664 310.966 279.17 311.153 279.1 311.502 cv
279.038 311.811 278.525 311.388 278.426 311.31 cv
cp
.952941 .662745 .517647 rgb
f
304.078 334.942 mo
304.128 334.544 304.508 334.88 304.36 334.429 cv
303.893 332.999 302.645 331.577 301.618 332.864 cv
300.172 334.678 292.821 337.644 291.759 337.097 cv
289.627 335.998 289.254 333.741 288.371 331.613 cv
288.113 330.99 284.861 322.859 280.184 325.625 cv
279.99 325.739 279.782 325.822 279.615 325.972 cv
275.665 329.492 280.291 334.599 282.38 337.699 cv
283.289 339.048 286.68 342.295 289.441 343.255 cv
292.114 344.185 295.765 343.354 299.205 340.47 cv
300.315 339.54 303.896 336.368 304.078 334.942 cv
cp
1 .780392 .678431 rgb
f
269.854 307.484 mo
269.452 307.98 269.033 308.468 268.701 309.011 cv
267.385 311.162 267.565 313.903 268.125 316.363 cv
268.683 318.822 269.58 321.248 269.557 323.769 cv
269.526 327.199 267.776 330.417 265.516 332.998 cv
264.016 334.711 262.077 336.296 259.801 336.373 cv
258.322 336.423 256.738 335.492 256.796 333.869 cv
256.882 331.484 259.934 330.941 259.598 324.284 cv
259.561 323.541 257.424 311.604 259.735 305.263 cv
261.766 299.693 267.273 299.982 268.604 300.91 cv
269.261 301.368 270.195 302.389 270.677 303.004 cv
271.292 303.785 271.357 304.909 270.962 305.808 cv
270.69 306.425 270.281 306.959 269.854 307.484 cv
cp
.72549 .54902 .454902 rgb
f
306.455 324.652 mo
305.386 331.089 li
305.368 331.199 305.278 331.298 305.12 331.359 cv
304.8 331.483 304.323 331.407 304.056 331.19 cv
303.921 331.081 303.865 330.957 303.882 330.844 cv
304.952 324.407 li
304.933 324.519 304.99 324.644 305.125 324.754 cv
305.393 324.97 305.869 325.046 306.189 324.922 cv
306.348 324.861 306.438 324.762 306.455 324.652 cv
cp
.145098 .160784 .337255 rgb
f
gsave
306.455 324.652 mo
305.386 331.089 li
305.368 331.199 305.278 331.298 305.12 331.359 cv
304.8 331.483 304.323 331.407 304.056 331.19 cv
303.921 331.081 303.864 330.957 303.882 330.844 cv
304.952 324.407 li
304.933 324.519 304.99 324.644 305.125 324.754 cv
305.393 324.97 305.869 325.046 306.189 324.922 cv
306.348 324.861 306.438 324.762 306.455 324.652 cv
clp
306.455 324.652 mo
305.386 331.089 li
305.368 331.199 305.278 331.298 305.12 331.359 cv
304.8 331.483 304.323 331.407 304.056 331.19 cv
303.921 331.081 303.865 330.957 303.882 330.844 cv
304.952 324.407 li
304.933 324.519 304.99 324.644 305.125 324.754 cv
305.393 324.97 305.869 325.046 306.189 324.922 cv
306.348 324.861 306.438 324.762 306.455 324.652 cv
cp
f
grestore
306.282 324.305 mo
306.55 324.522 306.509 324.799 306.189 324.922 cv
305.869 325.046 305.393 324.97 305.125 324.754 cv
304.856 324.536 304.899 324.26 305.219 324.136 cv
305.539 324.012 306.014 324.089 306.282 324.305 cv
cp
.196078 .223529 .454902 rgb
f
306.402 323.672 mo
306.246 324.613 li
306.233 324.693 306.168 324.765 306.053 324.809 cv
305.821 324.899 305.475 324.844 305.281 324.687 cv
305.183 324.607 305.142 324.517 305.156 324.436 cv
305.312 323.495 li
305.299 323.577 305.339 323.667 305.437 323.746 cv
305.631 323.904 305.977 323.959 306.209 323.869 cv
306.324 323.824 306.389 323.753 306.402 323.672 cv
cp
.145098 .160784 .337255 rgb
f
gsave
306.402 323.672 mo
306.246 324.613 li
306.233 324.693 306.168 324.764 306.053 324.809 cv
305.821 324.899 305.475 324.844 305.28 324.687 cv
305.183 324.607 305.142 324.517 305.156 324.436 cv
305.311 323.495 li
305.299 323.577 305.339 323.667 305.437 323.746 cv
305.631 323.904 305.977 323.959 306.209 323.869 cv
306.324 323.824 306.389 323.753 306.402 323.672 cv
clp
306.402 323.672 mo
306.246 324.613 li
306.233 324.693 306.168 324.765 306.053 324.809 cv
305.821 324.899 305.475 324.844 305.281 324.687 cv
305.183 324.607 305.142 324.517 305.156 324.436 cv
305.312 323.495 li
305.299 323.577 305.339 323.667 305.437 323.746 cv
305.631 323.904 305.977 323.959 306.209 323.869 cv
306.324 323.824 306.389 323.753 306.402 323.672 cv
cp
f
grestore
306.277 323.422 mo
306.471 323.579 306.441 323.779 306.209 323.869 cv
305.977 323.959 305.631 323.904 305.437 323.746 cv
305.242 323.589 305.273 323.388 305.505 323.299 cv
305.738 323.208 306.082 323.264 306.277 323.422 cv
cp
.196078 .223529 .454902 rgb
f
304.117 327.785 mo
304.366 327.673 304.395 327.671 304.366 327.851 cv
304.251 328.564 304.057 329.352 304.613 329.38 cv
305.399 329.42 305.885 328.1 305.929 327.731 cv
306.03 326.882 307.051 327.751 307.338 328.154 cv
307.43 328.282 307.465 328.443 307.558 328.569 cv
307.838 328.945 307.991 328.657 308.25 329.541 cv
308.523 330.469 309.174 330.974 308.596 331.849 cv
308.266 332.35 307.757 333.526 306.206 334.558 cv
305.832 334.807 304.053 335.79 303.17 336.57 cv
301.575 337.98 303.092 333.856 302.417 333.203 cv
302.26 333.051 301.206 334.046 301.168 333.804 cv
301.125 333.538 302.196 331.983 302.3 331.739 cv
302.784 330.601 303.058 328.259 304.117 327.785 cv
cp
1 .780392 .678431 rgb
f
304.402 334.847 mo
304.329 334.652 302.406 332.345 301.892 332.336 cv
301.326 332.325 301.096 332.694 300.706 333.042 cv
299.196 334.391 297.26 335.162 295.429 335.969 cv
294.702 336.289 293.19 336.719 293.167 336.725 cv
292.559 336.867 291.84 336.994 291.237 336.755 cv
290.693 336.541 290.227 335.839 289.933 335.36 cv
289.223 334.202 288.888 332.859 288.371 331.613 cv
288.112 330.989 284.861 322.859 280.184 325.625 cv
279.99 325.739 279.782 325.822 279.615 325.972 cv
275.665 329.492 280.291 334.599 282.38 337.699 cv
283.289 339.048 286.68 342.295 289.441 343.255 cv
291.85 344.093 294.531 343.393 296.693 342.204 cv
297.273 341.886 297.83 341.526 298.362 341.134 cv
298.86 340.767 299.356 340.457 299.81 340.042 cv
300.245 339.643 302.548 337.64 303.307 337.108 cv
303.798 336.764 304.837 336.191 304.703 335.456 cv
304.672 335.283 304.423 334.901 304.402 334.847 cv
cp
.996078 .556863 .654902 rgb
f
272.301 338.862 mo
247.096 324.214 li
247.415 324.03 247.573 323.939 247.892 323.755 cv
273.097 338.402 li
272.779 338.587 272.62 338.678 272.301 338.862 cv
cp
.145098 .160784 .337255 rgb
f
279.493 377.117 mo
254.916 363.248 li
250.384 352.587 251.628 334.876 247.096 324.214 cv
272.301 338.862 li
276.833 349.524 274.957 363.73 279.49 374.391 cv
279.493 377.117 li
cp
.74902 .745098 .929412 rgb
f
272.301 338.862 mo
247.096 324.214 li
247.415 324.03 247.573 323.939 247.892 323.755 cv
273.097 338.402 li
272.779 338.587 272.62 338.678 272.301 338.862 cv
cp
.882353 .870588 .972549 rgb
f
273.097 338.402 mo
277.907 348.842 276.386 362.99 281.196 373.432 cv
279.49 374.391 li
274.957 363.73 276.833 349.524 272.301 338.862 cv
272.62 338.678 272.779 338.587 273.097 338.402 cv
cp
.705882 .643137 .960784 rgb
f
336.496 342.499 mo
321.126 339.713 li
328.022 327.034 li
343.392 329.82 li
336.496 342.499 li
cp
1 1 1 rgb
f
333.247 349.253 mo
324.63 340.639 li
345.949 333.531 li
354.565 342.144 li
333.247 349.253 li
cp
f
343.021 349.351 mo
327.769 353.255 li
318.107 340.672 li
333.359 336.768 li
343.021 349.351 li
cp
f
337.123 332.973 mo
337.549 332.857 li
337.596 332.884 li
337.609 332.914 li
337.599 332.95 li
337.305 333.239 li
337.296 333.206 li
337.287 333.153 li
337.281 333.135 li
337.266 333.097 li
337.255 333.077 li
337.229 333.042 li
337.216 333.026 li
337.17 332.989 li
337.123 332.973 li
cp
.145098 .160784 .337255 rgb
f
337.122 332.968 mo
335.671 333.35 li
335.743 333.308 335.842 333.314 335.951 333.377 cv
337.206 332.976 li
337.122 332.968 li
cp
.65098 .592157 .878431 rgb
f
gsave
337.122 332.968 mo
335.671 333.35 li
335.743 333.308 335.841 333.314 335.951 333.377 cv
337.206 332.976 li
337.122 332.968 li
clp
335.941 333.372 mo
337.206 332.976 li
335.941 333.372 li
cp
.917647 .862745 .827451 rgb
f
335.941 333.372 mo
337.203 332.975 li
337.162 332.962 li
335.807 333.325 li
335.941 333.372 li
cp
.65098 .592157 .878431 rgb
f
335.807 333.325 mo
337.162 332.962 li
337.131 332.964 li
335.705 333.335 li
335.807 333.325 li
cp
f
335.705 333.335 mo
337.131 332.964 li
335.671 333.35 li
335.705 333.335 li
cp
f
grestore
336.228 334.305 mo
337.288 333.255 li
337.323 333.18 li
337.206 332.976 li
335.951 333.377 li
336.167 333.502 336.343 333.805 336.342 334.054 cv
336.341 334.178 336.298 334.264 336.228 334.305 cv
cp
f
gsave
336.228 334.305 mo
337.288 333.255 li
337.323 333.18 li
337.206 332.976 li
335.951 333.377 li
336.167 333.502 336.343 333.805 336.342 334.054 cv
336.341 334.178 336.298 334.264 336.228 334.305 cv
clp
336.228 334.305 mo
337.288 333.255 li
337.323 333.18 li
337.319 333.144 li
336.33 333.934 li
336.342 334.054 li
336.341 334.178 336.298 334.264 336.228 334.305 cv
cp
f
336.33 333.934 mo
337.319 333.144 li
337.306 333.099 li
336.284 333.784 li
336.33 333.934 li
cp
.917647 .862745 .827451 rgb
f
336.284 333.784 mo
337.306 333.099 li
337.281 333.051 li
336.201 333.625 li
336.284 333.784 li
cp
.882353 .870588 .972549 rgb
f
336.201 333.625 mo
337.281 333.051 li
337.206 332.976 li
335.951 333.377 li
336.045 333.432 336.132 333.521 336.201 333.625 cv
cp
.917647 .862745 .827451 rgb
f
grestore
335.951 333.377 mo
335.734 333.252 335.558 333.351 335.557 333.601 cv
335.556 333.85 335.732 334.153 335.948 334.278 cv
336.164 334.402 336.341 334.303 336.342 334.054 cv
336.343 333.805 336.167 333.502 335.951 333.377 cv
cp
.917647 .862745 .827451 rgb
f
335.675 333.349 mo
325.73 339.129 li
325.801 339.087 325.899 339.093 326.007 339.156 cv
335.952 333.376 li
335.844 333.313 335.745 333.308 335.675 333.349 cv
cp
1 .411765 .552941 rgb
f
gsave
335.675 333.349 mo
325.73 339.129 li
325.801 339.087 325.899 339.093 326.007 339.156 cv
335.952 333.376 li
335.844 333.313 335.745 333.308 335.675 333.349 cv
clp
325.998 339.151 mo
335.952 333.376 li
325.998 339.151 li
cp
.996078 .556863 .654902 rgb
f
325.998 339.151 mo
335.943 333.371 li
335.81 333.324 li
325.865 339.104 li
325.998 339.151 li
cp
1 .411765 .552941 rgb
f
325.865 339.104 mo
335.81 333.324 li
335.708 333.334 li
325.763 339.114 li
325.865 339.104 li
cp
f
325.763 339.114 mo
335.708 333.334 li
335.675 333.349 li
325.73 339.129 li
325.763 339.114 li
cp
f
grestore
326.284 340.085 mo
336.229 334.306 li
336.3 334.265 336.344 334.177 336.344 334.054 cv
336.344 333.806 336.17 333.502 335.952 333.376 cv
326.007 339.156 li
326.224 339.281 326.399 339.584 326.399 339.833 cv
326.398 339.957 326.355 340.044 326.284 340.085 cv
cp
f
gsave
326.284 340.085 mo
336.229 334.306 li
336.299 334.265 336.344 334.177 336.344 334.054 cv
336.344 333.806 336.17 333.502 335.952 333.376 cv
326.007 339.156 li
326.224 339.281 326.399 339.584 326.399 339.833 cv
326.398 339.957 326.355 340.044 326.284 340.085 cv
clp
326.284 340.085 mo
336.229 334.306 li
336.3 334.265 336.344 334.177 336.344 334.054 cv
336.331 333.933 li
326.386 339.713 li
326.399 339.833 li
326.398 339.957 326.355 340.044 326.284 340.085 cv
cp
.996078 .282353 .431373 rgb
f
326.386 339.713 mo
336.331 333.933 li
336.286 333.784 li
326.34 339.562 li
326.386 339.713 li
cp
f
326.34 339.562 mo
336.286 333.784 li
336.202 333.624 li
326.257 339.403 li
326.34 339.562 li
cp
1 .411765 .552941 rgb
f
326.257 339.403 mo
336.202 333.624 li
336.135 333.52 336.048 333.432 335.952 333.376 cv
326.007 339.156 li
326.103 339.21 326.189 339.3 326.257 339.403 cv
cp
.996078 .556863 .654902 rgb
f
grestore
326.007 339.156 mo
325.791 339.031 325.616 339.133 325.614 339.381 cv
325.614 339.629 325.789 339.932 326.005 340.058 cv
326.222 340.183 326.398 340.082 326.399 339.833 cv
326.399 339.584 326.224 339.281 326.007 339.156 cv
cp
.996078 .556863 .654902 rgb
f
325.728 339.129 mo
324.512 339.835 li
324.583 339.793 324.683 339.799 324.792 339.863 cv
326.007 339.156 li
325.898 339.093 325.799 339.087 325.728 339.129 cv
cp
.996078 .282353 .431373 rgb
f
gsave
325.728 339.129 mo
324.512 339.835 li
324.584 339.793 324.683 339.799 324.792 339.863 cv
326.007 339.156 li
325.898 339.093 325.799 339.087 325.728 339.129 cv
clp
324.782 339.857 mo
326.007 339.156 li
324.782 339.857 li
cp
f
324.782 339.857 mo
325.997 339.151 li
325.864 339.104 li
324.648 339.811 li
324.782 339.857 li
cp
.145098 .160784 .337255 rgb
f
324.648 339.811 mo
325.864 339.104 li
325.761 339.114 li
324.546 339.82 li
324.648 339.811 li
cp
f
324.546 339.82 mo
325.761 339.114 li
325.728 339.129 li
324.512 339.835 li
324.546 339.82 li
cp
.996078 .282353 .431373 rgb
f
grestore
325.069 340.791 mo
326.284 340.084 li
326.355 340.044 326.398 339.957 326.399 339.834 cv
326.399 339.584 326.224 339.281 326.007 339.156 cv
324.792 339.863 li
325.008 339.988 325.184 340.291 325.183 340.54 cv
325.183 340.664 325.139 340.75 325.069 340.791 cv
cp
f
gsave
325.069 340.791 mo
326.284 340.084 li
326.355 340.044 326.398 339.957 326.399 339.834 cv
326.399 339.584 326.224 339.281 326.007 339.156 cv
324.792 339.863 li
325.008 339.988 325.184 340.291 325.183 340.54 cv
325.183 340.664 325.139 340.75 325.069 340.791 cv
clp
325.069 340.791 mo
326.284 340.084 li
326.355 340.044 326.398 339.957 326.399 339.834 cv
326.386 339.714 li
325.171 340.42 li
325.183 340.54 li
325.183 340.664 325.139 340.75 325.069 340.791 cv
cp
.145098 .160784 .337255 rgb
f
325.171 340.42 mo
326.386 339.714 li
326.341 339.563 li
325.125 340.269 li
325.171 340.42 li
cp
f
325.125 340.269 mo
326.341 339.563 li
326.257 339.404 li
325.042 340.111 li
325.125 340.269 li
cp
1 .411765 .552941 rgb
f
325.042 340.111 mo
326.257 339.404 li
326.189 339.3 326.103 339.211 326.007 339.156 cv
324.792 339.863 li
324.887 339.917 324.974 340.007 325.042 340.111 cv
cp
f
grestore
324.792 339.863 mo
324.574 339.737 324.399 339.837 324.398 340.087 cv
324.397 340.335 324.572 340.638 324.79 340.763 cv
325.006 340.888 325.182 340.789 325.183 340.54 cv
325.184 340.291 325.008 339.988 324.792 339.863 cv
cp
f
324.498 339.912 mo
324.072 340.161 li
324.135 340.124 324.222 340.129 324.319 340.185 cv
324.746 339.936 li
324.649 339.881 324.562 339.875 324.498 339.912 cv
cp
.74902 .745098 .929412 rgb
f
gsave
324.498 339.912 mo
324.072 340.161 li
324.134 340.124 324.222 340.129 324.319 340.185 cv
324.746 339.936 li
324.649 339.881 324.561 339.875 324.498 339.912 cv
clp
324.31 340.18 mo
324.746 339.936 li
324.31 340.18 li
cp
f
324.31 340.18 mo
324.737 339.932 li
324.618 339.89 li
324.191 340.139 li
324.31 340.18 li
cp
f
324.191 340.139 mo
324.618 339.89 li
324.528 339.898 li
324.101 340.147 li
324.191 340.139 li
cp
f
324.101 340.147 mo
324.528 339.898 li
324.498 339.912 li
324.072 340.161 li
324.101 340.147 li
cp
f
grestore
324.565 341.008 mo
324.992 340.759 li
325.053 340.723 325.092 340.646 325.093 340.537 cv
325.093 340.316 324.938 340.048 324.746 339.936 cv
324.319 340.185 li
324.511 340.296 324.666 340.565 324.666 340.785 cv
324.666 340.895 324.627 340.972 324.565 341.008 cv
cp
f
gsave
324.565 341.008 mo
324.992 340.759 li
325.053 340.723 325.092 340.646 325.093 340.537 cv
325.093 340.316 324.938 340.048 324.746 339.936 cv
324.319 340.185 li
324.511 340.296 324.666 340.565 324.666 340.785 cv
324.665 340.895 324.627 340.972 324.565 341.008 cv
clp
324.565 341.008 mo
324.992 340.759 li
325.053 340.723 325.092 340.646 325.093 340.537 cv
325.082 340.431 li
324.655 340.679 li
324.666 340.785 li
324.666 340.895 324.627 340.972 324.565 341.008 cv
cp
f
324.655 340.679 mo
325.082 340.431 li
325.042 340.297 li
324.615 340.546 li
324.655 340.679 li
cp
f
324.615 340.546 mo
325.042 340.297 li
324.967 340.156 li
324.54 340.405 li
324.615 340.546 li
cp
.882353 .870588 .972549 rgb
f
324.54 340.405 mo
324.967 340.156 li
324.908 340.064 324.83 339.985 324.746 339.936 cv
324.319 340.185 li
324.403 340.234 324.48 340.313 324.54 340.405 cv
cp
f
grestore
324.319 340.185 mo
324.126 340.074 323.971 340.163 323.971 340.384 cv
323.97 340.604 324.124 340.873 324.317 340.984 cv
324.509 341.094 324.666 341.006 324.666 340.785 cv
324.666 340.565 324.511 340.296 324.319 340.185 cv
cp
.705882 .643137 .960784 rgb
f
335.356 330.344 mo
335.78 330.227 li
335.828 330.256 li
335.841 330.286 li
335.831 330.322 li
335.537 330.61 li
335.528 330.577 li
335.52 330.524 li
335.514 330.506 li
335.498 330.468 li
335.487 330.448 li
335.461 330.414 li
335.448 330.398 li
335.402 330.361 li
335.356 330.344 li
cp
.145098 .160784 .337255 rgb
f
335.354 330.34 mo
333.903 330.721 li
333.975 330.679 334.073 330.685 334.183 330.748 cv
335.438 330.348 li
335.354 330.34 li
cp
.65098 .592157 .878431 rgb
f
gsave
335.353 330.34 mo
333.903 330.721 li
333.975 330.679 334.073 330.685 334.183 330.748 cv
335.437 330.348 li
335.353 330.34 li
clp
334.174 330.743 mo
335.438 330.348 li
334.174 330.743 li
cp
.917647 .862745 .827451 rgb
f
334.174 330.743 mo
335.434 330.346 li
335.394 330.332 li
334.04 330.697 li
334.174 330.743 li
cp
.65098 .592157 .878431 rgb
f
334.04 330.697 mo
335.394 330.332 li
335.363 330.335 li
333.937 330.706 li
334.04 330.697 li
cp
f
333.937 330.706 mo
335.363 330.335 li
333.903 330.721 li
333.937 330.706 li
cp
f
grestore
334.46 331.676 mo
335.521 330.626 li
335.555 330.552 li
335.438 330.348 li
334.183 330.748 li
334.399 330.873 334.574 331.176 334.574 331.426 cv
334.573 331.548 334.53 331.635 334.46 331.676 cv
cp
f
gsave
334.46 331.676 mo
335.521 330.626 li
335.555 330.552 li
335.437 330.348 li
334.183 330.748 li
334.399 330.873 334.574 331.176 334.574 331.426 cv
334.573 331.548 334.53 331.635 334.46 331.676 cv
clp
334.46 331.676 mo
335.521 330.626 li
335.555 330.552 li
335.551 330.515 li
334.562 331.305 li
334.574 331.426 li
334.573 331.548 334.53 331.635 334.46 331.676 cv
cp
f
334.562 331.305 mo
335.551 330.515 li
335.538 330.47 li
334.517 331.155 li
334.562 331.305 li
cp
.917647 .862745 .827451 rgb
f
334.517 331.155 mo
335.538 330.47 li
335.512 330.422 li
334.432 330.996 li
334.517 331.155 li
cp
.882353 .870588 .972549 rgb
f
334.432 330.996 mo
335.512 330.422 li
335.438 330.348 li
334.183 330.748 li
334.278 330.803 334.364 330.892 334.432 330.996 cv
cp
.917647 .862745 .827451 rgb
f
grestore
334.183 330.748 mo
333.966 330.623 333.79 330.723 333.789 330.972 cv
333.788 331.221 333.964 331.524 334.18 331.649 cv
334.397 331.774 334.573 331.674 334.574 331.426 cv
334.574 331.176 334.399 330.873 334.183 330.748 cv
cp
.917647 .862745 .827451 rgb
f
333.906 330.72 mo
328.191 334.049 li
328.262 334.007 328.36 334.014 328.469 334.076 cv
334.185 330.748 li
334.076 330.685 333.977 330.679 333.906 330.72 cv
cp
1 .411765 .552941 rgb
f
gsave
333.906 330.72 mo
328.191 334.049 li
328.262 334.007 328.36 334.014 328.468 334.076 cv
334.185 330.748 li
334.076 330.685 333.977 330.679 333.906 330.72 cv
clp
328.459 334.071 mo
334.185 330.748 li
328.459 334.071 li
cp
.996078 .556863 .654902 rgb
f
328.459 334.071 mo
334.175 330.742 li
334.042 330.696 li
328.326 334.025 li
328.459 334.071 li
cp
1 .411765 .552941 rgb
f
328.326 334.025 mo
334.042 330.696 li
333.94 330.705 li
328.224 334.034 li
328.326 334.025 li
cp
f
328.224 334.034 mo
333.94 330.705 li
333.906 330.72 li
328.191 334.049 li
328.224 334.034 li
cp
f
grestore
328.746 335.005 mo
334.461 331.677 li
334.531 331.635 334.575 331.548 334.575 331.425 cv
334.576 331.177 334.402 330.873 334.185 330.748 cv
328.469 334.076 li
328.686 334.201 328.861 334.505 328.86 334.754 cv
328.86 334.877 328.816 334.964 328.746 335.005 cv
cp
f
gsave
328.746 335.005 mo
334.461 331.677 li
334.532 331.635 334.575 331.548 334.575 331.425 cv
334.576 331.176 334.402 330.873 334.185 330.748 cv
328.468 334.076 li
328.686 334.201 328.861 334.505 328.86 334.754 cv
328.86 334.877 328.816 334.964 328.746 335.005 cv
clp
328.746 335.005 mo
334.461 331.677 li
334.531 331.635 334.575 331.548 334.575 331.425 cv
334.563 331.304 li
328.848 334.634 li
328.86 334.754 li
328.86 334.877 328.816 334.964 328.746 335.005 cv
cp
.996078 .282353 .431373 rgb
f
328.848 334.634 mo
334.563 331.304 li
334.518 331.155 li
328.802 334.483 li
328.848 334.634 li
cp
f
328.802 334.483 mo
334.518 331.155 li
334.434 330.995 li
328.719 334.323 li
328.802 334.483 li
cp
1 .411765 .552941 rgb
f
328.719 334.323 mo
334.434 330.995 li
334.367 330.891 334.28 330.803 334.185 330.748 cv
328.469 334.076 li
328.564 334.131 328.651 334.22 328.719 334.323 cv
cp
.996078 .556863 .654902 rgb
f
grestore
328.469 334.076 mo
328.253 333.952 328.077 334.053 328.077 334.301 cv
328.076 334.55 328.25 334.853 328.467 334.978 cv
328.684 335.104 328.859 335.002 328.86 334.754 cv
328.861 334.505 328.686 334.201 328.469 334.076 cv
cp
.996078 .556863 .654902 rgb
f
328.19 334.049 mo
326.974 334.755 li
327.045 334.714 327.144 334.72 327.253 334.783 cv
328.469 334.076 li
328.359 334.014 328.26 334.007 328.19 334.049 cv
cp
.996078 .282353 .431373 rgb
f
gsave
328.19 334.049 mo
326.974 334.755 li
327.045 334.714 327.144 334.72 327.253 334.783 cv
328.468 334.076 li
328.359 334.014 328.26 334.007 328.19 334.049 cv
clp
327.244 334.778 mo
328.469 334.076 li
327.244 334.778 li
cp
f
327.244 334.778 mo
328.459 334.071 li
328.325 334.025 li
327.109 334.731 li
327.244 334.778 li
cp
.145098 .160784 .337255 rgb
f
327.109 334.731 mo
328.325 334.025 li
328.223 334.033 li
327.007 334.74 li
327.109 334.731 li
cp
f
327.007 334.74 mo
328.223 334.033 li
328.19 334.049 li
326.974 334.755 li
327.007 334.74 li
cp
.996078 .282353 .431373 rgb
f
grestore
327.53 335.711 mo
328.746 335.004 li
328.816 334.964 328.86 334.877 328.86 334.754 cv
328.861 334.505 328.685 334.201 328.469 334.076 cv
327.253 334.783 li
327.469 334.908 327.645 335.211 327.645 335.461 cv
327.644 335.583 327.601 335.671 327.53 335.711 cv
cp
f
gsave
327.53 335.711 mo
328.746 335.004 li
328.816 334.964 328.86 334.877 328.86 334.754 cv
328.861 334.505 328.685 334.201 328.468 334.076 cv
327.253 334.783 li
327.469 334.908 327.645 335.211 327.645 335.461 cv
327.644 335.583 327.601 335.671 327.53 335.711 cv
clp
327.53 335.711 mo
328.746 335.004 li
328.816 334.964 328.86 334.877 328.86 334.754 cv
328.848 334.634 li
327.632 335.34 li
327.645 335.461 li
327.644 335.583 327.601 335.671 327.53 335.711 cv
cp
.145098 .160784 .337255 rgb
f
327.632 335.34 mo
328.848 334.634 li
328.802 334.484 li
327.587 335.19 li
327.632 335.34 li
cp
f
327.587 335.19 mo
328.802 334.484 li
328.719 334.324 li
327.503 335.031 li
327.587 335.19 li
cp
1 .411765 .552941 rgb
f
327.503 335.031 mo
328.719 334.324 li
328.651 334.22 328.563 334.132 328.469 334.076 cv
327.253 334.783 li
327.349 334.838 327.435 334.927 327.503 335.031 cv
cp
f
grestore
327.253 334.783 mo
327.036 334.658 326.86 334.758 326.859 335.007 cv
326.859 335.255 327.034 335.558 327.251 335.684 cv
327.467 335.809 327.644 335.709 327.645 335.461 cv
327.645 335.211 327.469 334.908 327.253 334.783 cv
cp
f
345.201 343.146 mo
345.21 343.111 li
345.222 343.056 li
345.229 343.015 li
345.235 342.982 li
345.253 342.823 345.248 342.634 345.211 342.461 cv
345.16 342.228 345.067 342.091 344.979 342.096 cv
343.736 342.185 li
343.824 342.18 343.916 342.317 343.967 342.55 cv
344.007 342.734 344.01 342.939 343.985 343.104 cv
343.978 343.144 li
343.967 343.199 li
343.958 343.234 li
343.939 343.285 li
343.929 343.309 li
343.895 343.369 li
343.81 343.423 li
345.053 343.336 li
345.139 343.28 li
345.173 343.221 li
345.18 343.205 li
345.201 343.146 li
cp
.184314 .14902 .172549 rgb
f
345.02 342.104 mo
344.979 342.096 li
343.736 342.185 li
343.776 342.192 li
343.859 342.267 li
345.103 342.18 li
345.02 342.104 li
cp
.219608 .180392 .207843 rgb
f
343.859 342.267 mo
345.103 342.18 li
345.146 342.242 345.184 342.338 345.21 342.461 cv
345.231 342.559 345.242 342.662 345.245 342.762 cv
344.001 342.851 li
343.999 342.75 343.987 342.647 343.967 342.55 cv
343.94 342.426 343.902 342.33 343.859 342.267 cv
cp
.996078 .282353 .431373 rgb
f
344.001 342.851 mo
345.245 342.762 li
345.235 342.982 li
343.99 343.071 li
344.001 342.851 li
cp
.219608 .180392 .207843 rgb
f
343.895 343.369 mo
343.788 343.509 343.647 343.37 343.58 343.059 cv
343.512 342.747 343.545 342.38 343.651 342.239 cv
343.758 342.099 343.899 342.238 343.967 342.55 cv
344.033 342.861 344.001 343.229 343.895 343.369 cv
cp
.996078 .282353 .431373 rgb
f
343.978 343.234 mo
343.986 343.2 li
343.999 343.145 li
344.005 343.105 li
344.011 343.072 li
344.029 342.913 344.024 342.723 343.987 342.551 cv
343.936 342.317 343.844 342.18 343.757 342.185 cv
329.039 343.05 li
329.127 343.044 329.219 343.181 329.269 343.414 cv
329.309 343.599 329.313 343.803 329.288 343.969 cv
329.281 344.009 li
329.269 344.064 li
329.26 344.098 li
329.242 344.149 li
329.235 344.167 li
329.197 344.234 li
329.112 344.289 li
343.83 343.424 li
343.915 343.37 li
343.949 343.311 li
343.956 343.294 li
343.978 343.234 li
cp
f
343.796 342.193 mo
343.757 342.185 li
329.039 343.05 li
329.079 343.057 li
329.161 343.133 li
343.879 342.268 li
343.796 342.193 li
cp
f
329.161 343.133 mo
343.879 342.268 li
343.922 342.331 343.96 342.427 343.987 342.551 cv
344.007 342.647 344.019 342.751 344.021 342.851 cv
329.303 343.715 li
329.301 343.615 329.29 343.512 329.269 343.414 cv
329.242 343.291 329.204 343.196 329.161 343.133 cv
cp
.996078 .556863 .654902 rgb
f
329.303 343.715 mo
344.021 342.851 li
344.011 343.072 li
329.293 343.935 li
329.303 343.715 li
cp
.152941 .180392 .403922 rgb
f
329.197 344.234 mo
329.09 344.374 328.949 344.235 328.882 343.923 cv
328.815 343.612 328.847 343.244 328.953 343.104 cv
329.06 342.964 329.202 343.103 329.269 343.414 cv
329.335 343.725 329.303 344.093 329.197 344.234 cv
cp
.321569 .262745 .282353 rgb
f
329.26 344.098 mo
329.269 344.064 li
329.281 344.009 li
329.288 343.969 li
329.293 343.935 li
329.312 343.776 329.306 343.587 329.269 343.414 cv
329.219 343.181 329.127 343.044 329.039 343.05 cv
327.35 343.59 li
327.419 343.699 li
327.424 343.865 li
327.42 343.889 li
327.411 343.92 li
327.402 343.939 li
327.372 343.961 li
329.112 344.289 li
329.197 344.234 li
329.232 344.174 li
329.241 344.149 li
329.26 344.098 li
cp
.65098 .592157 .878431 rgb
f
329.079 343.057 mo
329.039 343.05 li
327.35 343.59 li
327.386 343.614 li
329.161 343.133 li
329.079 343.057 li
cp
f
327.386 343.614 mo
329.161 343.133 li
329.204 343.196 329.242 343.292 329.269 343.414 cv
329.29 343.512 329.301 343.615 329.303 343.715 cv
327.429 343.789 li
327.419 343.699 li
327.386 343.614 li
cp
.917647 .862745 .827451 rgb
f
327.429 343.789 mo
329.303 343.715 li
329.293 343.935 li
327.426 343.855 li
327.429 343.789 li
cp
f
327.398 343.945 mo
327.365 343.987 327.323 343.946 327.303 343.852 cv
327.283 343.758 327.292 343.648 327.324 343.606 cv
327.356 343.564 327.398 343.606 327.419 343.699 cv
327.439 343.793 327.429 343.903 327.398 343.945 cv
cp
f
327.424 343.909 mo
327.431 343.881 li
327.427 343.696 li
327.355 343.582 li
326.828 343.75 li
326.85 343.785 li
326.852 343.837 li
327.378 343.969 li
327.405 343.952 li
327.416 343.933 li
327.424 343.909 li
cp
.145098 .160784 .337255 rgb
f
327.368 343.585 mo
326.828 343.75 li
327.394 343.608 li
327.368 343.585 li
cp
f
326.841 343.759 mo
327.394 343.608 li
327.427 343.696 li
327.438 343.79 li
326.854 343.813 li
326.853 343.794 li
326.841 343.759 li
cp
f
326.854 343.813 mo
327.438 343.79 li
327.435 343.859 li
326.853 343.833 li
326.854 343.813 li
cp
f
326.844 343.861 mo
326.814 343.832 li
326.821 343.755 li
326.85 343.785 li
326.844 343.861 li
cp
f
335.071 337.297 mo
335.569 337.273 li
335.521 337.289 li
335.057 337.301 li
335.071 337.297 li
cp
f
gsave
335.071 337.297 mo
335.569 337.273 li
335.521 337.289 li
335.057 337.301 li
335.071 337.297 li
clp
335.521 337.289 mo
335.057 337.301 li
335.537 337.279 li
335.521 337.289 li
cp
f
335.537 337.279 mo
335.061 337.298 li
335.563 337.271 li
335.537 337.279 li
cp
f
335.569 337.273 mo
335.069 337.296 li
335.569 337.273 li
cp
f
grestore
335.49 337.631 mo
335.047 337.405 li
335.032 337.373 li
335.057 337.301 li
335.521 337.289 li
335.472 337.33 335.435 337.437 335.439 337.528 cv
335.49 337.631 li
cp
f
gsave
335.49 337.631 mo
335.047 337.405 li
335.032 337.373 li
335.057 337.301 li
335.521 337.289 li
335.472 337.33 335.435 337.437 335.439 337.528 cv
335.49 337.631 li
clp
335.49 337.631 mo
335.047 337.405 li
335.032 337.373 li
335.439 337.523 li
335.49 337.631 li
cp
f
335.439 337.523 mo
335.032 337.372 li
335.032 337.357 li
335.441 337.471 li
335.439 337.523 li
cp
f
335.441 337.471 mo
335.032 337.357 li
335.036 337.341 li
335.451 337.42 li
335.441 337.471 li
cp
f
335.451 337.42 mo
335.036 337.341 li
335.051 337.307 li
335.505 337.305 li
335.451 337.42 li
cp
f
335.505 337.305 mo
335.051 337.307 li
335.521 337.289 li
335.505 337.305 li
cp
f
grestore
335.521 337.289 mo
335.62 337.376 li
335.624 337.466 335.586 337.573 335.537 337.615 cv
335.439 337.528 li
335.435 337.437 335.472 337.33 335.521 337.289 cv
cp
f
335.566 337.272 mo
337.231 337.19 li
337.074 337.243 li
335.519 337.288 li
335.566 337.272 li
cp
.65098 .592157 .878431 rgb
f
gsave
335.566 337.272 mo
337.231 337.19 li
337.074 337.243 li
335.518 337.288 li
335.566 337.272 li
clp
337.074 337.243 mo
335.519 337.288 li
335.529 337.28 li
337.122 337.21 li
337.074 337.243 li
cp
f
337.122 337.21 mo
335.533 337.278 li
335.56 337.27 li
337.21 337.187 li
337.122 337.21 li
cp
f
337.21 337.187 mo
335.56 337.27 li
337.231 337.19 li
337.21 337.187 li
cp
f
grestore
336.965 338.388 mo
335.486 337.631 li
335.435 337.527 li
335.519 337.288 li
337.074 337.243 li
336.907 337.383 336.783 337.74 336.797 338.043 cv
336.805 338.242 336.873 338.367 336.965 338.388 cv
cp
f
gsave
336.965 338.388 mo
335.486 337.631 li
335.435 337.527 li
335.518 337.288 li
337.074 337.243 li
336.907 337.383 336.783 337.74 336.797 338.043 cv
336.805 338.242 336.873 338.367 336.965 338.388 cv
clp
336.965 338.388 mo
335.486 337.631 li
335.435 337.527 li
336.796 338.026 li
336.797 338.043 li
336.805 338.242 336.873 338.367 336.965 338.388 cv
cp
f
336.796 338.026 mo
335.435 337.523 li
335.438 337.471 li
336.804 337.852 li
336.796 338.026 li
cp
.917647 .862745 .827451 rgb
f
336.804 337.852 mo
335.438 337.471 li
335.448 337.419 li
336.838 337.681 li
336.804 337.852 li
cp
.882353 .870588 .972549 rgb
f
336.838 337.681 mo
335.448 337.419 li
335.502 337.305 li
337.018 337.301 li
336.941 337.393 336.877 337.531 336.838 337.681 cv
cp
.917647 .862745 .827451 rgb
f
337.018 337.301 mo
335.502 337.305 li
335.519 337.288 li
337.074 337.243 li
337.018 337.301 li
cp
.65098 .592157 .878431 rgb
f
grestore
337.074 337.243 mo
337.241 337.103 337.386 337.234 337.4 337.536 cv
337.414 337.837 337.29 338.195 337.122 338.335 cv
336.956 338.475 336.81 338.344 336.797 338.043 cv
336.783 337.74 336.907 337.383 337.074 337.243 cv
cp
.580392 .545098 .52549 rgb
f
337.228 337.19 mo
350.844 340.22 li
350.687 340.274 li
337.071 337.243 li
337.228 337.19 li
cp
.996078 .282353 .431373 rgb
f
gsave
337.228 337.19 mo
350.844 340.22 li
350.687 340.274 li
337.071 337.243 li
337.228 337.19 li
clp
350.735 340.24 mo
337.119 337.21 li
337.206 337.187 li
350.823 340.217 li
350.735 340.24 li
cp
f
350.823 340.217 mo
337.206 337.187 li
337.228 337.19 li
350.844 340.22 li
350.823 340.217 li
cp
f
grestore
350.579 341.419 mo
336.963 338.388 li
336.87 338.368 336.803 338.242 336.794 338.043 cv
336.78 337.742 336.904 337.383 337.071 337.243 cv
350.687 340.274 li
350.52 340.413 350.396 340.772 350.41 341.073 cv
350.418 341.273 350.486 341.398 350.579 341.419 cv
cp
.145098 .160784 .337255 rgb
f
gsave
350.579 341.419 mo
336.963 338.388 li
336.87 338.368 336.803 338.242 336.794 338.043 cv
336.78 337.742 336.904 337.383 337.071 337.243 cv
350.687 340.274 li
350.52 340.413 350.396 340.772 350.41 341.073 cv
350.418 341.273 350.486 341.398 350.579 341.419 cv
clp
350.579 341.419 mo
336.963 338.388 li
336.87 338.368 336.803 338.242 336.794 338.043 cv
336.793 338.026 li
350.409 341.057 li
350.41 341.073 li
350.418 341.273 350.486 341.398 350.579 341.419 cv
cp
.34902 .286275 .305882 rgb
f
336.835 337.681 mo
336.802 337.853 li
336.793 338.026 li
350.409 341.057 li
350.418 340.883 li
350.451 340.711 li
336.835 337.681 li
cp
1 .411765 .552941 rgb
f
350.451 340.711 mo
336.835 337.681 li
336.874 337.531 336.938 337.392 337.015 337.3 cv
350.631 340.331 li
350.554 340.423 350.49 340.561 350.451 340.711 cv
cp
.996078 .556863 .654902 rgb
f
grestore
350.687 340.274 mo
350.854 340.133 351 340.266 351.014 340.566 cv
351.027 340.867 350.903 341.225 350.735 341.366 cv
350.569 341.506 350.423 341.374 350.41 341.073 cv
350.396 340.772 350.52 340.413 350.687 340.274 cv
cp
.356863 .290196 .309804 rgb
f
351.486 341.62 mo
350.579 341.418 li
350.485 341.397 350.419 341.272 350.41 341.072 cv
350.396 340.771 350.52 340.414 350.688 340.274 cv
351.595 340.475 li
351.428 340.616 351.304 340.973 351.318 341.274 cv
351.326 341.474 351.394 341.599 351.486 341.62 cv
cp
.145098 .160784 .337255 rgb
f
gsave
351.486 341.62 mo
350.579 341.418 li
350.485 341.397 350.419 341.272 350.41 341.072 cv
350.396 340.771 350.52 340.414 350.688 340.274 cv
351.595 340.475 li
351.428 340.616 351.304 340.973 351.318 341.273 cv
351.326 341.474 351.393 341.599 351.486 341.62 cv
clp
351.486 341.62 mo
350.579 341.418 li
350.485 341.397 350.419 341.272 350.41 341.072 cv
350.409 341.056 li
351.318 341.258 li
351.318 341.274 li
351.326 341.474 351.394 341.599 351.486 341.62 cv
cp
.184314 .14902 .172549 rgb
f
351.318 341.258 mo
350.409 341.056 li
350.418 340.883 li
351.326 341.085 li
351.318 341.258 li
cp
.219608 .180392 .207843 rgb
f
351.326 341.085 mo
350.418 340.883 li
350.451 340.712 li
351.358 340.914 li
351.326 341.085 li
cp
.258824 .207843 .239216 rgb
f
351.358 340.914 mo
350.451 340.712 li
350.49 340.561 350.553 340.424 350.632 340.331 cv
351.539 340.533 li
351.462 340.626 351.397 340.763 351.358 340.914 cv
cp
.996078 .282353 .431373 rgb
f
grestore
351.595 340.475 mo
351.762 340.336 351.908 340.466 351.922 340.767 cv
351.936 341.07 351.811 341.427 351.644 341.567 cv
351.477 341.707 351.331 341.577 351.318 341.274 cv
351.304 340.973 351.428 340.616 351.595 340.475 cv
cp
f
351.658 340.438 mo
351.709 340.425 li
351.753 340.422 li
350.845 340.22 li
350.824 340.218 li
350.801 340.223 li
350.751 340.237 li
350.736 340.24 li
350.688 340.274 li
350.632 340.331 li
351.538 340.533 li
351.595 340.475 li
351.658 340.438 li
cp
.258824 .207843 .239216 rgb
f
337.119 337.21 mo
337.071 337.243 li
337.015 337.3 li
350.631 340.331 li
350.687 340.274 li
350.735 340.24 li
337.119 337.21 li
cp
1 .411765 .552941 rgb
f
305.133 310.479 mo
304.711 313.728 li
304.711 313.985 304.541 314.242 304.204 314.438 cv
303.524 314.833 302.416 314.833 301.732 314.437 cv
301.387 314.239 301.215 313.978 301.216 313.717 cv
300.818 310.465 li
300.817 310.787 301.03 311.11 301.454 311.355 cv
302.3 311.844 303.667 311.844 304.506 311.356 cv
304.924 311.114 305.132 310.797 305.133 310.479 cv
cp
.145098 .160784 .337255 rgb
f
gsave
305.133 310.479 mo
304.711 313.728 li
304.711 313.985 304.541 314.242 304.204 314.438 cv
303.524 314.833 302.416 314.833 301.732 314.437 cv
301.387 314.239 301.215 313.978 301.216 313.717 cv
300.818 310.465 li
300.817 310.787 301.03 311.11 301.454 311.355 cv
302.3 311.843 303.667 311.844 304.506 311.356 cv
304.924 311.114 305.132 310.797 305.133 310.479 cv
clp
305.133 310.479 mo
304.711 313.728 li
304.711 313.985 304.541 314.242 304.204 314.438 cv
303.524 314.833 302.416 314.833 301.732 314.437 cv
301.387 314.239 301.215 313.978 301.216 313.717 cv
300.818 310.465 li
300.817 310.787 301.03 311.11 301.454 311.355 cv
302.3 311.844 303.667 311.844 304.506 311.356 cv
304.924 311.114 305.132 310.797 305.133 310.479 cv
cp
.152941 .180392 .403922 rgb
f
grestore
304.495 309.588 mo
305.341 310.077 305.347 310.868 304.506 311.356 cv
303.667 311.844 302.3 311.844 301.454 311.355 cv
300.609 310.867 300.605 310.077 301.445 309.588 cv
302.285 309.1 303.65 309.1 304.495 309.588 cv
cp
.235294 .262745 .517647 rgb
f
303.805 309.989 mo
304.266 310.256 304.27 310.688 303.812 310.954 cv
303.353 311.221 302.607 311.22 302.146 310.954 cv
301.684 310.688 301.682 310.256 302.14 309.989 cv
302.598 309.723 303.344 309.723 303.805 309.989 cv
cp
.152941 .180392 .403922 rgb
f
308.934 318.458 mo
308.937 319.545 li
308.941 320.697 309.698 321.848 311.211 322.727 cv
314.257 324.498 319.211 324.498 322.277 322.728 cv
323.82 321.837 324.591 320.668 324.587 319.5 cv
324.584 318.413 li
324.587 319.581 323.816 320.75 322.273 321.641 cv
319.208 323.41 314.254 323.41 311.207 321.64 cv
309.695 320.761 308.937 319.61 308.934 318.458 cv
cp
f
gsave
308.934 318.458 mo
308.937 319.545 li
308.941 320.697 309.698 321.848 311.211 322.727 cv
314.257 324.498 319.211 324.498 322.277 322.728 cv
323.82 321.837 324.591 320.668 324.587 319.5 cv
324.584 318.413 li
324.587 319.581 323.816 320.75 322.273 321.641 cv
319.208 323.41 314.254 323.41 311.207 321.64 cv
309.695 320.761 308.937 319.61 308.934 318.458 cv
clp
308.934 318.458 mo
308.937 319.545 li
308.939 320.148 309.148 320.751 309.563 321.315 cv
309.559 320.228 li
309.144 319.664 308.936 319.061 308.934 318.458 cv
cp
f
309.559 320.228 mo
309.563 321.315 li
309.94 321.828 310.49 322.308 311.211 322.727 cv
312.703 323.594 314.652 324.036 316.613 324.055 cv
316.61 322.967 li
314.648 322.949 312.699 322.507 311.207 321.64 cv
310.487 321.221 309.938 320.74 309.559 320.228 cv
cp
f
316.61 322.967 mo
316.613 324.055 li
318.656 324.073 320.713 323.631 322.277 322.728 cv
323.82 321.837 324.591 320.668 324.587 319.5 cv
324.584 318.413 li
324.587 319.581 323.816 320.75 322.273 321.641 cv
320.709 322.544 318.654 322.986 316.61 322.967 cv
cp
f
grestore
311.244 315.231 mo
308.178 317.001 308.163 319.871 311.207 321.64 cv
314.254 323.41 319.208 323.41 322.273 321.641 cv
325.34 319.871 325.356 317.001 322.31 315.23 cv
319.264 313.46 314.31 313.46 311.244 315.231 cv
cp
.235294 .262745 .517647 rgb
f
320.676 319.929 mo
322.555 318.836 li
320.223 305.617 li
318.343 306.709 li
320.676 319.929 li
.145098 .160784 .337255 rgb
f
318.343 306.709 mo
320.223 305.617 li
313.581 301.799 li
311.702 302.892 li
318.343 306.709 li
.235294 .262745 .517647 rgb
f
311.702 302.892 mo
314.034 316.111 li
320.676 319.929 li
318.343 306.709 li
311.702 302.892 li
cp
.152941 .180392 .403922 rgb
f
297.03 267.643 mo
295.68 268.428 li
295.962 268.263 296.354 268.287 296.787 268.537 cv
298.138 267.752 li
297.706 267.502 297.313 267.479 297.03 267.643 cv
cp
.329412 .356863 .607843 rgb
f
gsave
297.03 267.643 mo
295.68 268.428 li
295.962 268.263 296.354 268.287 296.787 268.537 cv
298.138 267.752 li
297.706 267.502 297.314 267.478 297.03 267.643 cv
clp
296.787 268.537 mo
298.138 267.752 li
297.706 267.502 297.313 267.479 297.03 267.643 cv
295.68 268.428 li
295.962 268.263 296.354 268.287 296.787 268.537 cv
cp
f
grestore
340.909 324.757 mo
342.26 323.973 li
342.54 323.81 342.713 323.465 342.714 322.974 cv
341.364 323.76 li
341.362 324.25 341.189 324.595 340.909 324.757 cv
cp
f
gsave
340.909 324.757 mo
342.26 323.973 li
342.54 323.81 342.713 323.465 342.714 322.974 cv
341.364 323.76 li
341.362 324.25 341.189 324.595 340.909 324.757 cv
clp
340.909 324.757 mo
342.26 323.973 li
342.54 323.81 342.713 323.465 342.714 322.974 cv
341.364 323.76 li
341.362 324.25 341.189 324.595 340.909 324.757 cv
cp
f
grestore
341.364 323.76 mo
342.714 322.974 li
342.793 295.382 li
341.442 296.167 li
341.364 323.76 li
cp
f
339.89 293.48 mo
341.241 292.695 li
298.138 267.752 li
296.787 268.537 li
339.89 293.48 li
f
341.442 296.167 mo
342.793 295.382 li
342.796 294.393 342.101 293.192 341.241 292.695 cv
339.89 293.479 li
340.75 293.976 341.445 295.178 341.442 296.167 cv
cp
f
gsave
341.442 296.167 mo
342.793 295.382 li
342.796 294.393 342.101 293.191 341.241 292.695 cv
339.89 293.48 li
340.75 293.976 341.445 295.178 341.442 296.167 cv
clp
341.442 296.167 mo
342.793 295.382 li
342.796 294.393 342.101 293.192 341.241 292.695 cv
339.89 293.479 li
340.75 293.976 341.445 295.178 341.442 296.167 cv
cp
f
grestore
296.787 268.537 mo
295.927 268.04 295.228 268.438 295.226 269.427 cv
295.147 297.019 li
295.144 298.008 295.838 299.21 296.699 299.707 cv
339.801 324.649 li
340.662 325.145 341.361 324.747 341.364 323.76 cv
341.442 296.167 li
341.445 295.178 340.75 293.976 339.89 293.48 cv
296.787 268.537 li
.235294 .262745 .517647 rgb
f
340.537 321.87 mo
340.532 323.757 li
340.532 323.913 340.504 323.996 340.487 324.031 cv
340.449 324.028 340.36 324.011 340.217 323.929 cv
297.115 298.987 li
296.508 298.636 295.977 297.717 295.979 297.022 cv
295.982 296.088 li
340.537 321.87 li
f
295.982 296.088 mo
340.537 321.869 li
340.539 321.254 li
340.61 296.164 li
340.612 295.467 340.081 294.55 339.474 294.199 cv
296.649 269.417 li
296.371 269.257 li
296.229 269.174 296.139 269.158 296.101 269.154 cv
296.085 269.191 296.058 269.273 296.056 269.429 cv
295.982 296.088 li
.152941 .180392 .403922 rgb
f
296.573 295.811 mo
338.066 319.827 li
340.539 321.253 li
340.555 315.081 li
340.576 308.021 li
340.593 302.178 li
340.61 296.164 li
340.611 295.468 340.082 294.55 339.474 294.2 cv
327.643 287.312 li
320.452 283.159 li
313.059 278.892 li
302.088 272.558 li
296.649 269.417 li
296.573 295.811 li
.882353 .870588 .972549 rgb
f
309.39 283.46 mo
297.854 276.8 li
297.854 271.901 li
309.39 278.561 li
309.39 283.46 li
.235294 .262745 .517647 rgb
f
339.328 308.333 mo
330.182 303.053 li
330.182 290.562 li
339.328 295.842 li
339.328 308.333 li
f
339.328 318.945 mo
330.182 313.665 li
330.182 304.068 li
339.328 309.349 li
339.328 318.945 li
f
309.727 302.008 mo
298.191 295.349 li
298.191 277.865 li
309.727 284.525 li
309.727 302.008 li
f
308.667 288.643 mo
299.251 283.207 li
299.251 280.083 li
308.667 285.52 li
308.667 288.643 li
cp
.882353 .870588 .972549 rgb
f
308.667 293.106 mo
299.251 287.67 li
299.251 284.546 li
308.667 289.983 li
308.667 293.106 li
cp
f
308.667 297.445 mo
299.251 292.009 li
299.251 288.885 li
308.667 294.322 li
308.667 297.445 li
cp
f
328.899 313.16 mo
310.817 302.72 li
310.818 279.371 li
328.899 289.81 li
328.899 313.16 li
1 1 1 rgb
f
331.876 316.247 mo
321.827 310.429 li
321.826 310.427 li
331.875 316.243 li
331.876 316.247 li
.227451 .254902 .462745 rgb
f
331.875 316.243 mo
321.826 310.427 li
321.003 308.601 li
328.899 313.16 li
328.899 309.638 li
330.182 312.486 li
330.182 313.665 li
330.9 314.079 li
331.875 316.243 li
.894118 .882353 .976471 rgb
f
330.9 314.079 mo
330.182 313.665 li
330.182 312.486 li
330.9 314.079 li
.305882 .329412 .564706 rgb
f
315.747 280.444 mo
313.083 278.906 li
313.259 279.007 314.407 279.67 315.746 280.442 cv
315.747 280.444 li
f
310.817 285.995 mo
309.39 282.827 li
309.39 278.561 li
306.792 277.061 li
305.704 274.645 li
313.059 278.892 li
313.059 278.892 313.067 278.897 313.083 278.906 cv
315.747 280.444 li
316.827 282.84 li
310.818 279.371 li
310.817 285.995 li
.894118 .882353 .976471 rgb
f
309.39 282.827 mo
306.792 277.061 li
309.39 278.561 li
309.39 282.827 li
.305882 .329412 .564706 rgb
f
328.899 313.16 mo
321.003 308.601 li
310.817 285.995 li
310.818 279.371 li
316.827 282.84 li
328.899 309.638 li
328.899 313.16 li
1 1 1 rgb
f
340.537 321.254 mo
338.632 320.153 li
340.537 321.252 li
340.537 321.254 li
.227451 .254902 .462745 rgb
f
340.555 315.338 mo
340.558 314.433 li
340.556 315.081 li
340.555 315.338 li
.305882 .329412 .564706 rgb
f
340.549 317.358 mo
340.555 315.081 li
340.56 313.495 li
340.561 313.496 li
340.558 314.433 li
340.555 315.338 li
340.549 317.358 li
.227451 .254902 .462745 rgb
f
329.16 288.195 mo
327.643 287.312 li
326.007 286.368 li
327.641 287.311 li
329.159 288.193 li
329.16 288.195 li
.305882 .329412 .564706 rgb
f
340.537 321.252 mo
338.631 320.153 li
337.651 317.976 li
339.328 318.945 li
339.328 310.762 li
340.56 313.495 li
340.555 315.081 li
340.549 317.358 li
340.537 321.252 li
338.468 308.852 mo
331.806 305.006 li
331.188 303.634 li
337.849 307.479 li
338.468 308.852 li
330.182 301.401 mo
328.899 298.554 li
328.899 289.81 li
323.574 286.735 li
322.494 284.34 li
326.007 286.368 li
327.643 287.312 li
329.16 288.195 li
330.242 290.596 li
330.182 290.562 li
330.182 301.401 li
.894118 .882353 .976471 rgb
f
337.849 307.479 mo
331.188 303.634 li
330.182 301.401 li
330.182 290.562 li
330.242 290.596 li
337.849 307.479 li
.305882 .329412 .564706 rgb
f
339.328 318.945 mo
337.651 317.976 li
331.806 305.006 li
338.468 308.852 li
339.328 310.762 li
339.328 318.945 li
f
328.899 298.554 mo
323.574 286.735 li
328.899 289.81 li
328.899 298.554 li
1 1 1 rgb
f
141.49 375.306 mo
141.652 375.37 141.796 375.474 141.903 375.641 cv
141.998 375.786 142.012 375.968 142.005 376.142 cv
141.967 377.058 141.611 377.913 141.294 378.774 cv
141.259 378.866 139.772 378.351 139.687 378.291 cv
139.308 378.023 138.934 377.745 138.568 377.461 cv
138.179 377.161 137.931 376.839 137.61 376.471 cv
137.453 376.247 li
137.346 376.003 137.481 375.706 137.696 375.547 cv
137.91 375.389 138.185 375.338 138.449 375.303 cv
139.113 375.216 139.783 375.2 140.452 375.206 cv
140.785 375.208 141.173 375.181 141.49 375.306 cv
cp
.145098 .160784 .337255 rgb
f
142.612 377.501 mo
142.958 377.943 143.284 378.402 143.694 378.803 cv
144.01 379.109 144.346 379.358 144.47 379.756 cv
145.777 381.014 144.791 381.681 144.53 384.036 cv
144.416 385.078 144.474 384.286 144.53 385.584 cv
144.49 385.812 li
144.336 385.928 li
144.017 386.079 143.616 386.047 143.394 385.783 cv
143.171 385.518 143.313 385.14 143.338 384.84 cv
143.485 382.975 142.136 381.714 141.995 379.469 cv
141.932 378.452 142.244 377.034 142.612 377.501 cv
cp
f
143.185 376.367 mo
143.356 376.371 li
143.633 376.429 143.911 376.563 144.165 376.685 cv
145.216 377.188 146.112 377.955 147.129 378.516 cv
147.439 378.687 147.763 378.839 148.105 378.933 cv
148.575 379.062 149.068 379.077 149.555 379.109 cv
150.209 379.151 150.862 379.223 151.515 379.294 cv
152.067 379.354 152.621 379.414 153.159 379.552 cv
153.651 379.679 154.109 379.851 154.273 380.383 cv
154.373 380.71 154.296 381.071 154.14 381.375 cv
154.09 381.471 154.032 381.565 153.958 381.645 cv
153.882 381.726 153.791 381.792 153.701 381.857 cv
153.483 382.014 153.267 382.17 153.049 382.328 cv
152.776 382.526 152.501 382.723 152.216 382.904 cv
151.954 383.069 151.672 383.201 151.412 383.365 cv
150.937 383.667 150.41 383.919 149.847 383.943 cv
149.043 383.975 148.306 383.542 147.589 383.176 cv
147.334 383.047 147.065 382.925 146.79 382.833 cv
145.635 380.73 li
142.317 378.395 li
142.364 378.269 142.41 378.143 142.458 378.017 cv
142.622 377.579 142.783 377.139 142.948 376.7 cv
143.014 376.531 143.057 376.4 143.185 376.367 cv
cp
f
133.291 364.92 mo
132.743 363.049 132.711 361.056 132.957 359.123 cv
133.204 357.189 133.722 355.301 134.261 353.428 cv
134.396 352.963 134.581 352.463 134.581 351.974 cv
134.583 351.653 134.462 351.351 134.457 351.031 cv
134.438 350.022 135.022 349.059 135.151 348.066 cv
135.234 347.422 135.249 346.697 135.648 346.154 cv
136.361 345.183 140.405 338.759 141.453 339.353 cv
142.257 339.81 142.956 342.935 143.418 343.737 cv
143.868 344.516 141.345 349.598 141.335 350.483 cv
141.325 351.57 141.247 352.657 141.106 353.735 cv
140.578 357.726 139.327 363.087 138.792 368.893 cv
138.796 372.52 138.711 373.624 138.784 375.007 cv
138.808 375.453 138.829 375.91 138.696 376.336 cv
138.515 376.915 138.035 377.391 137.457 377.569 cv
136.46 377.876 134.728 377.276 134.275 376.305 cv
133.874 375.445 134.162 374.444 134.34 373.512 cv
134.569 372.322 134.599 370.417 134.444 369.206 cv
134.124 366.965 133.688 366.274 133.291 364.92 cv
cp
.952941 .662745 .517647 rgb
f
133.086 305.942 mo
132.576 303.852 132.404 301.684 132.568 299.54 cv
132.694 297.9 132.453 295.425 134.449 294.687 cv
135.507 294.294 136.963 294.709 137.852 295.315 cv
138.144 295.513 139.293 296.188 139.565 296.331 cv
141.187 297.186 142.756 298.136 144.31 299.108 cv
146.173 300.275 148.611 301.04 150.096 302.705 cv
150.379 303.022 150.663 303.34 150.902 303.692 cv
151.237 304.186 151.476 304.739 151.696 305.296 cv
152.278 306.767 152.734 308.303 152.906 309.88 cv
153.073 311.408 152.811 312.782 152.304 314.227 cv
152.05 314.949 151.671 315.596 151.462 316.35 cv
150.955 318.163 151.098 319.744 151.115 321.582 cv
151.131 323.362 151.262 325.417 150.465 327.064 cv
150.076 327.868 149.408 328.568 148.555 328.834 cv
147.825 329.061 147.035 328.955 146.284 328.817 cv
144.025 328.402 141.818 327.714 139.723 326.777 cv
138.76 326.346 137.808 325.855 137.015 325.157 cv
136.222 324.46 135.592 323.535 135.416 322.493 cv
135.212 321.298 135.612 320.095 135.911 318.919 cv
136.12 318.1 136.277 317.233 136.147 316.387 cv
136.091 316.016 135.923 315.68 135.879 315.313 cv
135.833 314.906 135.742 314.51 135.646 314.11 cv
135.382 313 135.065 311.901 134.699 310.819 cv
134.231 309.442 133.682 308.091 133.284 306.691 cv
133.212 306.443 133.146 306.193 133.086 305.942 cv
cp
.74902 .745098 .929412 rgb
f
135.969 318.666 mo
135.911 318.919 li
135.612 320.095 135.212 321.298 135.416 322.493 cv
135.592 323.535 136.222 324.46 137.015 325.157 cv
137.809 325.855 138.76 326.346 139.723 326.777 cv
141.818 327.714 144.025 328.402 146.284 328.817 cv
147.036 328.955 147.825 329.061 148.555 328.834 cv
149.408 328.568 150.076 327.867 150.465 327.064 cv
151.25 325.443 151.135 323.426 151.116 321.666 cv
145.528 323.504 140.046 322.718 135.969 318.666 cv
cp
.145098 .160784 .337255 rgb
f
148.019 322.403 mo
148.019 324.401 148.019 326.804 148.019 328.942 cv
148.2 328.922 148.379 328.889 148.555 328.834 cv
148.9 328.726 149.204 328.535 149.482 328.307 cv
149.482 326.228 149.482 323.982 149.482 322.12 cv
148.992 322.234 148.504 322.33 148.019 322.403 cv
cp
.196078 .223529 .454902 rgb
f
137.529 320.006 mo
136.423 321.222 136.025 322.437 135.832 323.653 cv
135.934 323.847 136.064 324.025 136.19 324.206 cv
136.897 322.97 137.894 321.835 138.646 320.724 cv
138.268 320.499 137.89 320.274 137.529 320.006 cv
cp
f
141.607 360.898 mo
141.704 359.071 142.014 357.242 142.661 355.527 cv
142.894 354.907 143.247 354.227 143.889 354.069 cv
149.364 351.085 li
149.265 351.135 149.325 352.498 149.316 352.668 cv
149.291 353.2 149.236 353.735 149.246 354.267 cv
149.261 354.969 149.392 355.622 149.281 356.328 cv
148.936 358.527 149.119 360.689 149.021 362.904 cv
148.875 366.105 147.851 369.204 147.48 372.388 cv
147.312 373.831 147.276 375.304 146.815 376.682 cv
146.691 377.054 146.459 377.494 146.156 377.81 cv
146.156 375.271 li
143.374 374.127 li
142.933 371.08 142.051 369.247 141.592 366.2 cv
141.321 364.411 141.513 362.688 141.607 360.898 cv
cp
.952941 .662745 .517647 rgb
f
133.596 349.43 mo
133.789 350.635 134.985 351.412 136.025 351.843 cv
136.397 351.998 139.729 353.221 139.905 352.728 cv
140.299 351.621 140.453 350.447 140.604 349.281 cv
140.763 348.05 140.924 346.818 141.083 345.586 cv
141.238 347.27 141.177 348.91 141.304 350.576 cv
141.37 351.437 141.297 352.301 141.232 353.161 cv
141.224 353.269 141.217 353.384 141.267 353.479 cv
141.323 353.582 141.432 353.642 141.536 353.694 cv
142.721 354.298 143.905 354.903 145.157 355.359 cv
146.222 355.746 148.299 356.534 149.254 355.621 cv
149.67 355.224 149.859 354.651 150.02 354.099 cv
150.096 353.832 150.17 353.563 150.243 353.294 cv
150.838 351.05 151.222 348.758 151.555 346.463 cv
151.717 345.342 151.903 344.229 151.96 343.1 cv
152.019 341.938 152.057 340.775 152.081 339.611 cv
152.127 337.303 152.41 335.05 152.284 332.716 cv
152.153 330.282 151.809 327.86 151.256 325.486 cv
151.014 324.582 li
151.014 324.582 145.768 325.423 143.082 324.809 cv
140.698 324.265 138.362 323.259 136.547 321.585 cv
136.266 321.325 135.563 320.277 135.563 320.277 cv
131.097 329.078 131.629 337.188 133.596 349.43 cv
cp
.196078 .223529 .454902 rgb
f
137.664 291.543 mo
137.636 292.203 137.607 292.863 137.578 293.522 cv
137.554 294.07 137.528 294.63 137.319 295.137 cv
137.073 295.733 136.757 296.026 136.81 296.697 cv
136.865 297.414 137.207 298.027 137.688 298.552 cv
138.596 299.544 139.829 299.917 141.149 300.175 cv
142.04 300.348 143.043 300.292 143.85 299.848 cv
145.003 299.213 144.675 298.671 144.592 297.529 cv
144.504 296.308 144.548 294.765 145.601 293.706 cv
137.664 291.543 li
cp
1 .780392 .678431 rgb
f
147.889 282.261 mo
148.32 282.772 148.66 283.348 148.771 284.029 cv
148.982 285.315 148.532 286.595 148.686 287.874 cv
148.82 288.997 148.175 290.386 147.877 291.482 cv
147.691 292.174 147.445 292.94 146.812 293.274 cv
146.431 293.473 145.966 293.479 145.601 293.706 cv
145.378 293.844 145.209 294.056 145 294.216 cv
144.384 294.691 143.25 294.451 142.544 294.356 cv
141.833 294.261 141.064 294.145 140.407 293.841 cv
139.157 293.263 138.321 292.072 137.572 290.916 cv
131.427 281.449 143.742 277.353 147.889 282.261 cv
cp
f
136.332 281.011 mo
136.448 280.743 136.568 280.476 136.757 280.23 cv
137.547 279.203 138.656 278.43 139.869 277.989 cv
141.37 277.444 143.027 277.389 144.589 277.717 cv
144.904 277.783 145.218 277.865 145.513 277.997 cv
146.081 278.25 146.553 278.676 147.014 279.096 cv
147.518 279.553 148.205 279.988 148.548 280.575 cv
148.893 281.167 149.17 281.861 149.151 282.557 cv
149.143 282.864 148.97 283.116 148.822 283.387 cv
148.713 283.585 148.552 283.749 148.415 283.926 cv
148.102 284.33 148.052 284.844 147.775 285.241 cv
147.406 285.77 147.054 286.199 146.895 286.847 cv
146.841 287.068 146.807 287.297 146.702 287.499 cv
146.597 287.7 146.398 287.873 146.17 287.868 cv
145.924 287.864 145.733 287.664 145.522 287.537 cv
145.131 287.302 144.667 287.151 144.38 287.576 cv
144.14 287.932 144.108 288.397 144.006 288.801 cv
143.865 289.353 143.853 289.821 143.792 290.37 cv
143.728 290.925 143.579 291.52 143.196 291.946 cv
142.336 292.899 140.656 292.869 139.515 292.633 cv
139.103 292.548 138.687 292.457 138.305 292.279 cv
136.32 291.355 135.139 288.643 134.909 286.601 cv
134.856 286.138 134.843 285.671 134.846 285.206 cv
134.849 284.712 134.873 284.214 134.995 283.736 cv
135.179 283.015 135.576 282.378 135.969 281.756 cv
136.12 281.515 136.225 281.262 136.332 281.011 cv
cp
.72549 .54902 .454902 rgb
f
146.05 379.638 mo
145.774 379.461 145.514 379.258 145.271 379.038 cv
144.662 378.491 144.149 377.849 143.637 377.211 cv
143.45 376.975 143.252 376.716 143.191 376.415 cv
143.132 376.125 143.272 375.901 143.344 375.62 cv
143.413 375.354 143.448 375.079 143.445 374.801 cv
143.374 374.127 li
147.713 370.894 li
147.574 372.102 147.502 373.317 147.5 374.533 cv
147.497 375.137 147.489 375.743 147.504 376.346 cv
147.516 376.862 147.544 377.468 147.771 377.941 cv
147.954 378.326 148.289 378.612 148.574 378.927 cv
148.704 379.073 148.83 379.236 148.856 379.428 cv
148.885 379.637 148.788 379.85 148.635 379.995 cv
148.299 380.312 147.812 380.331 147.387 380.228 cv
146.91 380.114 146.463 379.905 146.05 379.638 cv
cp
.952941 .662745 .517647 rgb
f
148.808 381.103 mo
149.013 381.053 149.883 380.99 150.081 381.022 cv
150.579 381.105 151.077 381.191 151.567 381.319 cv
151.718 381.387 li
151.802 381.464 151.794 381.597 151.775 381.71 cv
151.705 382.118 151.588 382.518 151.426 382.897 cv
151.257 383.296 151.438 383.046 151.038 383.164 cv
150.24 383.402 149.227 383.881 149.227 383.881 cv
148.299 383.634 147.457 383.351 146.614 382.892 cv
145.926 382.516 145.182 382.253 144.431 382.023 cv
143.854 381.847 143.243 381.674 142.817 381.245 cv
142.581 381.01 142.419 380.71 142.298 380.4 cv
142.021 379.687 141.964 378.895 142.113 378.147 cv
142.189 377.766 142.317 377.394 142.498 377.049 cv
142.629 376.802 142.868 376.29 143.142 376.183 cv
143.165 377.278 144.224 379.462 145.626 380.308 cv
145.987 380.527 147.662 381.387 148.808 381.103 cv
cp
.145098 .160784 .337255 rgb
f
140.156 376.311 mo
139.74 376.012 139.316 375.784 138.948 375.421 cv
138.557 375.037 138.316 374.532 137.892 374.165 cv
137.351 373.697 136.636 373.433 135.921 373.437 cv
135.682 373.438 135.442 373.469 135.216 373.543 cv
134.761 373.693 134.373 374.021 134.13 374.434 cv
133.593 375.353 133.824 376.926 134.658 377.628 cv
135.159 378.048 135.796 378.301 136.446 378.353 cv
136.817 378.382 137.002 378.377 137.32 378.568 cv
137.729 378.814 138.16 379.028 138.577 379.259 cv
139.094 379.542 139.667 379.835 140.246 379.722 cv
140.778 379.618 141.207 379.16 141.336 378.633 cv
141.464 378.105 141.313 377.532 140.994 377.093 cv
140.675 376.654 140.2 376.345 139.689 376.161 cv
140.156 376.311 li
cp
f
134.594 374.457 mo
134.942 374.899 135.266 375.356 135.677 375.758 cv
135.992 376.065 136.739 375.413 136.863 375.81 cv
138.17 377.068 136.773 378.635 136.512 380.991 cv
136.397 382.033 136.456 381.241 136.512 382.54 cv
136.472 382.767 li
136.318 382.883 li
136.001 383.033 135.598 383.002 135.376 382.738 cv
135.153 382.473 135.297 382.095 135.32 381.796 cv
135.468 379.931 134.119 378.669 133.978 376.424 cv
133.914 375.407 134.227 373.989 134.594 374.457 cv
cp
f
136.175 296.279 mo
135.81 297.134 135.861 297.776 136.47 298.538 cv
137.061 299.277 137.719 299.73 138.606 300.061 cv
140.774 300.868 143.276 300.732 145.342 299.693 cv
145.558 299.585 145.772 299.466 146.008 299.418 cv
146.245 299.37 146.513 299.405 146.687 299.57 cv
146.719 299.037 146.248 298.617 145.85 298.342 cv
145.403 298.031 144.856 298.091 144.329 298.126 cv
143.18 298.203 142.018 298.188 140.891 297.954 cv
139.904 297.748 138.941 297.371 138.123 296.774 cv
137.766 296.514 137.394 296.303 137.257 295.851 cv
137.23 295.303 li
137.23 295.303 136.518 295.476 136.175 296.279 cv
cp
1 .972549 .960784 rgb
f
133.793 288.049 mo
133.905 287.111 134.101 286.168 134.344 285.281 cv
134.86 283.416 135.627 281.53 137.123 280.23 cv
138.973 278.618 141.741 278.344 144.058 278.867 cv
145.511 279.194 147.042 279.874 148.063 280.985 cv
146.482 280.985 li
146.482 284.39 li
146.482 285.31 146.955 286.232 146.645 287.151 cv
146.548 287.442 146.3 287.705 145.994 287.724 cv
145.684 287.745 145.391 287.518 145.083 287.565 cv
144.717 287.621 144.522 288.023 144.434 288.383 cv
144.169 289.463 144.38 290.6 144.81 291.609 cv
144.995 292.045 145.171 292.542 145.455 292.917 cv
145.803 293.379 146.195 293.808 146.509 294.293 cv
146.915 294.915 147.196 295.675 147.024 296.396 cv
146.908 296.882 146.724 297.219 146.239 297.376 cv
145.345 297.667 144.385 297.678 143.449 297.592 cv
142.507 297.503 141.575 297.316 140.671 297.035 cv
139.466 296.663 138.313 296.125 137.255 295.438 cv
136.246 294.785 135.279 294.168 134.616 293.122 cv
133.903 292.001 133.662 290.632 133.7 289.305 cv
133.711 288.892 133.744 288.471 133.793 288.049 cv
cp
.72549 .54902 .454902 rgb
f
152.399 303.785 mo
151.864 302.441 150.924 301.056 149.434 300.691 cv
148.871 300.552 148.277 300.619 147.71 300.74 cv
147.253 300.838 146.799 300.973 146.386 301.192 cv
145.427 301.7 144.768 302.689 144.58 303.747 cv
144.343 305.069 144.772 306.068 145.411 307.188 cv
145.97 308.169 146.474 309.18 146.969 310.195 cv
147.957 312.222 148.904 314.279 150.158 316.16 cv
150.892 317.261 151.843 318.369 153.145 318.602 cv
154.024 318.759 154.972 318.461 155.6 317.829 cv
157.129 316.296 156.088 315.005 155.998 314.747 cv
153.21 306.654 152.33 303.609 152.399 303.785 cv
cp
.882353 .870588 .972549 rgb
f
204.892 312.917 mo
209.245 315.063 li
209.449 315.376 209.459 315.508 209.441 315.638 cv
209.379 315.877 209.358 315.93 209.331 315.977 cv
209.171 316.18 209.076 316.221 208.992 316.204 cv
204.443 316.501 li
204.448 316.284 204.53 316.246 204.605 316.159 cv
204.731 316.013 204.829 315.837 204.923 315.651 cv
205.007 315.458 li
205.063 315.32 205.105 315.174 205.142 315.025 cv
205.198 314.778 li
205.224 314.622 205.231 314.466 205.233 314.311 cv
205.241 314.082 li
205.227 313.857 205.194 313.634 205.124 313.438 cv
205.056 313.238 204.959 313.087 204.85 312.966 cv
204.892 312.917 li
cp
.996078 .282353 .431373 rgb
f
204.868 312.915 mo
190.001 305.647 li
190.896 305.814 191.681 306.576 192.139 307.889 cv
205.51 313.589 li
205.372 313.194 205.138 312.967 204.868 312.915 cv
cp
.65098 .592157 .878431 rgb
f
gsave
204.868 312.915 mo
190.001 305.647 li
190.896 305.814 191.681 306.576 192.139 307.889 cv
205.51 313.589 li
205.372 313.194 205.138 312.967 204.868 312.915 cv
clp
192.139 307.889 mo
205.51 313.589 li
192.096 307.773 li
192.139 307.889 li
cp
.878431 .866667 .882353 rgb
f
192.096 307.773 mo
205.497 313.555 li
205.437 313.387 205.355 313.253 205.261 313.149 cv
191.312 306.423 li
191.622 306.766 191.891 307.218 192.096 307.773 cv
cp
.65098 .592157 .878431 rgb
f
191.312 306.423 mo
205.261 313.149 li
205.179 313.056 205.084 312.99 204.985 312.949 cv
190.392 305.761 li
190.723 305.892 191.037 306.114 191.312 306.423 cv
cp
f
190.392 305.761 mo
204.985 312.949 li
204.868 312.915 190.001 305.647 190.001 305.647 cv
190.132 305.671 190.264 305.71 190.392 305.761 cv
cp
f
grestore
187.76 317.639 mo
204.197 316.513 li
204.46 316.564 204.758 316.44 205.024 316.132 cv
205.567 315.508 205.782 314.369 205.51 313.589 cv
192.139 307.889 li
193.042 310.489 192.326 314.288 190.52 316.368 cv
189.631 317.395 188.641 317.805 187.76 317.639 cv
cp
f
gsave
187.76 317.639 mo
204.197 316.513 li
204.46 316.564 204.758 316.44 205.024 316.132 cv
205.567 315.508 205.782 314.369 205.51 313.589 cv
192.139 307.889 li
193.042 310.489 192.326 314.288 190.52 316.368 cv
189.631 317.395 188.641 317.805 187.76 317.639 cv
clp
187.76 317.639 mo
204.197 316.513 li
204.46 316.564 204.758 316.44 205.024 316.132 cv
205.107 316.035 205.186 315.922 205.253 315.805 cv
191.287 315.276 li
191.059 315.674 190.804 316.044 190.52 316.368 cv
189.631 317.395 188.641 317.805 187.76 317.639 cv
cp
f
191.287 315.276 mo
205.253 315.805 li
205.339 315.659 205.408 315.497 205.465 315.33 cv
191.99 313.69 li
191.8 314.252 191.566 314.787 191.287 315.276 cv
cp
.74902 .745098 .929412 rgb
f
191.99 313.69 mo
205.465 315.33 li
205.527 315.141 205.573 314.945 205.602 314.748 cv
192.438 311.754 li
192.351 312.414 192.197 313.068 191.99 313.69 cv
cp
.882353 .870588 .972549 rgb
f
192.438 311.754 mo
205.602 314.748 li
205.653 314.341 205.63 313.931 205.51 313.589 cv
192.139 307.889 li
192.536 309.028 192.62 310.398 192.438 311.754 cv
cp
.74902 .745098 .929412 rgb
f
grestore
192.139 307.889 mo
191.232 305.285 189.035 304.842 187.23 306.924 cv
185.433 308.994 184.715 312.794 185.624 315.395 cv
186.527 317.997 188.724 318.441 190.52 316.368 cv
192.326 314.288 193.042 310.489 192.139 307.889 cv
cp
.878431 .866667 .882353 rgb
f
190.03 305.664 mo
123.85 293.18 li
124.745 293.35 125.525 294.105 125.98 295.411 cv
192.159 307.894 li
191.704 306.589 190.922 305.832 190.03 305.664 cv
cp
1 .411765 .552941 rgb
f
gsave
190.03 305.664 mo
123.85 293.18 li
124.745 293.35 125.525 294.105 125.98 295.41 cv
192.159 307.894 li
191.704 306.589 190.922 305.832 190.03 305.664 cv
clp
125.98 295.411 mo
192.159 307.894 li
192.119 307.781 125.939 295.297 125.939 295.297 cv
125.98 295.411 li
cp
.996078 .556863 .654902 rgb
f
125.939 295.297 mo
192.119 307.781 li
191.911 307.227 191.648 306.779 191.34 306.439 cv
125.16 293.955 li
125.468 294.296 125.734 294.746 125.939 295.297 cv
cp
1 .411765 .552941 rgb
f
125.16 293.955 mo
191.34 306.439 li
191.062 306.133 190.752 305.911 190.421 305.778 cv
124.242 293.294 li
124.575 293.428 124.886 293.647 125.16 293.955 cv
cp
f
124.242 293.294 mo
190.421 305.778 li
190.293 305.728 190.162 305.689 190.03 305.664 cv
123.85 293.18 li
123.984 293.207 124.114 293.243 124.242 293.294 cv
cp
f
grestore
121.593 305.17 mo
187.769 317.655 li
188.654 317.82 189.646 317.406 190.541 316.374 cv
192.34 314.302 193.071 310.51 192.159 307.894 cv
125.98 295.411 li
126.891 298.025 126.163 301.821 124.364 303.892 cv
123.47 304.924 122.477 305.338 121.593 305.17 cv
cp
f
gsave
121.593 305.17 mo
187.769 317.655 li
188.654 317.82 189.646 317.406 190.541 316.374 cv
192.34 314.302 193.071 310.51 192.159 307.894 cv
125.98 295.41 li
126.891 298.025 126.163 301.821 124.364 303.892 cv
123.47 304.924 122.477 305.338 121.593 305.17 cv
clp
121.593 305.17 mo
187.769 317.655 li
188.654 317.82 189.646 317.406 190.541 316.374 cv
190.824 316.05 191.079 315.682 191.306 315.284 cv
125.129 302.803 li
124.902 303.201 124.645 303.567 124.364 303.892 cv
123.47 304.924 122.477 305.338 121.593 305.17 cv
cp
.996078 .282353 .431373 rgb
f
125.129 302.803 mo
191.306 315.284 li
191.585 314.796 191.821 314.259 192.01 313.697 cv
125.833 301.215 li
125.643 301.776 125.408 302.314 125.129 302.803 cv
cp
f
125.833 301.215 mo
192.01 313.697 li
192.219 313.073 192.371 312.419 192.46 311.759 cv
126.282 299.276 li
126.192 299.936 126.042 300.591 125.833 301.215 cv
cp
1 .411765 .552941 rgb
f
126.282 299.276 mo
192.46 311.759 li
192.641 310.409 192.557 309.037 192.159 307.894 cv
125.98 295.411 li
126.379 296.555 126.462 297.924 126.282 299.276 cv
cp
.996078 .556863 .654902 rgb
f
grestore
125.98 295.411 mo
125.074 292.808 122.875 292.387 121.076 294.459 cv
119.279 296.532 118.551 300.327 119.454 302.929 cv
120.366 305.543 122.565 305.963 124.364 303.892 cv
126.163 301.821 126.891 298.025 125.98 295.411 cv
cp
.996078 .556863 .654902 rgb
f
123.842 293.169 mo
108.589 290.307 li
109.483 290.476 110.266 291.237 110.727 292.555 cv
125.976 295.415 li
125.518 294.099 124.735 293.338 123.842 293.169 cv
cp
.996078 .282353 .431373 rgb
f
gsave
123.842 293.169 mo
108.589 290.307 li
109.483 290.476 110.266 291.237 110.727 292.555 cv
125.976 295.415 li
125.518 294.099 124.735 293.338 123.842 293.169 cv
clp
110.727 292.555 mo
125.976 295.415 li
125.933 295.3 110.684 292.439 110.684 292.439 cv
110.727 292.555 li
cp
f
110.684 292.439 mo
125.933 295.3 li
125.726 294.743 125.459 294.289 125.147 293.944 cv
109.897 291.084 li
110.207 291.427 110.477 291.883 110.684 292.439 cv
cp
f
109.897 291.084 mo
125.147 293.944 li
124.874 293.637 124.562 293.417 124.23 293.283 cv
108.979 290.423 li
109.311 290.555 109.622 290.775 109.897 291.084 cv
cp
f
108.979 290.423 mo
124.23 293.283 li
124.103 293.234 123.974 293.193 123.842 293.169 cv
108.589 290.307 li
108.722 290.332 108.854 290.37 108.979 290.423 cv
cp
f
grestore
106.347 302.306 mo
121.6 305.168 li
122.48 305.334 123.47 304.924 124.36 303.897 cv
126.166 301.817 126.882 298.018 125.976 295.415 cv
110.727 292.555 li
111.632 295.158 110.914 298.954 109.108 301.034 cv
108.218 302.062 107.228 302.472 106.347 302.306 cv
cp
f
gsave
106.347 302.306 mo
121.6 305.168 li
122.48 305.334 123.47 304.924 124.36 303.897 cv
126.166 301.817 126.882 298.018 125.976 295.415 cv
110.727 292.555 li
111.632 295.158 110.914 298.954 109.108 301.034 cv
108.218 302.062 107.228 302.471 106.347 302.306 cv
clp
106.347 302.306 mo
121.6 305.168 li
122.48 305.334 123.47 304.924 124.36 303.897 cv
124.642 303.571 124.897 303.205 125.125 302.807 cv
109.875 299.942 li
109.648 300.34 109.391 300.711 109.108 301.034 cv
108.218 302.062 107.228 302.472 106.347 302.306 cv
cp
f
109.875 299.942 mo
125.125 302.807 li
125.405 302.318 125.639 301.781 125.827 301.222 cv
110.575 298.359 li
110.388 298.918 110.155 299.454 109.875 299.942 cv
cp
f
110.575 298.359 mo
125.827 301.222 li
126.037 300.598 126.189 299.944 126.277 299.283 cv
111.026 296.422 li
110.937 297.082 110.786 297.737 110.575 298.359 cv
cp
1 .411765 .552941 rgb
f
111.026 296.422 mo
126.277 299.283 li
126.458 297.928 126.374 296.558 125.976 295.415 cv
110.727 292.555 li
111.122 293.696 111.208 295.068 111.026 296.422 cv
cp
.996078 .556863 .654902 rgb
f
grestore
110.727 292.555 mo
109.815 289.94 107.623 289.511 105.817 291.591 cv
104.021 293.66 103.3 297.448 104.211 300.062 cv
105.117 302.664 107.311 303.107 109.108 301.034 cv
110.914 298.954 111.632 295.158 110.727 292.555 cv
cp
f
107.915 290.851 mo
102.556 289.85 li
103.347 289.998 104.04 290.674 104.447 291.84 cv
109.811 292.841 li
109.403 291.675 108.711 290.999 107.915 290.851 cv
cp
.74902 .745098 .929412 rgb
f
gsave
107.915 290.851 mo
102.556 289.85 li
103.347 289.998 104.04 290.674 104.447 291.84 cv
109.811 292.841 li
109.403 291.674 108.711 290.999 107.915 290.851 cv
clp
104.447 291.84 mo
109.811 292.841 li
109.772 292.737 104.412 291.739 104.412 291.739 cv
104.447 291.84 li
cp
f
104.412 291.739 mo
109.772 292.737 li
109.588 292.245 109.351 291.843 109.076 291.538 cv
103.714 290.535 li
103.99 290.84 104.226 291.242 104.412 291.739 cv
cp
f
103.714 290.535 mo
109.076 291.538 li
108.831 291.263 108.554 291.068 108.261 290.951 cv
102.9 289.949 li
103.195 290.067 103.47 290.264 103.714 290.535 cv
cp
f
102.9 289.949 mo
108.261 290.951 li
108.148 290.906 108.035 290.872 107.915 290.851 cv
102.556 289.85 li
102.672 289.871 102.79 289.904 102.9 289.949 cv
cp
f
grestore
100.568 300.483 mo
105.932 301.482 li
106.711 301.629 107.587 301.266 108.376 300.357 cv
109.976 298.511 110.612 295.148 109.811 292.841 cv
104.447 291.84 li
105.25 294.146 104.615 297.513 103.017 299.357 cv
102.224 300.266 101.349 300.63 100.568 300.483 cv
cp
f
gsave
100.568 300.483 mo
105.932 301.482 li
106.711 301.629 107.587 301.266 108.376 300.357 cv
109.976 298.511 110.612 295.148 109.811 292.841 cv
104.447 291.84 li
105.25 294.146 104.615 297.513 103.017 299.357 cv
102.224 300.266 101.349 300.63 100.568 300.483 cv
clp
100.568 300.483 mo
105.932 301.482 li
106.711 301.629 107.587 301.266 108.376 300.357 cv
108.626 300.068 108.854 299.742 109.055 299.388 cv
103.694 298.39 li
103.491 298.742 103.267 299.067 103.017 299.357 cv
102.224 300.266 101.349 300.63 100.568 300.483 cv
cp
f
103.694 298.39 mo
109.055 299.388 li
109.3 298.957 109.51 298.483 109.678 297.985 cv
104.315 296.985 li
104.15 297.481 103.941 297.956 103.694 298.39 cv
cp
f
104.315 296.985 mo
109.678 297.985 li
109.863 297.434 109.997 296.854 110.074 296.27 cv
104.715 295.269 li
104.636 295.851 104.501 296.432 104.315 296.985 cv
cp
.882353 .870588 .972549 rgb
f
104.715 295.269 mo
110.074 296.27 li
110.237 295.068 110.161 293.85 109.811 292.841 cv
104.447 291.84 li
104.8 292.852 104.876 294.068 104.715 295.269 cv
cp
f
grestore
104.447 291.84 mo
103.642 289.523 101.699 289.14 100.098 290.986 cv
98.5066 292.821 97.8669 296.177 98.6733 298.492 cv
99.4753 300.8 101.421 301.193 103.017 299.357 cv
104.615 297.513 105.25 294.146 104.447 291.84 cv
cp
.705882 .643137 .960784 rgb
f
167.937 305.583 mo
167.687 305.651 167.248 305.618 167.323 305.261 cv
167.448 304.664 167.952 304.181 167.999 303.573 cv
168.015 303.356 167.939 303.098 167.733 303.029 cv
167.489 302.948 167.26 303.179 167.108 303.386 cv
166.741 303.886 166.384 304.402 165.912 304.804 cv
165.559 305.104 165.15 305.331 164.76 305.581 cv
164.371 305.831 163.99 306.115 163.726 306.496 cv
163.471 306.864 163.453 307.2 163.424 307.625 cv
163.401 307.974 163.15 308.295 163.065 308.639 cv
162.941 309.143 162.839 309.663 162.814 310.183 cv
162.798 310.537 162.784 311.037 163.045 311.319 cv
163.337 311.636 163.799 311.462 164.121 311.289 cv
164.627 311.02 164.924 310.547 165.363 310.208 cv
165.569 310.049 165.699 309.842 165.896 309.688 cv
166.126 309.506 166.455 309.449 166.732 309.374 cv
167.371 309.199 167.978 308.912 168.523 308.534 cv
169.054 308.167 169.546 307.86 169.704 307.213 cv
169.852 306.604 169.867 305.97 169.775 305.351 cv
169.692 304.803 169.614 304.226 169.131 303.884 cv
169.008 303.796 168.835 303.732 168.715 303.824 cv
168.593 303.918 168.613 304.102 168.625 304.256 cv
168.667 304.783 168.501 305.419 167.937 305.583 cv
cp
1 .780392 .678431 rgb
f
164.994 308.405 mo
165.302 308.736 165.787 309.472 165.625 309.977 cv
165.492 310.393 164.813 310.815 164.514 311.1 cv
163.573 311.996 162.609 312.863 161.647 313.731 cv
161.21 314.124 160.773 314.518 160.324 314.896 cv
159.009 316.004 157.598 316.976 156.112 317.796 cv
155.535 318.115 154.591 318.661 153.918 318.642 cv
153.251 318.625 152.784 318.111 152.423 317.516 cv
151.779 316.454 151.508 315.128 152.135 314.031 cv
152.766 312.932 153.803 312.369 154.811 311.763 cv
157.139 310.363 159.549 309.116 162.023 308.035 cv
162.462 307.843 162.914 307.654 163.393 307.632 cv
163.941 307.609 164.55 307.924 164.994 308.405 cv
cp
.882353 .870588 .972549 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (2001.i039.031.P.m004.c33.branding isometric concept icons-12.eps)
%%CreationDate: 3/27/2021 8:00 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9=OfC8Z_Y&"#(3o-GoC<;WT")Z06daCI5Q7gY7O;LN.Q=cPQhB/?Hrgon(EIn:).nT#=SpMg*ZE/+hFr_UZ^RoH;S$dS6
%.,Xl>3C@$p1/!kC1dc->A<r$eP<])WJ,_rcg[Ca!R\^L*Z9QGlN!OgQ1ub"1&RR3"Wr7\0ltplK<PR9?[";>V]::>JX>D`:.nB*)
%P54;H60mE%5,_FVi18Xah_3R`^YJ*2._Ue^>-cQ4QS6,>_HS\org)rsrd"[8G5PYWAdDmVp\W^ko?g?#CK>DtF5amhUP(_u_f]3r
%PK_hU'*>s6ImQ-:jI]8kk&H'.N$\Llqn2;<e[rLiV,qRm^W:&uFeNERj0pQ(!IPtc"96T]_bAHBXRq.:RV$0Y$\%g31MZ^02R[_h
%>66uVj?Jt08,Ym3Yeg7D7.C3]h+n!eh_\hUR/5+Z<Y<)4<<lrD(l-.2^HbPB!*eUH,ULl#X`gJf3U'jdiUPH(^X3N@4^V(r[6/]4
%?FIA-V=N`87e8B3J0m4uah"qI_h=Rl<.<A+=bk)%_Ra>2&\^5t3<,V^s6k!jKjUhT*DKYH:2d'059M)g&J:=HhX1Vtk?YFN"#/7j
%Sm(((XdU?I,R1H=K8QJ1#km>oFcY?NkK*)mca89fY4$DN[EPs9rPh=gViM6OoLCgoIWN!k?;?_EbR%-<\]/QRH5XS*SfnlU%7.d:
%KLY1DHi]#?_9?O3,_7OTO3LGuW8:cc+qDpMEQU0)4R^d8"3tn"``<&%&7s\=s#fm;4`N_SYNIhR,_YS%?:T7eb.c`KDjQp#6E>\'
%dD\?A^e.=/bb0*ST+:j^cX;QX>6?)hp><78KmFC;rpu10lC#9!(%gJDo1l@D?>gmnrqp7Y=)/iORJ20<fBU-Yf.rg#hr0Xlbaan.
%RGCW7$=gm/@@qA4hOZrE5_-3$B@Kk)=8lq5S)f!Z"<b_h"/sdKo,g21[3GdSIS!#a$7a:m-R0^d")cWgJL;2JdpP`5kk@7d)AB'G
%%;:m!a?Cj/T@"hQ.*8AFlHN6paL4^=pM[*RJdW=sI49,>SZMj`J)5uC-[r7F4?B?W^%A7-Q/47Z,emLJL0.9%%PWiD=)CMO03!Or
%Iak@(O6b=i^=2NlB6IL]+<3Q,H2+6"1\h=69XM+HVOcj];o*POX1H44#=6e;G:**#iEL;/JqqhI'n_lOXUYIpL'c2mZh&)=#_&Ot
%OGF`tIPq[>6+u"Y7ut)p!Sc,)J\Uf_g[c(MV4FWV>TAcY+,+sfbnn7F9n*>5mBGFMHQf`EYP7qqDmgR$1kIMFa-F(d0k>Uu%#3j?
%T[BJPCME%Z5JX467Q&ok:8LtrKt*Y@He3(7)PF*jF;(Ts(aug1'JdqoCOc?Rq9M9+s88WcbBB;=H.aXYnpat+="]_qjjKcN4I&'%
%X<^D5aXqe7Hmo=#/!Ppf;Q3nJV?[N;0u>?F).T0sb[hj=YrjP(*i)?Le=qVJ;+s"CBT<jAOd9f6*!>OlgS/7_K(]9DPD;=C\.MKg
%_m<Y'Z%^G>B&ioFDjVSRp=KjtLgu:I.#NVtMk'9i/(>CeF+6F3Oar)[iAhAkBSS:rASB%]c\;24%g)I;Kr,3.R5,sj/DC7_.Eh4q
%B_-i'7k>#Q7-eC`]#Mp;jkKhG=#q+gYdhKRQm9*\Mf?k)5N%ZVK2QI%YW*D2Su'IGRb9QWL@`P(#Gc')mp#sQ=R+kjqrcmpp!A)8
%*<+57_d=KlDnH,*=T0r(X(^d!3^:r9[$$jSY7WVMi=^*@Vgd"]q4M"0Tjt7SWJpPM*nQ$Ja)B*A2"Pr4=<W'Js6BPN?A+)TYR:-f
%1QQ`fd,r_pVgg0^?haE+?L&Vml%U`:Hbfi,^Vu$6k1HjZ*VU13@liH^3(\Yr0**'m9f<8A'7fTDp-?^$n)o;rEFkc4%naO$!#FpC
%>JRVAD\i^QSIa2CP[2_X:B90Hn&8h19U\ZAofED,n4p"_q:JP_SVreQn66"YHr)kQ[iZlXMl,NOJO@b=V:fd'<dU*]r$4*<m<i+l
%2-W/U3k-?rK@Z=d0[,jd[\;QeV?O7@59I+^9%P_?r#^@F]HfOHUjk^>1CaJ,('Ne.8UpIsTb3^hg$<T-98#LdGsJgl^5N+>=IVV.
%gS26L<khT+T<$%/!mNk<rZTPBS9,WTDiPKk_f3t,k8,!QkfQ^f!d;,J=\*&ar!>J<qM1K(e<QL_?rC'DZ9Xcm=,s,[h!a4E*Hio?
%f`uG!oks'=`<(,8c<LEO9V&`9Eomu;_GX_np#T(Y0(n=(?ga*F&"=kP/eKd9j3'%%)=ZdO!AXEL>i,M$%sEs`[FW+E]g4T:rm!gV
%+"%/gd5b$\?i'+FT_9&/3o+,Ekl4SJ3U_eEJnXm_[K<%%qV?&&d`dcM_9'-T>DIu>^N[]iVic[r8VC7)SQZYk>J!=pRfnHk)Rjne
%*qH1=Q)Wj8!3Jab0s/S#:B)ArpKN@To?SONCf'l<2,i7%!(u"Lp4Gu8oO#5\oUAF*f]cIT%D_&o'jAk"YAtf]#-ZetHoR>7rjXsa
%UB4&Lq9eSR%P(P/Vcl[3@mf'b8$Pga_m.-3.tPp4FDmOKM85KtIi+^P6t#pG!>tjKFW4hk<H%RhOp-OTDf-IT=uU82]4!1KT%R$m
%1UkJgG_md(=1_kiAi=in-;=Oe0Utr*"=o%oDMt_3W4%n0E"9]LD@_JphNQ")B1N_<3q_?L_s\o)S"2$kS:ob="a,R`NSV#sSt3Rd
%$`M1*.$f^Ta[q"BR3CZONDAt32@clO+E16eqV(BXq2!.l[!%UJg"BVk)kBEdj`=_uT;5URj.NsU/0CG`RRn$*-<cQ=%r17XpC"*(
%ORMuDrt9.tV<9aKiS6nS^sUZAa!@/4^cE6ukpKV>e+'l>WR\71jbu4r8`Gtu/lupA=70+khH$P&N.ikt.&dMp6Y>SU<[u*9?Ap0j
%<&3]I//;J),J4YB-`9F[,lqW;GpC_1YmHKK0;VgUPJGs0GVK+>M1%-2ngZrVjO>3.:U35!08!p6Ck!W\3U%I%9&ceF"U]-Eq;`.k
%V$k>/B%%96r'9+"OX*DElBU+u_!M7d#8`0aoIIBt-H7?h9r"R[!mJSuV3qnMM<ol:cg"(e:Yhfo?,@g=\#F5%oklji<.2E=k]N^b
%Pq&\/J`.5X[7uFSPJDsF)YlJ)5V7'B-Q2c+51&k5&o66DSE(ETI&3#pF&#<.<aAmQQB7JMq0%iB?naG^+UKidcQ,SZI*t`p,fd$:
%6-59]j0ljYa[h3[+@qg''AVF_#PFs$8W^Ik[V-DZoh5A4T^-Fq`Q)*^d;=U`F_XmZgB+,_r*/ub!#1OI]h0ZGCf`c<$`%C8R=K?.
%eS;kH5@]a<$<+>'XdQF#<p@Ca8gNqL^K]`h"E%*fM3HGXBZ5,HBf2%ZBA)[\i99saohN:V[9=TSP"ieG@Fs7c.Y5hU"jMGmN<J6g
%pkJ\'Wb51Cef0I!f]#WM?j6tE<G*`o,mc8hn(c-;DmSN%R4&`agbY=S;OsXXPU%R:VCiT0aU1bT&>&,cPXK8,dT&ten_qEeT/7?q
%\oU`KZ]pB2"IP$I9/@a%',_(>T8SlJ`CY,JIeBGZ<%^dcVK5VUDifm?A-F>fl(kj<'-lD7Z]pB2"IR<oN\hOuete_alZ8pXV^<"N
%9o0"Fmc&MKddPVL8;eXeoa<E8K:/`HQs8H$auV$Lf,V8g7fASt%[gA<RE\s3DcO#JXNF3df.J9!6n6e$THKM8WE`*Xg/Q/$;?pB'
%F)AA02'3VlQ"m9tqn8h0C95[EZ'J"i<3#oJ;D#I)["$>io[>5D&tn0lg&Oh"ki-F>Uhl7q"XtCeCc':(>P8$o?n82Rgn09&N5,9+
%T%c9IDe40F<(/[rm6oWbOhOaDs#PV(2>3R<Zk[L&)6uT2%,p\o.g,fUJ`#tS'mPh.Td80+)p?a$&("8jW?FijL87gadOI+gQ($0p
%e=/>qYhg@LjmWi?[J`_$R#$qMI;]M#fduu?SsAgb<d^;le*%q%("Q<I]:TM%M>("flt4!hr,CK957>Gr>)d^+$YjgjTA]S<WK@?o
%q-mO:OqJ,28J_UJh@[B@RHrTA"9l\5;^hk_`;!*IV9hV3!^#5,Z]bBDEGuE(5].*eW&1*B.X74R]m&9$HV&I2Wl/ojU)US(3CIt*
%15Kg[<(pcuH/aa.,a$>CJ2ir?,rpr(&Jp]!;j.WST(JN>rSLbVSXAjFVYe-7Yl?4T(jCM0[?>L:Ve48!-8-];pO(;+8^fi[)ZVDE
%o1et,D[WRecaPdrOkt3+G7sk<FO)o%oDOqs&Io?K8Zps<)DR>HKNYeA3<Y>RPI1>Z;"r^r/+H5+]S)c:rThCkE_5M3W:t-pp!XG'
%f"^C#(=\D*HdH3#MD]/_5WAPV">?6V[6go#IVCTpco^ni6G53il<pJ5A;ZUQN]Oo3>QLPYYCIEl5AI=u;f;hgDl)LG<a)%dF6md1
%)EO@Pcrk[oD]1Z06YC,sm'd7k,r2UNpt;bg9>jQ/k>qCc^!Z;.];]^^=\R/rU-"J;*'\tg&k6U[I;_,>;liWuHik8P<c_2sb"p[:
%*'Tp(T-V;%p8ak&4/Mu2?lpY7Th`@CCY!)!4ts=VJ<+sOQ.lAeb[e0-GpK--BoMu78A#Adm9^N-8cp`U*-fk>();)A;&C1#8HUV[
%i$AiFUk+jhn<*u^d_JKoGe(sXc+len)F-ms8/If;Ncs6V3eB2XnV<O51NB+"ReZBi%A!a;:!#6J`?pb<R@j+\'1i[F:O9:&T\eG'
%eAm<KVbnG3FXGD/[p,piEJ(`/9R(UGj;44T6=7K3Obnop/<d4VB;#s%;3#?*VGoWPQo-elMXc9^jMWRhZi\_<YWZ^3o`?m3XhL$#
%?b.gEc)pI'**6mWJ((HB/lR(1)C<jkS][S,j6R'ZTV]]^Dio<KLPK0MLXY_e[=gq,268VZH(YHro;mr#$pt>4s%PB[$#[\HSSjkY
%2^QZFN]t6iKZ.ag"-^/KZ[,btlClImLIRYRs*P1P[pD^l_PR.cQ<GMV&n$auA8+kKa4gZ.M=:Z+,dB4EdF:\k6kX"ikNr:)Lh!5,
%Ush<C1cf!M'upl"*+P]Pi&$HKq)m``5TD!T$u$\k_DQ0Ka-]g\T#NM536%3$1!i;R<>+DGV>f.!ph,AQ9!q_,hR)Q>ns7gQk9;5m
%r`2:a-3u4tNKp$0$;n.efRu]k-W,GRB]hrnTnsR=c.5XnhQ)Zpk77=7fPe5?,[-k7hRBp[f:3Fs4%[6@"LXm4.UBgEnUL30Ai5F+
%1X^bF`VrOG)Oed:4))g-nJXD>\T9"D1;POo]iGd;YB>1gb]'t\7-a-CdqU-?fWs7K5r+pPK9B=L^L>fgRgT)[p,`NX!,t)l6,Ati
%'9^G9Rrju?/IulC*'7)M;I[mK_H.phVC(7P#r!$amZdp.a\VUKW9F2"'agfeig4O2,X>8r4L8kX[M'4F);7nXOR"WDq[#&!MRTnB
%`.YBo?gd[Xjc[`ue=4&jDFqOPe=0+E\^[+\4`;s(6'?P8Zf'*Q@!^Iaq/ZjW&>]<\AGL9QQ7R1A;Kja9k>HNl1pa"G>QPFlc]UAV
%#ahT2kEa0t3-<8mR!b6<YLTWnFXfrs?L#k]Jj22(jVSW%+eNl)S[Eeu&i_jb?&:!l.R#^FTljB>J8(/R1K#>?/bD&U"YssC(`e.;
%Wc$p(4pWXgPEh)AC:,SBHLL$;U<m)QpG5>QV:PT_MrYLW5!1]33?^L$Oik/T7V*jXWT9eA<rOlk]'[XdM1t8.Sr"3aPA\iSY1D$;
%#,EV@^*ULHEGC/1Jo$?_^N3MVqE*5"1>?E>qea07r4:*DQYSD:W[5C50I`P%otE#Vr]O"u)Ebf`&a6H@QBI+,2u:AoYF=U\6EAf,
%<Q<lD397'!^6)5>9q!u%M_kh'L5;Bc%93=.DtF][C5+li$QbG'Ya$<G?O7sqOhS;@4r*CHAN#]ga=c?16mN:]BK7r8em+C7BBFBb
%dXUXbdn_7G:;8R#db@Ih!oj+L/%=ZV?KCD'e0Me?>A6P8fjAF`9s%9Wg-ho7o_[<04'EY![8AcM3d(.*pD:I7I_p5BRXI>MOs#=m
%3#PeD-+X`ABnAL@PAu#*?m)o`6W!5g<U+("ZY:,oPto#:h!c!5"Y`qc3=4#jb9In!2g3rmG]ki3PA^V18?ki>I3epR,ZTj`Y?3,W
%3@5oH<&phu0ia7#Tsom1M\gIY-XJ_Y&]qeWDOe]PEdHEsU`)BT,Q+EO4`5?W;b7QW=Ms=W![H0-;pOH(D_k\AB=;]1:[?5"\g22n
%@(6>^%AlIH5DQ_[B-bMkV$PCLqOb9)@E\HXbF_AeT]nEFRWr!E:3kRYoi\pcfj\D[ch>VL[S:OJ9K!Q$cLN^CRg\$,:-#I[W%kQA
%_"pfa9\fCu?s"5u@s>B("OC=nh$)ShM3hS9d5>Wmh63.M$-j,XNBk"@S==a=,"XCW:(?JmAu#rmI]$H>bYlOFL@ihLD@6+f#>*8r
%("#UA8['-Y!IgXt<&`>(QDI0`hlL]kV&5UH,0N"b.l6L%p,jY-gEn^3qnan6X2uO5`PFS:]:DR#H^Nk@KaFQ#KL,jqB?Wi7\_tNI
%D!?e#hCa2E,n5;#MIho!Dn."#)+cNA*mR2#jL"8u:Kr_<%F*g_QQY,1XV5Kbe?"@j+iuX&:&Aj4bq0c$<XW'Ym<S`1hMaYoo8bhI
%q92jb[Xp^@HW/d3!Y``,=pKL'hs#?G1Tr=Rb)tT'Cj'PIa7C?aeC-`1#jOoPY3N1%X]Fp.rnXb!a#nf5T?6@)!>*/t\H1'sbRYj6
%2oBp3Aj]^U=I/k,r^0\'c1Oli;pTKTh@:;(mfGSbC:=+Yb.j#ckAj979md$GU::qKd6E*Tr393&rFTnc?e/K@\5I6W<0snf3h64[
%h.JJA[@LX#H?/Q-P'eigl.2n&TB`dYr3Kb)nrI1bUH:,h87KA+X1.It><nH2q,DLdW/9S)IJEX$+'.MMr;$n?s2(dJ?=uHOYqi^O
%iSc[YK`BVBHt9o!0_8O[XH5*oj2dUUa'4g(0,C^<i&>H7i8SPij9WXGcm0`%VEPi+r63IkUX3c,qXr])&;FQ+-Bc0P^(TRIJ-"Xf
%!FK!l3Z\IsAH`b&o&,9r)<]Yh)(4'E'AK3#ISf#1bCq%V`rF50W$')55XK"GKYe&;AH5Qt+FGqcn%*u4+2>?hX3Eb8bmmG::?b!X
%g;h=6LZYVR(ic)ie@&;DS]^:uAm\eT$eM+28nc7TNoqg2a>0"/2Mu4p[;6Q4NWfKRUgcA"doR.1//?X5QqkWmKuGlPd"5/,03_EP
%a&rp(BEt"d(Tp#;/NE>QRL8:Y87+eVo2J8Y695k0QP%XU,7YGD]YOm6$DU`nLa0DDeC8!-&Y7)-/'2Fdb3)_fVt0ZCYmu[g+ltDO
%S-^XID9MOX0hhsu0P&E[%uk=_;_p(leZ#XaMQCu!=e3_#<*!@2<`;=i(ZdBJQ69(=>;kM.$>Tm!dP>JfiuK8LnaA=(OUCD)$#;I7
%eu>lKL%T!Y+0GTp/JC6O+Zu&.MGI0;g>!`c/#Hc:("64qdp=N$;_ai#l&4<G[]hke`]Yl29B4a64cA5/S%0"m@?(^^)J-AQ5od_2
%1hN<$m&S3DAu.7EQ.`.\^-isZo,*V#*JCIU4_>'K'1!JAA7.gX\?1S(>=Cj)i"ji$WQ\+Kp/PW]9kAJtZW!9?M1%k=<4p-.2A,d>
%>Lp^I%k<(e`Zk=>h-j!RoTc7pHL`AId]&JFN+Hi>bEZ^FW:2Kh3b(U%'HO(B5d]0=V0"2`Y99[jK.j3g:8RSoCh\qD=31"E%ub3S
%V-UF&kW0K'h:.fe`UpQol1F14.]--!I0hXq0um<VMOq&^49<>>_(dE6#e+(7,KpCd(pV)2Fa@@K("u_)g?EmM<+r0rqdMnh.VkX`
%gY%/B_SS2od#naj<7kNs65E7f?0i/aW_@-C*Ege--JZ">Wh"u,'/Ys$A@D"B@[bB#b3UY#m.=OU.^N'AI2SGi1"YCT:q5mbThQML
%(sufOaeRqH,i;Hb*@?\laGf@_Au@E].Pa(KjH@[P<+]Je@G5k#5dm(r&(3LXRo#BI`\WEaLFX<*("9.L^:]iql+**Z9W)@r18_JB
%3!=jT*j]/7W)D)&PP^$9j/T-\<4P,-dIf\*>3@+Fg/f'D,Sf%4cq];g`J(a>R>^Xg+gr[N*$Qr#3:_@qgJUNPM9__?k+\47I[=#E
%?X73?B+\()SVlclMeoc$\YGrYF`!./aYP2G6;OOH+/sW_jn#>11UGOi81L61q4)=W:*!cf%SR\)fkD9KQ.`.\::D(<JX0mQV@/=H
%2"Zofku:?S>E%$$=gJ4ZKnX\RPpmI%WR+D$a\3^`bmmD`QJ#u3VGq0*1A_\>42"]<Q.`VlZdXM#WQ\+Kp8)6Nl+I.tbe=g[S^qRK
%ATfQ00.+$SH;1BC]st9]4>$Mob1]hG?G\m$lV=?UqNje<[+IkuV,JgkWREF/,7^"3V?nK7*%asq0L?bI43^cS7k1*/nU(Z5r#+3=
%rLim2.\CqMNHR";c\<(o5=GLGW"%u>lYqapH-48Co!0Ft=B*;g4GsJW#VpTIng&rP[t"j56P/&!XaBrAAhDX!aVf85'?@!K2m)4C
%#@=>fO-Z)RHepue2n(8fhs:(FN3.`no:Gil%I\LfSI2+^bIkd/L]8O[L*-?ha&Y&-965I#oq$(C-cK+TdMqDUn3rf[cf6c[km1'0
%1+RI<!;@o#Ea).Q50[q/+[T_259ZP-nkUZFHKHS/nEFTN,?ssE.RSjuE#?R^T7=Lfl_T]hb[PAg7Y[l,oQmJhk:^!)kD5rUmegl@
%ZiV64s-\$ICp\??(\FM]X_PW02g`M9&+G!ss069'U;oJCbUa\s]\[n^Wqg-GY@QepCBRAqYZ0l[3q\,ScgOIYL!I5(Vt*K9\YcPu
%qGiUB6*90+FYBt9ecAe0A,KEsBA;%!k8lIlqu9VVh%c#&@#4mWL\q'L$2S(CI*`n_YmFl2pX?J5%f\Q^VudXc:P,F9<B]kfM9oeE
%/kuP"#PD[<-;9R&#rK!KpYJGS&c`j;I[rlHFek,*Ocg+fou]SY-fU(1.t-`:E,hSUr(h@<J:/eti"=7L^Y<N]-:%Lb.#BR#.qgK.
%%L#$i:8u![DdYnq2P8Z3jmM*B'0tGR+N_5]]fJ5aS@Y;YA[]Q6O15'[E!G+ten_tZ6jp2F:5&D>*YmUoH0<(hm+7;Y'+()2lU4"J
%,]!tn9CuHps%CA?P6.(fGp7#9qcpX[-A(RHKYU#M1i=j,#H]%L)]ScbDmN@Ik;EosVdGl0_a6u>SQ<L(p%'#hSIE[C'])7%UZ(qs
%2))SD@5?])-Zcboj!KUr0%*r^=b]rJJa_3P(>hUd-c1%D4i?'d$.'A9c$q5!Sbi@]nOIJfON^bGn+rT)r62>D?S>?XeU*R6H;O)/
%49^r8*eo*Y53o[6jT(+nDu(J3:+m9#0#Pfnf"K:C^O)L(Y&o#>VuAmu#0^o\h,YYnY&Q+2p3Z1U0>T.Wgs^?!W&0S3Pp8N"eS=j5
%L*]@/O^k1YX^09<:/!TH><tb<ftpFc?)c?Y?WWV2<4XHPD3^dN*Q<94h<GGM2n,C#om<eP7XoLc$'cZbbXo-@4_XplN]O9RShYZZ
%J>Z#ccQ$<u**2NMD_KSBZshe%ogV0E6r;#TUMblg02q--%U,,m/HaX=FYXZN$n73+qXln7B")%HAuYc_.Fr8gFHkq-%&c5nc>>cE
%WrtoarPVWnG!:-2#X%8[g^3"/k70T;HJ0\dD4&3C&BlJQ=[H+#2bZ.IAIcW2e?u8ePMn]&B]nm_"f'jmYuA#2"AGIOqotTh3Todb
%4`BeKj6^]uEOP[D/jc&PAud<$UAKCp)Y=jfGTO4%.`&RNmK_PbrftoG\(-KGVr<EcB\u6#F#WHij`e:Q?Z(3T#;Y#"I7sV5`ehOE
%<6PXR6^]qqQB<;3Ig>bTJEuqJ6u`Wj=dd0(huP20oqnAGJ_Z4K.O&.Kc!EO8nt9Fp_Ar*O1`HnoS`JAFr?*d<loe#]&.;:Sda548
%Z/Z'B.Qr$)UK+E!.##:=6bF]Xp'/nBc?aK/DtNiX]&NMLKZNB"D0,k,MsuMQ'F='[IK^H[B#FYh&'c'&)V!NW;A_=f%p8*&$1d`2
%7Gm<"BtEpI/3<8DOD1OoNDk8QGM5Lm[f5eYD;5-UNl*qd-eo)\7up=C[9K1CU++[t"k\7bs,?c@PM,30nLNFSguHOnRLb*CIiR;D
%*;T*'m86\N7\jo%]K%Qker)9Hj9*B2<WCAUJ0b^(E(((oW*Sn45Uekb<,-RB?>7utiZ?X^[WUl;%:"CMLjVi6';s\*rYEV?[WX;&
%1%e_%Y?fd=+AqOYC^l1D;f>8HCis`E;R>lUf7'jYDa_>:AU_^&P#s`b5`1@*Zj'?%jA8S[<-FL`jG4!#Lk=cFm3.KLeTXrujj"EA
%>3!3]%Rc`&,B=Cn-mRjDHc9%];77D.]/e#&k9EX%C3"-!n+4o&`_;1AebOTG%JLfo1"@]rb4LL&8tHk#?q,B'E'#.kD]NBM+I+''
%#)O49JF:fD9M[A#Nr0LO)=7g_%2tPqo]gs;mrWuJD<IFlh330^!&/ILT+%fBTkOU57j2"A*?F5%Q`Yo5k$]bRd:qbeHJH^TlFfXj
%Abm5s-JH4_e2YPkTXE3/4Nsg%Jh\Okp2<nk-f%`"it+%0I)#!"\<FAKJ,pn*.rgroFnI%!+tOQ)WGXB1f$mfB8\tXk*uDQTIM(3*
%N5"[_")P06R=#e;g:<uYmA3+p\0V=OXS\QBB]u8,CMZ_+B5-]F6J#nDen$*Wgi5K4,+aI!8N^-@c[#[!4<&ekS%NsKATSo98_.?`
%p[1GHi_h/Ia24bN&!?#p&/n*Z>3=aUVUtpU]/,3$nGQrmZs\\>8!,dFf+8#0(^q7Wl_!)'GdQ?W;NT_1dsI+.X81TJ;)@KHe$ET?
%JWAZZ3Mu/r3iiSL8R`u(]1Q+p.m&O<j#"hC-efL/N+0Cu>>85n*X4^OJciW>-J!`Ai&[WSVj;1Bcqpg^R!>Ah%mfA#[lXO.poUgW
%Ud93bjAm?db+;=Y\s(fG-e?pf?#\-fE3s[Jrc8RFh.f$Mr]EPWWD:uUpInbF:;(s-'IXk%,qN.pBdZ0$mW]KI;Jl5(FIpdBbh0$:
%k&HD+@+e7Gn-ENod2+4F=76T#-qjA<>ms%A%DEEWFG:u'Y>_jXC7j)_9pn%E/*HTk7'\>hr@Wg`%P"%;=UR3*:IK;!K&40h>j$6i
%WgX'F:h1mZH4OVNTQ>3%EI;l\lt'tK3RU]GC3L.lbqhd1p?VD_6CtRE<iZVd%K[o\ejpU9:paHQ>4c^@koWnZ!-WN=FDrs"E=NFd
%7o2@nF%-NCN`QMfN0eV4Z$T^V-c&"T>M.-f@C2m<o,HU4G.`rT:7U\NYFQ\o$d%YPFmGPQmpunPY3SrT-P4m,X2dcd0Q(_4*E>f#
%S?AOScMf<5+=k@DnsH#NG4dDC,C=OY>(5/"ej%()JKA);&,R0\@3MD;'.=\8iuE+D4PFZSoch!gp7'U=-qe^2iJI!U5.0`]_#X?-
%h9P[QWf<t!2:pZ5T$OL)$A*Lh/.KX]7p]tTU'>)^1-d5ZbQ^qc0bZ8"d;%_)R5WclB<-4r3ekN^Gg>s-%#:*j1aGGUMV)<1Ut5s_
%<DH%nW-*8ge+DF0<n_o@J;DgZIfN4??2k2f3>DW'qsApm'baC^*=%8PED1mrVt,oK)Vi5V47I;9+dgG@)X>S2T\BQOcu8VI&A$^\
%a^>1"'U-q([ZQqi]@%+qa]u""3q+q0`NkN2TeY&3pJc*J3/[O;Fcb9UO.u/(`u0mL7_?Y,2NR:E+?g6@no]SKgeM:+h;q)@92-J3
%\^-ja55;dp](b:E9'*tM9DcQf;LYb>]Q(T3e@bCYHtRHe@A.#LG419301t6lo%L_=:LCG@b8YpqI(e+q=.OAg^38rY`pR#2\+mX]
%ZtS9">PX_9['mQum]L\>dDtaE[?Z_5*Rj=c07WWRmDdj0o61Q7-Vpe^D"ci8WGcY'5/IPq@ep#/oBCP(q#*jWI9Kgu2-Lr)TS21l
%_GbH`?S8X2Hhm-H_`dcgn^)T-&3JT/a#eD"^]"(SDRY^U5Q7_2I`l*L<_pkFes<r$`^4\8I_S#>]QORQOn^DUgY_?6&&7Hkq-YfL
%Y^Dg&mM1bQ:Lj_Uh]<K4AE1_alEc7mC*8mc\+'(SCC>SSpeb;"Xl%5R\_ll;G*_PSeKd=XC45l9pO-qQ>,q/&F+n,4^Ts<?Da.@F
%^KLKCYZ?#DY$CJnO.O(8H1uQ[>-4=QYPLTME8t&KRTPV$:8`R0gN*8Yb?@*>s6S]BBAr<.DI_kG%g69hD<9la%A+4_n%YscRam1Q
%KdX'**]o@rT@=nEEVIi*FfOb<iFJ@06WT*u]C,cAc9pLBZ`Vr%^$rN5MbIGAR9Nkeo7=6u:b[:P\A)'H?bO'Q>4aeGN%1u[(3cB3
%L"=k0eb?JtbOj`\(HLp4k'[6oWH`M$QfYR+'5s@rWi,ZVH*O.OoR1So,%'cP/j?G>4t,;kpsd.+#^l,ANZu*NB<6a#esZGGiG!R;
%s'"5/]i+e:Mkt?,2#<?;!sO1Y(7m]A/^iXbUF1A\]dKj2[I8%Jb1-o5%-)3e\bQ[+b.e@_n7=9W1A>;uHhg@DnN6R+^-m1mmlk7@
%PPAJ/m2!Gi'Fu;#qGF7l*o>(uK6M7IXns3sjYdMBXlA;7rQ!WQ0?ZlTR6:AV]<;eB8^oqhp;t2K4St5p//Q(im2,'F`T*6$`r2ZQ
%iU@E[*'X>`38:jli.LICO2e6Uk/O/tjl1[TQ,8Qt[:0.^JR1G8G2_-Oaq"[(;rLd.<d&h>j`Y#)qPSl`6#Hf=AhcJkm[0\kJ:f`f
%Gg`VaWHS;tITq5$[*!m%fochG^TEf[5U2=*(\00Hlf`X(,<*3DAhb"q4?N!)-(Y[:.&pTk4O<E0,a*%G(YUCsb&`?AZ8l]CpCj+4
%pN9K\A/HPc^[:jY\HhNt_Qh`W.4o@Hb6*%o55<cn_If]F6UG&\mV4iai9nl,NfHb<B;PHB46M!cH_]o2oceWF2#(G(91t0J?JMi2
%-iU.JHmZ?"]!_UUk,DG+DgX[(S$2/sl1b+NEsTugU)&1&?CrR:hH"oN.p+5:q'WcCo_CF.M`(PEi2Ria91A:0`R<mq.=8A]`VW+"
%e`,V-m77!@]ilX&1uGc_]>l#]_&0?k_?&Ae`RYu3I^%m\c>=XE5D7Y&4NNG7NFOP$kDP*+?O3$;lWB"^deaP.N'rFS]_\pLQe.7h
%HpDuWXa%XApN#`j=1cBK*osbR56pWN?tiV5[t.l$cO;kA?<XE*PIYkM]_\/B77@*Pm73Ei>!TPb6oV@\qPC_M5P>;MBB1KSoN]^&
%JdM98V`M?F(09"uLEO@4GBoePK?q*!D_DLpWL*Lj[ec_[KeD9>K07e2O=-[sqmi9s/fQp<SPc7M94P)&?%/H4/BXoP5H[3)/2SC1
%<TUCVZM/XhH8X;&_7s`1lP6D\e?>2\T6Tkk_c(6LX@:mb;-ptfT8@`nkVlkn*>Qefhr32"\#!EZYF@2DJ^eB#1A#q%%DTUn<>XK%
%XZmIo&:6hNP+QG&8&pEZ5CDMQ8ZeqhUZR69PG>o=jC]1&E_)_OI""Snl-Ub]nh^(;.$h_AO+)4]<FZ9R;p]o@(4#jiDfZY>]mBt`
%qOEIQ;gs5al^C-#lIuRW'M:SQHt,YARN!@c5;TrUn`tPL`>Da7_.Vu&k6>9I<Sd]H;hM(nN2V2X58DR:o"e+oT#<U%Ot;NE62`Q+
%lDI"!,&PE/)+,HXd)MtF)c=*LoPtjWnq$^4*53,s&fClu&ZDsU/7'WR7%i*j*$B)4E-Os(0H=SI3Y?70!.TGYoMll,IJ(KV`A`Dq
%)dZ^%4rdJn#@tcXN93f]%J_,=Wq'BOp"Ef/Mk^)RU6/RXTR_qs>.FE]QP;Y*'eVq6E`k67$>G[$na#dUe,5@O+Wq-CLOTihKTC/c
%mp@rqCCgALn,j/7<.B/'->:`#NUjR1+.(/p*bA3N=oQ7CCFk"4HXP/6:Y,7-^,mgo^[A:jW[C"P.,>ZD0mIVP]Xnib72GTm]7\to
%Yf@ud>!,uWJ#7&!XnDM)#>/pU+1(C<]mi$)'or1GT8KgYrQ%Jpb4#5<m:L?ZD<G]t!0,`@X[.\+ZQNP3jYp5E^Uj'>g_tV;pojM>
%i2FA.Q`>tUO7QhC/k'#<P!:oUqN"6%"t#ZnTO.?*!H,8ep:%XOna<-;"o,:b!..#BFf<Nm;ZhDTnCge+na#SWF#Ym2TYQlVT<@1d
%,k,'7!Hgio-%Y5gbe]B;QOl.<=:]\u?V^kIN#Q:h0D%<<]76R"V@P?Od_[#tC,"/]3?HW+2BLJ.^Pf;diZW\XrZM5amIR+Ng\Y?(
%dT!Y]4ss)6WhQYRV#I:O<OTF:h5Lf:LQ2T`:G5#:q8.D!D!^:Bhn9)s#<#R=3ge#KT0o=EW=Y+W5'WY0`6i5^)o-(jm_S.eqO>Ie
%-hi&IZaZtPri!];`SU4[?O*13Yeo6*O1R-dLKT&(L!B5E:9_/,Y93]cea7"=FR@m):V3sFO*nap#s0Lo5X1gp/KFe=B,P<o^Mc[$
%9,7NQU(k\@]NtS.Aa>G3N3\Ck_q4emI<&ui+Ja9u\^h$;>cO,XT!ZS*=%e$U_blrpf.W3QQ:oIdZ7!?S2-`RWMt\9BG+Ip<bP^+s
%[4OH>Z11:Z[K#cGmd6L7pZRd0#CG?FNTSdob;nf/Cfq_ED",*Ll$#T\D:ipjldu)Lpe45Hjg@kHp`3Rf^%Y3L@E!Q$ndQVTJp$8l
%eg#fc[du0CXIluCik+WLTlp/.2<V*S=pcA<Z6.bG:3gWO`O3uu040qcbqCg`?$kK0/_6A`Y-uO8rV8Oq#ckYIHLS>Q[eFt(_=I-5
%:*$^8pK`r/6rooeFhCg+^?duYVCCmhh:sGB<F%se*Z?UJ)cMlG+B>.pfpp+)p)m+U2B,.uJntkP@dC6pn(*1$5:h3eUS@CU0J[0j
%BL$+`[s(**)`G.Ho>7OnG$-0[SMqr#k!*bVEj%ZiRTdl^YMRcd[>)/(89!uME9Eir`PRPF8i\K2mQAaoJ:WTdm60FOrjN-H7b*F!
%a8$ji9jl>=VR/eM1[:HJhRQucqd8fAL?Tf9=o4?]3Z"g#j,j+&#)dj&!?'`TlCap#_;e>a@EV-_n'BG$f.)1.#Rr1pmr`ti=J)Xs
%cDk1@94'Ugp;(3@6.p<=?`G_\J*5ISpD-0USu_2[rI+S2g?Q"g%uT\4qWBtjrumkYqe5:D\%TCM7_ZG5r/6b'+gk(pJ5H[9alDCW
%kD_uFJS`L^+KJRfihl245.J(#hS8sGA+:+,Q4MbtMoD$(o5i@@)+XdB?6%cc!Qsp2=uj7)EuadO#&8:m>?Z7s%\rk1f;lTWs17q'
%?EY/oH39K/k`4kDPgLr(oA/c]d'JLOXS'oc=7mE(b*?u&fA@)LQg51>^'7e[0iouVI.8Tp\=nA!!C!j\V=jZQZ[0<7jLhIpClWU?
%n\<AAaLL!qS"l6pBsI>fJ=,CC\&6BrSi:tV*b)nQTs-OG96\"@>@&C%oB)J9n@\7fnG_)HJ`se.cCN9h;ZGC(Q!X>"0cTd^<YdC%
%LD?QEr^k<pA:[Tb$1Xhhj2Gaff\ci6=YJjf]6B-f45X4qqHrtVco9_'24q%\iWr,Y%FX*FX4m8R+$M$^c/mBS[?Z,$C6n1rXj4%k
%QFoCRkd?rPV=pd2k^@e_qW.AlN1e\thKcU=[_ULU\^p<5,=L6>ab3]Zr:BBnoO1qLeg%!]oSKg4W5Ld>Q$.5/[k7!hrSlej/h1Q]
%2=u9'gas=_?]N9_[A3+*pR[K>SG2e((Z-P5kkj*2h=XBc[FgC2#NYI3^Xe_Fr1c-Yh:\-gba?_@kkl[9?9h.fa%9]>p>>?fX3ZFM
%NJ4:Uo,"?DIXG>p(p9/6;R=ll&H>t-Om`h3hB21Z,D/2q0Di`TG&:r1q9AYtLuf-Hg(f+&Rg$KJ'CtOO*6#%9His$"ck8GL*Zt8d
%^DV.j/;fQ+S,M?)YMF)9nXs,jS\KCK*Dkh;+8Nq=;gt0KhYm]Dm,X?eTN9,R#X*>QCq/<A`P^LApk..+,Jo?(h(RZWh_3l4[FVnc
%[9#J,Fg<`Dl[^*?R`E[H&*:[e1OHo,`kOft_85WC1;1j)5('P<Pb/p3T0L$XKAGJm'tLH\s3qLu>q++%fCmPlr>VTPLSDQ['ci/1
%_SAYM[u'HAF7V$QXR(MCo_a&RPN6TM`h/g'XZgUZNA@?8No4"+E<MD)GO^lAqMph]I-K0c'H&1Y1U<@;lIRfINE&l+PrG/..W<2%
%Qa63;pj/<KG$^MD*BnB&>.MP]0qSL5^N.AS0aC15FgV'm_$8`,qqt3nQ5u]K]f+mf+H5&Z4^dI/B$R-sb&;j<^0.;t`ssc*]kIF"
%SJPLDkQs[PcTeQ9Er47O*",PKIX2kt&?)9Uq7p.F-TqpP+Y%GD_KjX$dBUBtFL^$2@?&8V?GDl:nj1Y%2WEmi-nV19%n[)XlGKQK
%YD3hW5q],2\>O<_2g_X]G&*jS>ho6S1Bu?#5FhG/^6,%5:oaL@^4<,&Vc,4YgFl#JO<6-a2l&OKEnGX+!5/3t@ULD!=9YloI[@?\
%_=9<o(`FoOV1m0L$\6-u95!pEqAT/!eNN\L3?.^,pe:JU]sZC`4<HH-7n;;Oc[a*[572=$hD_EA(7o\6Glp?hU(a5H1A>tk,C2%^
%*nTj5YA.:noIB;7Ns,e_&Zdu7N_2>+H+/PJktC-KQV6cTjB\Omi\*N0!7]cpd8*"*d?*LePgIaVrikVQkM1^`;+*cBnb_QfjTQKP
%/SjIPmrq5)EU-KlETE*uO',?j7QGo/D[26kST9#C#`*o,^KWdlN.pn_,ppu3GRZL:8&7`!I@]+q>_BFEHINr2N24j![K"j-c<\Tl
%Kr1R]+YqD?9g?s!C,PP\h3[l=o;qGUE;[9?(V4"(Xf]=F^D:1i>5]u,G92/AmBgoq6"t2tb<)q!S[StB?2RP'U&X?[eF6m.[iOtO
%+d$%*Yh#BFn5o/19,ji0DS@,=>tksIegG*S^Ycu6h9OinPN!/jJ#t?ss/q9X59?**9mZH,]NVIQU'tU5.&MrJdP@r*I?(E7$W#?D
%^PXca!G:o!i9\rsX(\NBmsSI[6q!AW[Hd08XZY=[#>8V%q1h`fR]n]`r#l!:]"IibcnBnGdQb_[Nec&.>&#\X1:\7L"h/#6:UMC%
%O-fQJp#"$URKl@=:sKLZq3<k6<fH*V%#t-*m+SXk^u<?2+QD8O#>[4RmH&NK3P,CcGpdCb2ZWWmhGBRQ1&Yr"FB7/]k,d)lm78@"
%i[b%JFgq.Erj]PNq!h?Jk:WptGRs'FNTAg?:)\n9ZU!7:.tN\FYN@`M]tf'JUQ:3;3]*bDIt=cl5He&[>2R`HI9cVt^Kg>5p!VG&
%a6u:e/:EKAs%U/\r;9h.RuR!r@g=[5pJtIoWgMuFfCSTVVn)eM5s"A-@I1I2$bS)V"KK31WO2<F4j()oHRV8_orj9D\_U`hOneIH
%o'?[-cu\,nXchWRL8-kWJp_XDI.F*.V>g"&K\XFqV#(Z`W%i/uqeb;:XgV26%gmY.Aq3>-rdD7<pF>Xkg2)1@Cdh/S'L<P/N2WM4
%b"DuO,sDm(6_F@2`l*e(N-(OsasTu>?_f&d>IEGbb]9]RmJC@qq<ZC-q:j[@MG3Pan`?</CG8%1q#8m1p!"<-@empR"+\BECYKF,
%:<SW`(']TBrgSZrr#LdgMrhQX&nNY7Dh"JQHGK^O>?D#7g?k3+:LCn6miJk)H1+@tms.EMkXi\I?=6Gkq_bj0>j^K$s6o1p)fRe:
%XshKL,g&-;qn*sQI<g.3e]D(YP[IbI,3C7j(!HKdSU0<RVV!9[]2^l^f8!*_S5-sZI8,EP`-q7)1MURI@bX,):,jjNeoWM-N;6`A
%bi9:&o@T'C1RQo[p:GdNdd]-,@m?a7'kY%+&*klm1]JNnbtPTufqt001P>!MYEFG/C12F,VUEG=K7$Em""'L_f9HHU^UrdETn.^%
%qO)L,YI9l;^K/B&EZ/]>,HU*9DlWOe&JA6j^k]f.RK*ttl,#\c5?!mrjXZalU>Gd(eS6T$G#5BBqE<Y`ob]'hhCQf:EJ)*WQhC(Q
%K70,0lYnPOH8j;kSmX_TlknGE-9sE*aOO&!I81it=d3s'gY;<1hUh^U'<J\n]2V#dYd3LT>2eGA=id$Vq4U/9EIFfq.DTVacou%G
%9O^=1!_uFZ)j*LaB?Xb]=)$4i3SEqX-d9B0>Kp4A\C53f79DZP!;1GBLblcB$:/*oP%JW*V6m#efkLOfR=d/tV`ZS4(M(0\dOFPq
%*[iI\.9,$$<`V@G^-_(OR1,C,J;/2/4e"NHKdUqNO"#eT,S-]:!L"XErbZdQ#3%;XoQ/PXl_)\\W;Q9LU\.d8?FRf0@*ks#Z^(mF
%kFKcA1B9RBWWJ>-hpg1c/qp$uZoqW.-n<,m:umJ[obpY2rNI=a@Mgo]KV`GC%h6K&lP+Dr$Qpt*5SlCP'+2X]7ZTSE&1n($a,#de
%V;9F&n,`G!&D3Ca6OGu/`l9%^*&UIar6#^E!oX=*#UG*lb)jD"=,!'OhOIY(_7ZO]f_?>0iF9H_;#"g`_infj;5hdImSjc(`;&bn
%@cEb6c7GQ0(-`ol`O!Hb'_iY4<9a4ja8O"DZVh<sR&cZYFsCSe&nl3faWr3VUSk4C57aVs4I6aB<-+qZh<?$>d^GUXD5<jN#T/^i
%&Ziql9T>LU0`FnVaKl'+#cD$#9#TBpd>>jb0MPkFniZPLP=?J]6dB"^M62no++rBjlI$tT?L\3Sc4U96(0b]X_(N<dHlHSD%?@n`
%-`)A$Tu/m:S8?D@]3Gp6q"RHpp9)=n]of@X7P;-[O&tB"EOe:YfBYu&8R8\koY!rnDo^$4l=MHbHcA%RDB/TMa.2Le+nM+]VKBU^
%DK/+ehlR^2+]lAOTssUQXaTF40!+)f'A^^0P2qm)+9)61O$:i6f/>Q^AZ8BTGrZM6_@sAllc<M+V64giQQCEsnJT%(c"@_@6kdC-
%Ar./_A@ZK>9ESnbGq;To7pnFQZ7`Q@bQbK`Q=[MkD`K$-GqR'ZC'g#VM,J/F/e3Y<2o^dem>'^52[=;*S2_^%alN'(.]hTPCT'(G
%_;&V)mKApDXQ+::Ve&dH!hlKWlX^r8c,.Y%7Vr=:k@S#f0Pi*:[ET-0G*[BYh/^00isH)uh!jJ,mC:sFg^=+!'2J'%/BbKlXt'gb
%Vf'8%+.>5QM$4?oD.eEOjIA3dPU@F[1TZ[RaVBCrk:j,lfl7$h@a"`PE8ba>1DO'*[L5quZP7?<gDDaER4si+7:9hS;OI?Ds0i\p
%A:YX&Y.R7eR!]*2UN2.L@KR;M'+fk+&0`[GAba>iOJ<Og!(^^!WhC"i5nYWVC9GMe)T7]U36_SH@@aKm7$>*=2-lojD"fp9QYZmR
%a>*dJ58Z2j_TKL,/X7M92kToM(NR1/*8?bQQ[-I-o!1XF#``sRJ6N<_0Hu#lV1K/WN`Voo\`aAO_#Y:To(Z?,=?s&I+[DhiaOrXX
%>[09\$</P_!9p+rP(=r-lO[LJ2P:-`5d<9tN/&#!D>]&3gNf)@#6u#^<`9=3\KDP@Z*Q#Q,lO)F=H<FZ"4jr\M0JQ;B_R+7+eU&>
%doZVDoFNkgak>.&Y,<1h`bk//7cHCqW^[#sD(,u$89eaWR`+_O:=%L)?ii_MbRLV1;1ffsX2]/F*':Z`jn)dl0X/!GE&ET))aqB!
%,)$lL/XMRoKs$G=BEaBG5?soF-lBT(N=9E7H[9inK=-N+El"u']Z_<odtXi1ED'6bo!R@:DUh3N!]3=M=(732MRV44OUL!E)j+0p
%c#R*ACY3Y.K!@VlBG<O2&(aHO\<CK';2%Mj.9s"k%os+g.+R)`.[e18&X"G>;$GZ1[ViAbq)C'm6T+UjSoZH[Uc8J,auulPTq0n0
%r<%.8+M!&+6u4#'M$mog&jJP>W$n,IGiHZp2(5Sb@L'\=Y#Et]BWXm="t!D\%WnucK1PpmN&t3Y_^pHR!e:LdD[8f0TYP%15g(r8
%]g/'6S1FNI[S+";#Y(hBep>@HY/!%\R6\4p:W[(M-!eH[C*]+p>p-Bl9?PYLjfXVHmN?=iV"1fN=D8afNfC1lAXXnF_&g_:cM;[L
%BbAbtrSaEO%5tdJ<AeFr,)pN\R(RWHdPI%G("?[_->M`H=t*4H`@R2rN6u3:KE5$@\>0-EF<GeE<TP9EN5l)T799:"duQ4DYEaZK
%B%/dB!*#e\ia3WF$s+A^aCo7Di%Uh;$0>Xt:'?sI3(/$\2AuoVHa!O=KZA4?9,^pPEro,C"YO-#!<3K/4$=epQiIc'Pj&9N58Yo2
%P-<Mu^8!G-!3\^lMoMM=@!j*,Z"?O8N'FRUg0N]QY,0"d&fo!n>=T&KAiWi:"TEAjpg=t<04]KCA/:9-BcEb7_K_lsU1F12r"A8a
%c>X[>f:sE6$]?eU+L&ZC("Bb?.Z@h.>M0sU)N=0j"^6Kb@$r;`,E.(*j\LO'lSs\liduO_Z^")P[5_!=buAm@?bsM&5U53UTG3]O
%bjklpJk'^0>#6FL?pD1;LhI8FJGPjQ4.ZpKTX:t0fa`noQ:$1<Jg+L.EE)XO'->dQ1BL9aR>ct`J9T(bG3oZ**A1&>Z(O&85nC+(
%HM&W:C4$TUU?J+&1Ep6A21]Ob$0hQG2JWUCX`PL]V#]8_+kq\XY@0NLG-?j*d+0>%4kUk2@k!P6&WB2KaM&?g0:4E(d8`>Tf't:;
%lRAU%KpA,8,B1I59?ME^W+[MI&VQ-r&0MmoAd<2\L-B+F4:j6R"40G-R9tj&l56l4f0h!cS@Pr;E[_V^]qUC;:/c[HBb-^8WDPbg
%f#DlX8-+<M8/0doPm!Rt5T-I;nQOQA$kM8O(pQ(j>u=+EZN*/l,oS!RM`8PqFpraZ[as:).Qp7p#%ND&EJ.SV5"=/30np/r9KP[M
%#@;GW5XA;<8.(NN?1`9LRu,*s@6B.7*=WjZ7L%>^n`1fHS8HHp*nWM%l=/oreO;7rd=`sDjEM-:N7[>3]EZtU.B,5:U=FUIXnf4s
%'.:;&`h\E50`m'#&1Ar/H`fF4=V93*0mJ>1$pNi7b2\.uW](!9PN>L",,f[CikCXGW=G*LkAX(#2S*&7;2sM"3EudL_5(PWAt$1H
%kXj(-OlMmmWU0bKb,iGkQeVdDAs,iQON%fNGU?HY(<5j-0k!ikE\,>Qn4-mqT!)?%9h<Xoo$fW3o"k!pNlm3OYl5JrCRB:Bp.fT"
%\.6]]G.">80=HQbN?M-A1M40"Uo51`l;?@C;_`q/`]A0XduNS'Ch1I=UH5p<$]P3YE:>=3r@I0BNc:B@&>;kM_TtfJkEr(j,Un@[
%LKDr:A>B4X6#N;n%")"07c^.kj;P0M;moUJ,Cm]:F.NnUIM><(8lmcslcNnQ%B(/?7,d^1?4oqLe]YW@gc!bn"fL\=iH4a1\X]g!
%)nn:;a0d."3)iC>3P6*8$VG6QO;<'qK6CKcWSf``>V1he$O*Ve]5+Q[;B)h2_BrASD@):sSn3eOV9EBq_[+.:Qt3&I/Ou2iZ[i<k
%oEL[d30(+A$M`I7E_j3FdC!qK8i=KSE;:JG9kT6N&\s9Ho[a@i\ScMCBa!<J8cZaG^#"I/q/$6jN)8CfJf?5]O8q:\jLu"'EI5C9
%*:T_D56t,8Md0ZtU(BI([G*.?(L^'/0XJW0:mcEiEe)q8B\:P)Le$5&CUde/=50Un7kV%joRPpjd>@M*#BV.\81-=CF<\X!RSYuk
%KS"7#O:"o+%1J[/nrP(U-nDfaom9lq&<C#t<?[V9'iG(*AFL:#!d"Rs'pmJBZC]?ae!.oYP\@[;q^?co>@2UeZ0i&kmJGLu1BVY6
%;g-[aY`8"F_q`W,Qp_cVL<8>9m=_F_>2XQR)8ZJ+!/%=e&2,:&V1hb!O+:5]]4I-oO>j_5SIPp4Nq*n8%#EMOo+;ot9][=Q6\ul"
%E?/o%E#2QpV0]TmoX1TkZp7QY5RH)b;TaVEQi0$GE81qg4@fuQ:DGg^6GF5bSDJpr`2+s7m"$)(1W,G#4Yrsc`AAF):GjnZ_,MHW
%AcOQ?q?,]QY,`MXefl"m[Z!T4#S*r,)?J56jHbut%O!e:>Tg9>oY`;HM-[I/^.#W-Za-=g3O4r=aCQ@EBp'FcX&<*nMH!Wi0e051
%REDP]+ucZ]^4':qrp$J`(<K1\:+m'ZB#CucY)Q1SF\N&RZr9WN*hLTRQcoPB7oX4NOp(c;?YJdS>(l&s2/\N![=nd:J[t);l3E4R
%N%h7N_8aGW:gp&Kn)t@nbun_RHPZAJk?LdDL+-`u3G)_YZBAsub[f6b/2W`fh=;!(Pe(%#aSs-=VujPt$8o=7d>VdL)R#Tu,qW0e
%@"Im:Sf5K)W+6;>)HTEp/-O@[0HXMo7qJd[HsOoNP1ruk^%r`@^l14_)Tm2UH#ZMoMI!eaL1@g!1UaM$XH\2dYuRu$Ct1$L>P4kL
%Xa4PfX'Uu(8TjXd2h2uU?d>ZV@nRmg_35A38`g-gB?%*l&-p0!,LFLd=JSV`(mpm\-*\^1975bJQ'89Xg8`I*=+1VtM/@Na@NNEp
%.un"!qR@_Cg`lo)(I[D&>J^Q6+Jkg/m(b<\d6[Z_bJ`E!=t,_IMLVXiKGN#\J,kpT^$FVg0`N^N7mpDK0DZ0eX'7-C7uHcF[b@+a
%*-mT[45TSE5Oh(6@*@%QBG=."M>:Q+HA8gJCRW9^n`)0LcE\Km@b8HS3*1.BZB\h7ZT?$g0#MBC>UufrNKjj;OY;oej_>r)?"M3s
%b-I^'<tE4+.aS\G,.Kh'J^ik^,Tc&C9!.1uF">Ka%qRG(W)I]*Ue])CC!3ij^;(s.(/h'+GXYi"ii/U[Q\L_JN15adboH[>iGr#q
%[,<?Z7Mr*?Jg*rUi*uK<m#=!5<jA<A"d-"+5UmKUajkI/BL(8eU"$Cg^%nb"Ed_U'jGO^?a>$AZg;.9ON#62n]=)ld?&[$0[@$V,
%@D4'/G_K;.SVZk]NcKnN0>k2<LWPPt5-.#"]cBa`O'#dG@8;,945ikM=J9Ej\@!FBG"Z\A@(VCaBF,sY/7BG7j]\l<(d3h$BTncb
%BLA_s]S/FCQ:epm!mWQ<A.c1(1:#"HC?l)YE4[?4^(L*M2P<X)n\IN1?6\Fi12#j$,uUdRO;_@/M-L]TVp+kI^@RsuhdArAdF%.5
%co/f_F(KLRcEg-=YgBomqTp4h;i<BdY-L^jQ`";Dp_0/hAfB4!(CO#XH\OmBU8`tU]fp^P*/8TQC.Q:>BVNM/?,9Xc_c44@61I'[
%*#XZK3&7$HF#@d:]fubrSQ-V-0i\qcSum2DA@o:!_900aUH7/Hi5`-'T^t"gU)P@,9!8W!'..s6Yh+]O?>rp2<Nh:nlA^p2of>Vr
%Q2]BuH@BE/0TN$NXC^auT0XZm.U7VELM7E:=J9b&O9gQuMF9Sg<FAV=[';9D$.h$KBi14-oDs8Uk.khE$JB*nZ_!JB!BoNOX*.KY
%#>G^H\<+T8U.l>^R4>t)8oNC4[Dqn'?h:7-)ha5<09Jc]QmO6*$l-e,A<r&aK4M>P,Ps#r8%3:]_MF*tMn`@BpJe@&)MLPDMSX*J
%Y'`ie^tFs0![.q,d2iu;Ol[<o)5u)&gqf6+R/'2kR$dq$M&LL:SkJE!9G=s9a'^m:(36r4h#;cfm"UDN@+<^O]&3d1,8na<UX3(R
%UaXDAI:PsIqqA&>$al6h;jk=(BdS]\0h-70dqASMf"knCJf_`T\nIY$[BNrf6R&*O_8Pl^58%c@%4XI=1sN&Y"_M/Bn2o9R0%bhl
%+3io5;N;NSU^ATpr-))Z^dWhbG9pO;rm/FuTM"240YHgf:$Ur5\C4Q<qDKctY77Bg.$_!I)&9V#NLO+3i*)EkDT_.>b?b=bf:hQj
%-Ju<g/QH_H"05q/*2Er1ROT=`[8bGM2]'ATVS)&*(6.G;GUegB6?n6t/1M@o;chM<V&YP:E5hX).X-t`-D[DB0cP>?\8%pEa-JFb
%4Kl`&Vrn%N0T@>/quo3\#B7#0(D[1]Cf_Kf+R)iEL%-T2.snFa@OK]m4.XEAD&Kko8fRDaM2)=GW2XB%@G)WGfE(`q37jikCtH][
%n@4BQ46[0_-"It_8'>FD=+gZ`AR'<1#uanV2f+el$S%c;Sb[9qGb8QJ7Y*i1h<:4o2-G7E<@;0+4FO.TL<UQ,d*7m36A.hFe\NC>
%cP[@m)D0a\d#HNp*PuW#@GCYJLoeIpd%d;MYT,Ds%*Bck</T#f_.QGY`/BuO^;t<t='UdNQ'\6a^Dt(TQ_SjYjS_/UoW)#RO'>[a
%211VsN8Z<MI9meUSZBjtmcf%T$s_SOn-7rnMM]Y2l$"#"MO?b?r.JXf$4L,S:`-IN!?eu!4dJ=QN0A5]h@q5#kJWS._f3I<PRR%Y
%M+K#rn,pK<-SS:O9+X2Y9`ZF,1r&$nN+udaN%0hLW>"gSNeJ!,'#G4chPp;T@g5^1a(7lU`@o5Flu&3Q;c5,H]T&,/@g$GGL`Kp*
%_K[hq-#5AJ0Li%aS3i7?okA'OmQhb/3"@!+;TY4-r@p*D#;\_YS*d4#d.#LmH7(V"M(V2H^I54pW5HKkPd(QXG)h4UbK0=<ADB5B
%GS*<5)amt6%,2%$ku"GFk3-O$3l?2oRTLn6*@nXHC0)2:LLNtB=YuAAq\ZOL3A%#]-V*:N'#:FpXshKOb>nuYW9Y,CdOT>ee+8*T
%'<9hL@Hoh;j_=:BRrMsT@TMEDZ.1J2b-A9i`6L9Nnnb?cM;R4=8@gid'+h6YpaFrJctG<@b<;k#o7K#4`7Pb,%4*?T)j]l5</#6a
%]?mPZ'q9!)8]Doq<@"8c*Yg8(C"!i0[QAN'"kEcP1)a5$()B)&JqYo^CXNeH:RrLlCPQ+fm6TK3SY*8+=F73G)c^_qX?.ZrSfa0[
%a9[!s`j='H2]M"YA.uKN?7$G'_\nml:9Ou%<u,]\f>@'\@4eK\>`7m7[0WqJ(=d2pmo753>f9gUH_bI^@:rlteB/$?;m&G#R'0;Q
%VEg#MPiRF8]JW$qOF^Y&K*pGd[H+;DXG5#S*Z)#W$(9JQ<090A"2G./B(i#iQ8bI>Nk>r*WQ%d]?GN'GT"HR#B#`6iYqlI-<CP(a
%`'\YU*eJ02f9EBjcIQ*D8KEPZGW780(:*GL(=eF?XjB?[)g;kDTd$k14aCCoNG?:0N<J_8UUniQQ7uLfN\LA(=:<dqg'n5?Rk!1I
%YuH8'@Bun8-C.Pg#;SVJ-5-a0F"GF:9GWm3JD$TA/3/B9og*,c+Z-e,i^BRqbFB,PGZCCt-%T,*3gT,+0L8PZJuWA"32AtV_buG"
%'1T1A.3&N#&J&bu<H,!?"h/ef1fD!s)Ykt]lgR2XMo_])Yad.T6AAEU$VX/1RIp!K.[aA5,-:KO?8W0<mT?KJ>E.9X4(FD@/p.:2
%6X4mi(7%W?W\0EnPtG?B$K/2U-!;^YF5(5;gDK-S<]c]%_I`QdWN.K^WCsJfku(eKO^kQSTHFfRe`I[gTSKFe39/.O&XM.85D.,.
%+meah*'>1BgYlA.j<c@ef[94(n-F\%5I=pPLX_=^JaKTMK;/)cZc%DN/`CE16?o)nU+93J4r;$FZe+_>0LiE?&6u(OTMo;MB*HW@
%gGV4LK8FSliZ+_u5pAEVSS6LP(WBqj#G&&e:G?OV3#M"JpO-3Rn#!C5KG-e`Wt$N;/[q)k(?fr#.cbV4?79aWP89uU0>kTNjRPW0
%B]PJBbg=GYB9ZTC+^!T$2?SdrAmf:a<1SkY=F=4WdtUAg<Ho'%B3FfVcBoJ>b_'&LkB_='j!NTlTh/=('$\1fK"N7ma1A0<FNYWI
%22>T(&p;&5P<rQXXWrBtPH#XRa*&FO3MDR\l85$MNTZ+W:)KN<GQVhLO2)I3:sc[>>nVqgOij$n>Dur"VS'jl<EfU)9D&c5hC%L?
%W[*-I9gGEYcr.8;Y`3Zn[5kgkJh=J-bkFEjC<5lUJP-G_'MI[Fh%&.G??Ad.L/$?Uoag+pOWFM'[`C1k%KV[O@VK:Q'n_)+l0IGI
%eE6$'5RWMI;q4F;hTg(>`<.mrXIRXa+s'2aAKuElSd:\XLg.0@a@k-+2V.Jg7/jA8L[*F2TmB^ZW88(G<3Jn(eSAU^<97DLb%#Z>
%];p-aj=TY[-a5EiEQqep#A6e=^rl2aA`\E`;GD1oOA>Jg#Zgc:!]ESrY/cCE%V'Z18q7Qlj!I-H=Sc3"No\6gGN?8SWuCFUF$8P=
%fiX=cDT39F59o)kPJI'\fVjhH7W9r;S+?G6n[lSm!],BC&#0dIX_X;#b)S/,Y098JLTAlbfWOWl+:c_D-J58]LPrVKW'df-_[@`3
%L_pf>Cgh2p@2,c\&YLB';e<$Z;&Tc[3D^\=3a<!jO`;SMKX8Y)&p7#fWJP'B4*>@tU-g8'_E&+iN9U,7n>'B1CfMYi)mMB#EDHUG
%c;]`)j-W0Q]`c?Y[)N0ia5CS]dNUFo7Hq4RoX]GI?a_0//$DM:``Am]9go!Xakgf,Sr[)Z8W,=!+I=')ZDY#03?C]@-.?fQXqU`[
%0k"P<5!&ZP-#DV>W)0<+Z)e:E#WMC?"]5C/NfoCt^BPD?RY5,\De:a\VC!h@_7b;Acos5_GY#!>Jolsn@`"k7-B9qLYVN5\ZI#kr
%OV/ADo.&qV`WA,5aMd#40F#T`o;UiMi4]HIOHBI.J7!'3!/iNkG]d9HI%q:7R=OG2r;G]t#d/o@lHLsKmjs#CINmfO<-K<"`%44@
%>/`%/@>l>`cs#2#.U*M=5p+:44WHkE49u.WAG2\39=\=aZA0A-b)^#Y=^D#Y[@`,M,:jtd9RHu?C)Y,\=CT0&VrK[F@Q_FO%T2i*
%]r]IYN/2%^<E1.;g6U+?&h53D(+Q7]d+^(0WZ;Ke902;5I;!1oY+q-b>a308o;M2aTneK0<8q__E<]7P[1mCXS^sTKR7B.'L?<9o
%<&-\Y.V"JXc?XN(Aj])E\>QJI!.WX5;OCkAbqj3g@m(,D=A.9)Alo1pB`Win&ScnkT%q^*1<WTtn3J9tonU'4h'KXp+SDd'&U?[(
%r#A()n74_<QZ\_m*8^1EGp'+aA`48$Tk:&ADi(fffiT#qFoqj.m\g4V0&B#BceP-=bAR1ocSbUL!%`)CMXpm.&PFKC;qt-GMMhY8
%#8!^Ci%Mm/MW*Pa+.d2!7\7RE8)9RhH2etP\)8`<%+KnaRtCP\E0R2VAoh@+U/,;u0XJ9^<)80V8/`C4Q;D`"!nPM;0Rsfqjae.$
%3riQI+V?Nr`gBm6=.XR-"qgf<RM%On8Ak"rqD(ksYC4kN_XN.7F/LW=DLE81X9b^L1+3sTZ,EDB,[6OjP8EpjZZ>nK$G7dO$ZkJY
%`KV?bq^A$m_!!<ZbGe+h_eW`OOCp+M(?3G<l6S!dYAU;YCYW_[4@"A=b2(3>^rm\Xm0p9tW-p!,qG^g8.,/m=(=l[J9Qp[[MJM-4
%1l1.q(3*YYP[5;$YK;FnPq,bGnqpE,=!Y<HMH$d7aA^c=9sPT,-XC0?[4m9jfRhYXod*e//EuFM/&;A-]1HNhgA#mrJ@n4:W_?A7
%-$cQ",V!#*r(QU_+<#:2kGkS*#i7,,I2P0@/j'eB[[Gq.pB['e#W!i>->VCi,B@]l^pte[o*_g#NQ4M-9oGM3q_^B9'R,72'YqOQ
%Di892>c*mhCNf4.4Ais:*l&ktA-Fs]TL;V7:t-[=d1Z2#j@6Ro'M8n0!R?PUaMN+oMu$mS3@kLd9mF]YL,NUfN?-3\OcT$G7Yjc"
%1_a`mX,J#*4Y3ZE7o=>P3[rq)P9r[V'(%>+Ykn#q@r-?0ceM>d)4+`==\>N1n:i\+b;@1H/`Pfe35%MG?D!]I!d5e0m,6#o=0E$U
%ou;faH4@g`>>!e8@mcRkS;.?(`mSAP.`ALA)2l\R@`NX.&*ZWU9e_[.Xt,:ras0$sR&;Fn$$>?.I@hXuH:DqQ7c)tbW3\p;:R]!s
%;@me(A83AH;Hj<,D*5;&0/C@e^kt`8`,knJ8lE<(NmdF4&`_^coVE$+NJe7^T^i.QD!%*I9"!")W=&3`p<Nn$Ar54Ik/\=l/AYql
%in<65@;$D=!a*r<DB!MR$Ra#;W#r4o@g5L+Mmt5;JHq2tmIG4SReXL-ah<P;>b9FD;2ck[2V^,Ta+_gR2R/=$RVVp`FKF]cCkUp[
%O4l7CI]AaZ_[%;`)s;896=#Y,B?P-=b;2U,3F4n*23nIla=GQG\XM!eZ9E/.D:Y"AWgSi*PIMis*q#)N;^:6"J^AW-KV+/\L(bMb
%&4.O1(jo*0&G$l(]/Q*ZUbN&ae[*EV!fq@&<-Y*_j)P1(gB>KpK<A0PGO_8.ID[(GQ:"A.3!<@R$oj/aceKPcEEc3s$E]bjOh(<,
%>)F'P>]WaTZfQ&N(cF(HQCBp;>Kt0f,*!PV2JM0loF*7JlZUI8pdZLoREMMue?N6l@U#]Sb.*Oh/A3MC#U!:7)r$$Df!n\4#W8RD
%%IW>RqIh*sG!3lBL.u6E:_6I3kCn+fE-]tlb$^q3d(m=ASO/$WLK+.IkiZr2$'jo9^"_[].ZhAb@L0QZ=p%EZgBIp7dB%Aun01/@
%pU0CflZuPU'Cp<DBQWn?RO>GT$lrQpX4/B+=S^WZ.$Bu!=h)CINODts#BP!/#utZ:g^7sRG2t)Qgh:br(Sr,)L`:rOdDPf@#*U+B
%Af)'"d`r^*cZQ"E;m;fDd5N%Jl6[a.7p&g@m`E-BV(/EYKGeM/A[&t9]&AJ)94e<aFl1Fq9:d_RDhUZ=l-;1&_-i-ARA5H=hE0_2
%4A*;]MIf.:Z/n-/'Q4A#\/p42Q>YbWebd?"(>RA@T^n[Q,8UAl6B=AP:H*$.i_Y'2\Hg]:Y3R[oonG%B=3-(`"t%Jt`eXZP7M*bn
%8oI9nFdY_1<,VPE2;.EN]%t1AQZ]&WSHU($<K4G&H86c7WZK"8gt_T+10S-(cO/slSj4LQ9XQl+]Kk?6L<Qm?\@t]Y`JaS[K8Bup
%-#>>j&K;TdgIOT-c9Q/Q'``Y^["H"e'jCr9b^B]tcWWk#-(LGR#XZ1c=$S5q)OhLP\hhqeD:$AS_B\klf)[N3E(q?GL3LKBT`K>a
%b`LD2V/GslGBMmc4%d6n/%jB\Fj(-,dH]RKD"l:2P(thVF[R5hR3MkWF0LajUDn'_!De[tX&tdj6#A'EE"cNJ6BQ+Y*]f'GcZMr,
%8#o62:V=`b%IXn*;YoGD:23m"hIM.2Q:_@H=!WGVQU.J5Je$Ecn?f02V"W`p4*ejJ9L.a0W^[P1,_SGHqbFC9B1<q'Q+%U2lcb1.
%\AAS1(Q@<9c/odaL@HaAEuASi=N'-eR1%DuD0pS?LbOh*A?&0d7eM`P0&i@7JRtmFrEsCHO&8?jVRSj.DdqB*_[`hDc%Ld[*,`!7
%f,uSX_pRO((nbcFrA\D.0o\L^bFjX?lcS^)Y*4]RBZ9;hE9Vq2rd1e.+)I^_hU'Eu%?Ccn:P2/2EX"naXhge/>Sgmb(W@d*,*WBD
%*5e.\FJ,[,.ptu1\hk?`JlZYh![53_)N-BWD49KF0p0k#b#8@E,.Nq(+Ql`L857,Y.O&3HLuhIgY4e+RE$GAa-LZKg1Vbe*@H.\6
%0#<0Tg6KJm"jGF",3S7VE-VQ!Uf4Ws/8FU0GGnB`GZf]p0>7W"aJE^YnX$OB>YFGq.<A,9SLtt]js3nuPUk>qg;-)).`J]XkCfHP
%o&`Q%74sfEK\8C'=&C1b1TENp&NX!QJ<eP_NiRf?W$E^`Om:(*N_iqGAd%BIGM$>Kk)cUg@!:6B]ri`)UIA-g(nNI+%'dud,m><j
%&[Bk+O9:`9&@1f;UDb^[_(0<l3^u+3`@8u!i#OPp11ci*6oF'[V0j\gH7=Ha4QK=NiXHg]1:5*`H$(ur$;kec^Pn`cf9o2?-GtTm
%JC8NsV`7<E^]:O8bY=0UN]cg69$ZX:,ugP_^gmWce^Nnb$%?*M[58<Q>*_(78%GpEQG]t\olhBXgS>mGU1:3;aMDPWY)Y.%.,?Lp
%#pn>65nJ7e-nQ+.A!\$QYq;a.0Q0]lArZ3%2.d9EF\!Lb03_@+2:pC5kZ/-@f%,gg[2X/Jb&W$AL$Rq\ST(a1;@Mc[W&'lEOdTC-
%0O7DT5^(@jN2=Ds%[MFJBK1SYK&oQI"cMgUPqImFU6Ok2)Fb)<f@acg%VC``)m3gf_KJ%N\=RBk8lh=DD$3!b0-%bN6H,@/4EkBA
%d)HT^XX@$4j&@Ua";f7[=9BgFWr3Za3a?/l=MjjA>ino+Kji\;6QjWb79#SO;mmIqD,M1DJL`kCEk.KO)[hoM@h]Aq,Io?G]gZ_&
%X$q*WO"tlBFbjr-<'m=$$:"b*pr0X-F'9OD=I>6igY8GpEMCe<)*8)IHoE<>k#eLe\dAh?a!O9+[N*cg4YYEBm25SXJD:J@I@q_M
%<"S?*iO$+<0c:9lImHCY:U*6rnUY5%*T`?>&2fKBB@J*C2HHbn\Y0YA*FZ/[_SfB$)&D5Z2D=%Cojp7uq\X.TJX=Opk@&PDp47/_
%j^9:ga=LI?&sOt#F2\Fn#8!2u4A>VtH4$h+@ZIKA_34)K;pTEI:!E:R0u@P_>34Epgsh(5"DD1EbC/l`oo3GEU2\GW"0RFc8_,]k
%OY*O*G<Hkq?i^jIW!FD:/bce:L+`u]QVl5"Ga<NV/QZdu@&*#s>^R4C*U<!*!ss_t9`+cH<Cc+I99ITZVO2Nnb_37tPAJa"",<f7
%;QhlZn&=ALK"`uBi-H'#*@r1U!rt\=2,"+lPZlU.W6R%c:X`,qqE8)WLL]&K'T:W-W`Y,9We-]Y<[h%"0b726$`Do4WcugkGBD2n
%]@oec(lZir=Lt7-o@lY^cpKKB>R1K6bYX#n*I2U*2<eg9QqZjl+U44BO7HMp-"ItBqa`-N<M_@-VGLiKiX%]mMSr&aZDh,gBPEr>
%-[FaoA_YTjW]]%0^>ra'+!XB?U3p.3.sIf<K8_>qFTV?2X;ig!(c/$B/11ru+KcnVH)+7\)[%XgMWP$GhZVPO>3Ab8BdEt`&Ns$_
%k9O&gV\B-k.RGO>oo2l-C'ck'n"Fno"'_ldo?9''Qr1&H-nN(`R$%!/hS=HEbR@=t;f9f5>FKOig@n3@TaaFM=(ns`W/BPb1i<Gr
%/BtseeN8BHpn"U*\!C"^1@8q;$A:4;0J%JS#13U-eg52SVt-4*f%;JKU*I6W.<&R8"*\W.>e%JDD-:)3W^8R`?-:()m+sFlM[Apr
%ScQe8#*nOKeJ0i4-L)k3"heU6;Mkluj;C$$_fRql%(2mOD$XaLR'R@hi^B:=0RS,r`-..)A#hT0P!$PF:oYlOA81<s1-A7)%!l@8
%\rk\n9SF1XGP(BF4([LR4H>`Z3%V=WoZMEgR@%Oo(QeBOUQ3UWfaZQai?1dcV4k3%@7JF>gD#m:Hsn:S4tf4,-l:LO$&9q=&2Prd
%P*5+_Sh,"U6UBsM!u`>lPapd4&flsP&5]fQFK%iFjH_MC;+W0)NWi\;h?];M1sJ>o/lriR-+MW/F)]IR84nXcrl6E<\m]?bT%ZHK
%n;5&i$6[PJRZMT#3ak)nL3YVFTjVNW-kTpD8jja3iOG65%Y?g/UFp`KBRC[[@`"@,/d)sQVq/,i;s/53U_Y0pM:)h]QnVA1O4b4e
%/^rDD/FAHqqu="sDEX.0a`ZP=!rNT%,(Nji>CO=X:IGNtE)D"E!"'ncMoMDXJ6HIn7>`=Is*jp6S`:;"nO;"T,)\V71E_@:eX%>+
%0fQT-Yq.>9:0lcB0_B-HJi"2I*-?LCM7+OOMXuh7;S]+rn7b<W:8:_g6a9@pj%T172+jQb4U+C^P[b_ogG=J*;VQ_?]CJk\'N?Ke
%hV%ne876h."6o5[L6r.p;\TH[V=m@MOVJlXoK&Z,3;;5sp3^A.&!+W42k20$3)HNsQNgXZ/6hH*FHRaP>Xjop;YI<1?2-@Jf/25A
%liB-)bPrb>oZZkO=P/4#*BoiE"Zk7^\N/DeGJC^M[_0WjYJ6sGH:C]Gk+lX2'@$,l8M%+!]fsf;:TEh:Y6dQo^$b9`=>_`]A*Ra9
%b77+IajJA1F!=d(O*![H?;mdOoXkp^A\rS^6E3U-maJi\fA!Ms+n0V4*HoA*nj9s/KIJef#c+u88b3>.*#8A+5<+uTp=Y!jh&T^)
%'#/#!Y+kP7e$:"#.1m^]p27;\CRbE3i'8+:S6=(l6D>j+0THBIc"nO0qI#1QL*N'tE+s[8_oceUG!R&Mmo8u$m*\iPn82L?WpAN%
%Okm:Yf?USFW46Jm$?5Jp%j6#F^7W2+]bm^j`^*6NSi+(U!M/QS!K+$hs('\pWj;RhkC&e,fVjiE_ontm1gL7&d,i%[BG%*R)I3ES
%OJYQV_<g"ti,PdB<Op'()gWo3AGQ2'P"rCgY[apgaWXW<YYq8m"$5"n%Du'oL%LPq'o!J>Zbi&G)pQo)37Vk!'ElV@&4gA1X%b`+
%KPTS_M9I9;#1s^c#a'>K;Iq?<gIi.+-C2_DCY4ITcj]R0hR^Lm82CK2b6Q'UbI0a`_(>5"cZQ"k.o6uH`ZB,#IQWK8,7ca?$Cr"$
%^]DIn1@TJ'dlTVKm:d4.A%NfIq((A]:Kpo&T=c8o!K`0R#H,B8Y"icJf+<=<#S".gg;MLL5;C)O?EPm&Ts6-Nl@YKK">1:>cu^.k
%'N&rp;&-[VHiN3$`W[ED[5S2KGZm^UbT@,eY!>ffn+iF?p3u'pA[m>IfX;M<(ER!A]p(5j(:GdJ9HIAO5LXa`-%eLdT4T\QIWC7\
%jS[`?B"*T4_hT!=F6b(1B$@seK=!Hj:O5ph6ZW^Jd50EjME&c#jIO]i8O/p=i)p&M_^=Q^jQ<Cs<I0>35C3m>1P]A(4[P*Yin%Ek
%,Ygq*KRV^'_F]bagInI+*%u"$/D=k2U@"DK%6dL-#hV3ak3qBtf.`Y3qD:I5M?NguP37efqDlctd:nCiX%^Gq`[N]P[]F6BFhO!R
%=-;nq@%RZb=.._Adja`f??Bo[P9CK?qt&m1O[I(:A[R<X68*Y9`9)[8%jj?=Vb#uBMmNI3;!&XuV+nC1:tq:(BC(W6)#UhHEZPE-
%_TttNj9$ZWUf49hN_Pi(d^T$l8jb\0kY8e*8lGQ#V,-9jWP6I#4WRSor$c^,2jqh%29$%$/>kZ>/ad+cb_q@%_IUO+UI$R]I5.K3
%!D(1-:01q^JO4\KKq@clp9Dp*I"?s>IB41ig#kuj2!CV^i]X#jXmYRui.`BbaJVsN+c><mO-RhW0P/'F!mYl3;s2m)83ZQp#_Du,
%!Cmh!\2+@I>,FkT^0XT-g"sF%+(8-N?0V!$5pM1qa5h#[#9_AN$9J9VKOVr)8.N<$^:rOo+c-+a6,n2Y%Yt,@Io<4m&fCmlHIT`'
%,a4V9?uF?&)k'pTKkUof$Fb)N%X4dK9/M*F]#c'QBgigGIQFl\s3kkuWmtL+DdD'a#'Z>Cm2;"Q(Qc@kShCh(eSmJ*WJBHrg_Hp!
%Fbn5Fr4RY`rl]$Oj(S7fG/4XN:oS`cZ57'c\M=-1*E`-c"+)n8B9W@;IfBnnGeQcb]$0u!USu"fLF%C)B2j4j']#<5:=%\BA[Yhk
%Z,<umd#K&iYS,=166VuXr-]*AZUu/tZIa(]r3as1\Q!ntFooA>Pj:6E`^92r-oOEcNr^-Nr69m"[Ss>o50d&jUo#_h=!A/%HhJ_@
%fiil-r]V:&QpR/s!o+[k\CfA2Dr?!P?Yr]3aaNnWkuip8&PoO433IDdY'ZK@G*FbG@kS?ZD_>/"=l,@m35Y;=_>XOC%(d61i"E2V
%BU1l9$Z:p>#M@0*,'Viu`*Pk#Cp`'X?EEQaXA#?k`6M$YQ;[YA]h1mZAI>eHe1EWP^_*#1IR*_S:0_9t&eR([W<QdpQi4c%7OKlL
%R\V@4A_&>?g>NTR$8hIr_/l08>LD\H78M!ml$SDhk<cC+[B2m!o@j&NFmJ^^:67@uS_'"b6s`APfQj.)kI>NQ4cBS^\p%l%9+b%H
%$+%nnEQ!*"0Lq7f'"3d$\dDkUQMFdB,_\.p8IfeImEh]@\*i\EA\e&?2&N\4`Lo^[f.NF[Tb0&6?F7.1*$LXqn1<-85etf&)9f'\
%pBXDR'Y&C_?P1(Z*d5K`DOn_3]"ZB;T0*T7rO$]BN,80lgZ2Ih*[=FOD\sN'O>\EP)a/D@%qdfs!:RqDcrb4(;(O>,2cKm$Qku7h
%H'/8p2]A?9;#m="6flWWCl'kYG`m`\OVtm<m8E2iPU(@-kN.?XfhMV`HGBVV:Q;SrHBBoChmZViLjp2A7qufQZrnFkHi\ITmqDgH
%(Xn,,(^a^UI[&p]3i>aLg,k>ALtia'XXSW/P[eP*T%j&E97Z2@XA>0Me2CpOK:0Y7oq]O9rGRTXh6._.X./aR:*tc>=$*rD*@P*4
%BIrNA:0^(_LUWU<#'CBVD!2FO:5kt1rH]08j"\\J2(se_>"H>dbSTXulJpm7;7L;dk_WV)gW=lNhFl7+FHn;LleEhq(aW=RAfHl)
%--On&77PRo7%-rT&k2.q-RQZ]i\p-[?!,3LDI@REM*',5Di@dbiX6M/VZ:PEHnr!>l2'%r/DM@`U@kTS!UGJJ`*VG;J-^A)e!DJb
%PgE>Y<oVS\CqHtff=L"R8.:;@jbmX<8W$D9MqKX'%UV92U0m@`$B;O!,:k2'Ep:1bl?\4G=OOGW[3SH;`,1=U)"]Eij:6&VagBo<
%rYBrFATL1NFiQ*CG.InY-+NbSKnN*tpQQQN#d`d/CPMM602%,tV3'!F(pMNg5'PSc['ZJ(S<Z?Y\I7.(!!b9$OM$UNS$KbMQB9lD
%TUbCm.oFCqdsPp\c9e\FFOC8d5;pJ)9Uoq$Z<N'MlBt$M]>C?=O\i`mM2PI@XQ>0SQ&)!B7``97]R@a,9'k`(/9duUicmV-``hj(
%r@Gp-2Sa$A-SJ,druhe@jHYk2B66;8VrMJOS.qO0isDWckt2q&B:e`*pN3E()U+A\\`]gnZ\T'OF6\&i0+R!q+n1!\JMjotn-jD\
%h=A+Qk,#,%oY'Um(h@o\-`80iL*a1N[4tIk,oVW:\]R-[0_!+g$2Y7IMXUQ9gZHI#DB!j;%J>f-R7ne>K5s;D:8nsBJBZ]\7r53Y
%bd2S_7)o6:b/lkX!"Ks=U30ab<a-a%T8h3*[KL[),&_9C=jYFb-jN^cCAUO-P2G'2ffNQ?lIt/MSQ0T8E'GgEd?+k"J?Y`REuVE<
%/$dAaLT+o9a"XE+,;Lq\mH0i>R#UU&r-QBB;C'YEot4]`;1j'3C+RpnM^N?R1D<[1%/ssGdJ37Cb'B&01dWuqM\$th,5tWkgBmB/
%lFf)&!m+IuL7Xfu!4W>Xj%^P>Ol9M@('/0l'/^'F>+%?)eV+M`nl[R@3h[O?f1h0=\H1q0Clu>f7@<d`H-T\GWugU2Yn(u\N)_6^
%Oc/pQG_lDi/_!&tc*CCZ"&(1BL__LiJFfD'>#f.a[%+\N;fC3I#F1!3r*^4aDo8)CGuF+da#:kD%:(d'J@&r<0hX_Zg][[AcE.;=
%'nT=e7"IpNB*9uN1H,>s^d@2p37FlMrF:ljfr2N8<D-quc/NoJ?_+^e0X`9ejE5[f9VH@)hs0*XD^.Ea!PVjmW>!"O.f)i)0SA_)
%^.emN=p!i"()h?(+;X(B/okKcaJ,#/\a(<QeAj-Y0*+=Eg,FQ5A8AC74'>)fXK!iISZ[[m:a=`rTHqO9E\55(Re;e$^a<:rejdh\
%:Kd$$XGq7rYT_L!lHYQU\P[A]gh2[Jq!3YE&N-On<@KPgJep9@Iaop5)"bfQ2ZK:0"!>IEFV8!NXtZOMVpk@3mnRDLJXU@j5XF.[
%^@^O`iCLC@]oA-Ek9tOYDpJ.++R+>Orlm)T6ok;+/n&X-gaUNcN4T3R7^uBmgCSQ9FW9@)Z#2qa.G/Kr4%26O\4=&MLqCU;[c7hu
%DaW;-i]2q/KKT(r*\hS#ga200e*[kA2TD<)hT!'(gf&OT-1Eq7[u5VDE0&BG2o#:i@5:&rq")8q4c"d:q85S22;hGG*o#_08D1ES
%o(L#@@X/aFr&]4%L3ps&^f.hs2O/6-Z")V8a6'oC?ilYY=LGi!b@.)gEEDJ\Q@O$rHX2qn9[:2$?re]#n)it*h:JUjeIZm)P!)DY
%,_nlF=Ia<jSW=)l;R[p=K7.uj40Ro7NpdpF-B*TAfg[PYVP/`>(<'hb@U,,AIY'G#TUQ49H*CmJ%d4Cd21'A4AH3MZOUgui\RFdd
%)P!&<Uo-rk!NJQI^$DY2bDN3%*_c@&qfqP'ptYS])r$SMp=PUHIp+pN:tZdE^1)`Uh?.5@KDK!-6JoE+.Ri"N$/(YXf;48,7k!*N
%)XIC5A<*XY>Po"]g6,NAZMcJ<]#3D4;0K<j0;$q0_5qJ"4UB[k-W#(N,F@IK,hHP@=etnb,hKkK?Z%E3Zch,B<;"T<Sr9-2e.rPq
%%''e<UZaJdc5TI3P_4b>]1E4IHb;f'dbg8WAa+&]l`\CGPTMBeNi&a<$*6A?MOrq+)^c#2P5e[MAp:!6:+5mm4cT)EU&"B7JcM.?
%4!/dqokpA#"qX:9b9=T<9&'#l+2&oN;j@9$\Kl#`l20t>B-)W&(h<1PJ6OefNMdF.:XD0`ZXlB%_Bl$A4nm)@bk[sEo!uE+]A"T[
%`];h)U>c4X24(8]HD*6^[%kll%6g!2UqA_Kc7h@>=VmVip1k[c.f+XoUGWr0WRRIJf@,LB@JR:l?P8D0jNdUQU=(28dBpHRU;?Kc
%b1mD+Z]!+>+fHM=AJP.rH>-5fU$Ip$+%M'>&jk2^3Zm_@UU?[t/K);(q=rNVFL>OsDcjd2YdjF#T#TO^e]4$C(HF&@c!dlja^R&T
%%?&2D@^/^I4gG%VVqlaMDSD=?p.a0!Hcs1DqD-Q/GtG.6B9Z]4Zt*@S2:Cr'=F:g4aCFbmFUAU$nP"7F61e>3K*oESQ#1Kl/*=BC
%^OH"QXZECtc.lNu.c9Q_e3TCre<9#EB/oK#Pc6LPG]Ou^YK<ut8mp#J+cX93W<$fnBbg\Zf_#HmQ3IuWBIXJU_`[5i'7R=&om2L(
%llEWAdBc/(XXG>P<s,$5#(*daR!lRPQ)g3%FNltR!e:*`^:'a.rA]k<;?m:+Ydq_Z27XVWj5PC%O63N^1$<@Mja:&]gof7u0_[J[
%*p$c$:7cEOeX2UH4GGDYgIfc%bUhO>PlJ!-9!c0\&([flq+W+EQTk^rrk;S%^!=dHBrs=c@H8_/q):VrDf)%0f=$U3@^f0(SITu.
%XHkYNfeGgNmb:IP1ZTO!SOKC^cuYN-A*m2D?'-#!m%=R7FqP'M)3'6TV5fUJR/'o%&5'1+%8Ff5<#_K;cnmh`[mrWNp[Ptgs0qpR
%pVR)@!F=f<Mlou`(+UOFOK%+gPB@n5RNP"NpEO[`pjJ]Bb/u$G.B5+>pj%3c&n;=VJ4es1BSIriop/=Ko]$K''@u(k]QCjW-Mb\r
%\<;VJ`e5m/P\<jd"/YT7bGLo+O<)mj*8T\%%j!:mB'Itu$-!UV'sD@%*DSfJC"-Pd>KAM`_\=JgfE]Hb$sQ4g7XNQ/`s,pWU1MQA
%!rn;A,a2.TBHqIXE%ur-Y#`&52UI:nM-E\"EO[br$IVKIp0@="aDh@_:>,UeUo(][,+e]oMtPMR_`>Kdm<D%MgpcZjH$bU3le^LY
%EO<dJ7'DWf%4?/LDNN9RM5AJ2^JrHh1OR&6+%;3S1?==$9(U;+qM.<&am2*8-^3cqdc"Re?Ttf_F$skLcR)-Ode+q8SVB]3^YB\(
%TapP/?[b#(B'jsAGjfa9%Ph]96JZW?Y;g=Kd;C$d$65YYVPRii44VP=RU.!#JTmkn`]\(d#qKeY^u<:N4kOj9R%rO#h5-0JP*`_`
%;2Nhe]@I%T00;G`H19'03U(2tEI."E8>e<[G's#KkdY9bTZDBFk=3^r`Cu/A3Bqso0'=Xro5[QG1\Ym8h7FVYE9c'B_K6Kaj%KE,
%W9XGQ'tm<t"[ME!mE8s=M[+>&^8A^%,3GpWK7kM6/d+tV\R)5^p!BLcQb%#`TSb)DK=@1\]1E3K`O)0ZRFPEdoWg^u9[cX$BUB:q
%#$!<WR;0-tfmFnST2%^jluSAs.7%ajC+^<k,GhO"B!l?\N\AA.8Z56HG1]oaBX?V*=KSnuj2V9i#0?&u@`[k`qd*Urqj"'`:XIVr
%k.Q?=?iqj)f*3"U9YRc_j\%LnN*#mg]H+8eAA#/bYC2/qq?%T'e!mQ,5Q#4s+2+`DV81pE?fPK^A7bkN,/MP;=>=VA,*juu?5$!4
%>_c4X-SeNB@^^iFmq7bgpGV*i0".LP\"]Wck^O<;nn="9EqP4TTs?84j*B488CQA-YthOi#ZPPm;:2C)Em$Q,.tea*me[1r;ZdE0
%??!BpKp_kTb9b7M>=[0@of4c[QRH+uX"B`d:K--6;3&uS!3>/%P0g]%c)qTbo!_XB<G>7nBs/r"mUP^",rA]22Ds#FWjAr\^d*bO
%H9L:YDsQ4s]^&!9-Mi$a`2Ej<no@iVcNAr<]*AYpk_[Ja?D)PG0>/"&c_OXrhA$$>`A]K(4Zd^X*R4@@X2GP9T_KCapsq52_gn^d
%eN-=6"eiqffYM5Yq)CP2*WfgU<PAL.MOs6nioWdM$ZWF$E"K+:f3koj?/'os+C#F&g^MSC2_SsPQA_0LP/]U^,fZ/%#Kj:8-f_Vg
%I-gBKIrG-55N,[EW40$?b3WQ*E_Se9"[/mhnneB@+<ibmG-)Yb7(/.J<XC#N[c,CY?Hg+lpc1Z]!u7q]&Q;Tk12dR/UK9T1Yo",?
%,$)O`!*7[!,Nr[mL"8.?G'4fD(`XrA%PZ7[h];s](8P.+S->sZdTOiuqoV=M<MpHQd!*9T/(E5(Ot4BB<kF0",nJ_Li#nX=hP[e:
%3Sp?a1'Yd]Y:/T=W.gG?*^IBL*`MS+D&@CkR:qEHqo)aW1=\1\Tnk/^j5IKk7\n`@/FhF_AGcKWQ0NbY,:H%M#YKnIPp5RAmp?Q6
%(^at6Gfc5D0o9KQ]ELf'"u1B]M*_)2hjs%iDOT'7NBdJC5e6&@6=n*Y\e.qs>DT50I^MQ9G1`?Zjj=26G@C1o,!17J!QSjl2@d-#
%Cj7%FdIrt,<28$",61Y_%)nU/JEK9[L$`%j*^,\d7[F%l$]&Y5*+7nS@bp#TMHLhNZg9YAQ<)C%F<h+OB3(a.mqed-Oa#$k4Ng3`
%3U]mf&5Vq[A,_Gg\o1UL3qEp?=C8QP3jei2^<,4=W#KW,[.U7HEZ7*iNOlOm1-*2s+@\++Zk)"SNP2Vk1b!Cp&W8[2S.rTNh>4:Q
%0u:-s&k<KCVf`hnHOB_)bnu4moF@sa.^:ZIYd"9hX34nT$:A[J+;te*/]WrU`&tYBWRXAgmZ&Vt)F?jsR3bR0>aQ48!hE#NWVk^O
%5_&XSUU&CHnbrh&NVnV`Pd`\cE51J0:ad_=EC,gs+`(:=e:^!q!DoJn])#'mbmd&#,OU<ZhQdAP3pL_cc3N!frB3KWbY\GMPO0ik
%G_3j6o;5Y&$^<F8^u`)3C9@ZcEWV1#1oFK-S,n@?[>.jf]FeTE<AfpnO;8qS+Gq[&Ir\M"oJ%au!p7n[f<e$'0p<V9694"Jif<]I
%*Z&[0JK=;hLS-j)4('A#4p&CL<P:>;(=[A6V''lKg53F#GX^!(A64$Y.]O8D*/4QDi9d)i.X0)u(arO"DW#Y$J3BHd9&8C,gc)[.
%mF``h<bCZV"L+,9JtNI'`qnJ]3eDQ@rlIFPen`6B:Si?d*3_t&'&.^E\g04V`N$(5aj$@bLqLgbc"o7m:1G6)"8uodE"NrB_4GE6
%d:($RE-bdj`F6&fR!1/\!taB33VNOcdX(tqAVr8A2+6'Kj9uK221ShdS(PbC>Q.'6G-'@=F<LQb['<f,OfApNjD]hLi&h4f.F6_#
%PCdWT!,`WIcr?r$?*an.PcYQkcjljK=kPL].N%*Q/qTdrjJ]-.E]q+*Q"^suN9W^>=eUWb]OA=H[HQUD1e-=_<(VE5*CCIc/sEs<
%5h<p]]G=,3&X5;W>P:eF\+3J34rY3,^t6`(3]kpV0T(bu7('ND[GoIaU-Y;p%knhs92.3ON\5Sg.;Z0S)Eh!;6(J2W@n<_T9Qj'?
%r+td1,Gme'$9G4K9_b>L=SQA.%h%[7((mAV]*1bqngJO5h*h+]HU:\5ZPFS@TW;9k#<]R0CJdS='5^4F?8bPpBlFFC<7YcQ+V;.!
%B>dbno7dBQ,9mE$B0c?NVAUL7(h@]jJSht5$(,J^;,L-V`$*$9mfBA'3a1KtNAauh7da!Pel:=:ZShD]%F*k-D1FnQdt7%O/N4@!
%[98^>m[Mk/^MM7+PLnk7]i<VIT\L\-C*QieiLaf"":cq.)N"T#YhKFV/+nX7#lDm25<%TiLK;f5@M(!7S@tI3'!Y['#a6rYLA/G(
%L?]l,kfWSpAOBTVrYTJDL->`#`6Cu<:ImF#!NZ?6=fr6W_j>/aNA6qA",s;^XO"4Vd$9ib1Oi>-<BLiGQlK4[c6&DT3XpMsSJirU
%)/qk07D"(C\Q34OMRIJ!Ud74spS.T(gH+X[obd,pfUGt#"riT[iO*k!o7trtG7Wi(STf)n0-Y<Dog:CF29m-qZ;H2CB6WAPh[Y0o
%0;@,nq@^jX4DprtS)skM(k16G1tPIgJ[Zu2)(<-U3#*O/TN@-%#AfU_F""pfS0J3HqSg^HiZp7`<QUt*f">MN%P5T/*]MSb7kOl9
%SS4#M?#i5`UT="T5n?Q3b\&jpK)m1nQ_5KkX?OMn(<#E.&ppX*KGiEU4]o>>7;M'L66iR.>M!8t7W:m8-fNN`<`>&#D8%?qr%_HQ
%\;4i[F!E+pH;^B_>B3b6%0Rjg7\#.V6p`Qt:Q6//gH2,O.1oJEP1J.%aoRkIIS$;!NWU&n*<Z^\S*OseH1OAYge;\=@H_d#\("9h
%d0-m)gW0JGI.Pb1<ZE*s(S_\g<kP%XV*)m=NT6]`0`Mar&;kamBJ"Q+dcA3]?9>/?,P,l"f_a]Zr[Gi>K.:@7Y&1P:"u+cXUR$7k
%PYL#Wp*\><-5pP7CXg.1'%ig&qZ.I!+Bfkk/S1F>LXAu'l;+)$aeJN'FlI*MMdJO&MA%":Ts8Ln8+'TK/q#D;Qi$Sj[M,l8Qa2ag
%oYgauNR\aj('[FrYa``&Gp2";=\1QK"N8aC-I,6Cn;CoA&[Y%G>o?$P!"l+CU;o5Q`8]_qhW/<kkdCG=3C?lTVI0`CCjS+4NS^0%
%)QO_X=:lI_ZU#@70bS2(%;J[C,qmfRrL+0)..+9DIhi@0"Ig9b'h6Ec[Vol(a$jCZdt1gHZ'soG"MBFE9LjTs6K64(@r>Sb5EWK#
%?'':m^]Ucs0To*O!\jn%ELf+]7L4ZLJHiFJe>lr_Ea@-u/=Nnlc5Oca%q%MmfA0UY]c$l7e.JkgR%r6]%#Db027_D3A%J5,ljnOq
%]@.BB0C#>57jSMS:dJ1)p?\4dkC-.h.fQYGq#?,@Kj)"gpqiEk&,cZ?E"b+83kqF./8)[`STRH$29Pe*WPD6UYN96Zm?V1Z[akb$
%jf_JhqQ3l:8Uk!^1MRN@Dp1W:LK51blXOAtT81,r)s74%JW<SX9X+t?2:O5t!R_TS2od/.X44lrA);9?m'CF*rL.!ilRb`fNA/l<
%C`,\>C^h'MNYVCkX[IU,dHf<thI_0=8Bfc5U-bpQ!.`<[*k>IfnVup'V\cc[C=AJ3od#WFV!Pnu6lA34280ZTPtCtJ9\L/5Ks,(g
%k'`\lYU*XB6Z\9L4+gpkY-5h-O;/m.MFflYG9OGd?-qAS62)aiXOE5mOL7A`c0e=^:@3_kJO%AT#<#4+e-$t63\g9oBqb1<OUrY7
%ROFg?$R<ghC2d#iMT3tV'4:Dj*T!0M]5NXE[Qtni%YmKs[($_d&CKJqN_ep(c;W0KO5ph?-%.jR<KD(p%(]472GK?[fht#5T#P&R
%_W9['%9ErAo'cYUiASCfl297f\u:"d1O['Jf"!B,[<?;5WtqT,3ScMH-[JNFL]CCtRX=colZ4".JG=(N!Y.K)aV-M49\KcTR\2mJ
%>8CecjZ^,tA%>0+?eV:nBlN^:Ls6G3fg)FuJJbH#5)@]b"\3'-K_A-LXj'Qc/@bJ-@fk,9k`lo?!ZZ/s.$j5hC.<$'56n+2TRP_1
%4\8$pJ1aJ8g&ccL>F)].eBj2#5qIiL(brQ#2B(<ED#;cLhT[Zb1DD9I\qe+ferCN'KlSQ'P^4pZ=4`!l,(Rf6VW#R#-A.\[lSDAV
%D/\A]/X#bNg/gblUYB(1JpV/^=q?N^MitJ5+O2Oa'r5BkO(I'!pg.R(Um9k]GuPR`/0R8fMA8b:FL+<T$@<.m'7\M4ZrsN]'0!oh
%,*/W3\$k5u-[u-':,46-3=&YVWM\-;iRNp\f.ls'j.V*=Xiq9Ye7W;L\d6>0a/?h3A66]co<ta/"!ePs-B3kJ%05>aA.e)TTf]_W
%H:ICDR<lGr4!;n0("&d(1=:1H12OCEdluWUa_,FeY?U;p;Cl1MFo/.nZ#:m%;G"NgMr,Vdq\B]ijMP(_d1l51H@V(S^@+-Gi(+WO
%#W^:Z4AkUMq`I9:mVob/aCh*%YN6GhE$tWMb;("AMJN,DE>][cLOGWk'&4%mqq-gi7rUa\Qt&2g9;g!(jMMBJ"&d5:\=0&m/P!q/
%)7BXS5goG2=_h4?)Fa&if4sXXs%hbf),>f`BP?7tPMUAX!phL&SCg9+P74gtgC1d*<W/@HXB[IjEKBD):q)`Y)E!NAc[m&NZikT/
%_3=/e;Co9n1XXDa't#^<HC\9<Qp#-'9=MBA&X`]Nqe*Udh!nCAhA5En]3Q\AEn*9Vr&Ei$.05@^q)RpN@?o!dT0:<6j=7Ac>Q[d_
%p[2]iIL1c'7E5:eZ#@0fTf9adc$`<2k3()c8fh(h*A%%,9^ZfUB^s_MbjaN;\JiSu#\HSAS4gMP=QZ#ME-g]qk^=?e&1C_6\OcX7
%@cC(TUWn4G9SrjrT[0XmG]*+@lX/g%jZr*'j5UotAqZ!ncD(&&7`^Fi)]D(d`\`"!RT6<@\I7rdITUqSh.[qd=jL/6\q,$IT-*p6
%guEp7SJ:=KdRXUg[&gJJg:jE\47#CMh60rN(>f_',T]%`[aH1Wk]oduHUjV:3<[/dO'*<b4B/(?c%\@9\D);s"%O=)aeR,0>ao]H
%'WO\`mi][3#U5QJb?OSc:3n<GD7)V!f4%N"Ee*51i5G2G[h2Jc]%>M%o$@c1gH@@uGb;ii)>#&@NmetF(dS4%<fB"DQpf[\C=^X&
%"`srEa%,_t2l@a[pMn-g,<BAKLd$P]^]8a9cY6)@>YTcuKG8P.efOJ4g%!b"-[LkOOs>G.`U<.o7^f,!#qg!HVpd<,Li-L2N4:]+
%WNA=*nkXJ6+%S;:&EUS3hRO^"l6e`fPn](qodu$Ek]E@ES48moVlfbGn,']M>B,X[#hC_Th]q__NSZ#VGC$)C"4WUC)*2JSGi/n]
%+Z5hMO4crF)N<dX=LKG!Js_a.`&(`]TeBs(-+)l-h+CGl8Ij)61Q;ZgbDaNNAgXj]VLU2_Xus%6(lKH,EoEK!4>_sYk9eG0mq=b.
%o;!qVF&p"rX:DHj9BH<AB$foic[F\;b6=bCP8(ZmGd:;0b%Pseqnfi0a$WWAmmLen3X./;bKk-NDP]-Y*[K^N6Tf.;=S8QAXD]!<
%\#6"KWR/;m*<]V]B5to-#6b1G4A?s,/7M5*Y@loCU6T1e%/8\W5!S[.q5Ts#T=frC&<b8QiHue3A]A,E%[GjiJ?VlE7=h/%*!E5T
%$J2*aVCaW7UKV3]jYS,jP56tKs$]$c\k!k;%N;!P>"7_F8mfG/Vi*Ceqi-PiU:ZOa#U;.:d*I:/0k?%M:P*])0gl]h(FED7_k<bS
%eU67>VP,\9eh=;?YE:ke6M"S>RjAWs_<7W?rqb@TdltqeiL-6]+7e1p^km.:QWpV7AIM@dMWhnmP<:+u-PBW6-[rfmhTrI]g@poI
%iorbRd?`M[6G/Cd>7c565R'h89%+7&mi&L?pl_DZXINVQ[.Q07KDN&gHZ>3q,ln`"A^jF*EBi0*8/0ZikoF__Gun8&p*Y]6dK'@n
%^7Li;/T,m(nsEsKCmg".>S&-@pgfu$jabaBLNUj.CZ]SSaCZm,=Y)Y\Lrn,rnQRefO4nQFX'$ts1PWOF=5t3F2g;Z2(MI53Kp+$$
%7#hfu^rr9bSjR6sQGl19;GWd$+.bT8dB`l@*8L2)eX64gYUCppP0[8h=IQL_G_RPkNg]uSFB4o0q>4mIY38GD+-S9NlAB/h)R1+X
%5&A'N(!MiM'pS:B*i:F`E2S3'45T(GX1^9uT#R!?837+YbWP/k6%XeHOcN5oO*)1Z@<R&>*bmG-_*pI1EF)3o>(a.!f"s$D<,B1>
%WS12S2%Pr]->Xgu4i]GsH;^gr]6$HTL*nUi3tTuOs"EXo7!BQjT?C36@eHrF>(1#^HfU6753]EjHCV@Bm_Tq]0$W1AemH;r*RT0U
%,j#B<Ca;ImP1<K3<q0'*.,i#03&J2(bJjJEY,bR"m[1Ok:7C/2CDSQ/YY0U`,%<L1.CnB@U9QMNAf7IuoHiP>>Cide16"n:fX?S6
%;sS#=qj!g4NYEgQ/Q;e3Y#,Q:d:-0eL7MGsU=^DS8!epr>N3]20WtfQ,0rGEkj[C&W2&.+,=HVLl1IR_3^DDr#?*3W.JX\\R^[Y'
%"%!AW<aW2R=0;Ep`i"?WF"rAt1Q%ElMU`*)B11iqg*<se`(UA(l+srq`H\/(>)gKZ',`_rh0@@+1:RI9/Z+Ano\1fkV97$KfsANR
%e`pAoc^u*B8+LCCZm[Q1ahN5#iRQO`DeBN_DI#p7bElL.qtRn+aW^)`S2SB8f9=ClkCR0!H`nj;\FYm;&9hGZ)rn)ZC*VMZ<B8')
%QW4uNcZQXJrSe4^<jSO(p9o4PU(;%Iit*g5O\S'Cs&4buW[43&-Y4cF5GM+/6=pjV[b@MV-',=o#*k3@-\h1BTrL`V^0c%2-@6A.
%X\"k(T3hK[oU[6/\0ZF[5GE5@%!S'^D@.=;m\ha#rgkH;E3K\@:?E^/%R&2PngFMG;o0suX._p\8LdcM@0>T'dk7-ISa-a^9S`pW
%?M\,`kA0I#1K]i=E=1K10@EEb:`<`aKnaD\SpaSh=c=ePIsNkG@6AmPp;'\\$F9'C3jGDQ&s8PgUmYjkdO6ek]?EoYLNu?r_9M8p
%ll2u6c"IRq1KVFK=QF[t1'UqSKMM^q@UZE`.BJ%TTS_X:Gc@d4,P7'm2&_=Zh0EYP_ZNnnLa<j,"-Q;n&4\h*MBXh$RVuZ4a[B!g
%Loomk-q"7qf@i?4.'4_Mdu-_nbSdBu]ef`G2V.gBX7/5?'5$q(UOqcn7R(3%Z3m=Q74DkkiWT]TNNon<0K`\IOgnfPjqdpb1(i<]
%aZ$@MNnPXJdV0@sQs%e40^rQemM9n*<5=IZ1!`5SE!UVASlqujWUb]EKY,Ap>1ibCk33^^_d/t8"@_KUG&+XkK<B^T%baWX`[L+m
%H;JK_.ohia3NK5.<gBik[Y[:b=4sT5R_T:T0"P2EOMX].aQl-+7+uN(JQ58jq!:?(kR&Ui'/&o$e;#^r`TK_.6,E@Jq`Y^gc("@q
%"bRPa;Y4SGj27QqGgfFc#q:gIjtBKtKhsM5*IJq2%01tJ>l7kol<e7<j^CS\cisG,%o#M,XbBiNSJ!'.CP:9ch%P4qGgiLtf:+4d
%+\l#@c6t%VChqY)JgJ$BK+#l0&5>]QP=D;*_S`VD@LsVrFk7bI!b;m7YO6uA.9*mjgL.GKn?UMkJ$P^EU*FH6Q]9Ac+R8f^m.GiV
%'g5+gFcFK3mg^\>L;_c^%mT=M:JBfd-:[el&Z&us4T&)_af(t]D%D"\8NM>D,![l1_ikZ'lnL"?APnk4H/c;#J^VEZCs[?9].:bW
%A=)@o2iTS%A+IBtClLDMjX,]I"aqZldG5?g>+h<>r@KIQ.BZUn#am%H_%E)M4?TMN686X)1lde`2:GNc4Tgq+:hVeA#>dfc3.dF7
%o(EMZIA+Fo'lrjZAO=/a#X-A5'_QNaaFTVO(MjcfYcM&+dCW_H?7';&MnUcOYELm>p0-9E55dVf2N!nW.OE3,!V5@sM3V/\ZM;^E
%V:=7K,Go+W=kocnEu>7r][1R(+=%cSV%S62B6[#79`5HA]#Z[d-peVH6oRNca.X:=T5$5LjDblp3@Y7X&31NFdWI5bS&B(OSL=gc
%H3Ao;f&s$VHoT7Feid4aX(7O@R8Vi"pLfa;6UTD:=tDLg6DRM<O@;8,G!d8/'j-RYPq]%#QXsZSp`'39AQChT5mHcoZ%_M$R;*LX
%,)aUk>\elM^>"igY]b04h.:EN5;TtASgn91gi7I,1nSiUab%\2,aGHWS]:aqrQQQIp&`7tGgq6;?iTEO?iT5;r:'/>r;!8*qqXL9
%maFE!m6CR_b:inh_gbd3iEsUobPJ",_$qL4=,ral3USR#43(^F0E8Z`?bcO1hnT*Wp\%tooAt2rpeOZ^h*6>a]3kD9r8NFXHY3_F
%V&Q'5e2;WpIJ,".]'"Qn?JH:Wi.dB4d**596l-7Ir_X"'WWMAq1K2;(K->#1V4Ql'8?<kQ1[LYZ)n;UO"Uh<W]%<)lWhgh"&[b9"
%`&UuLJ_%(UK1<!:?kFCVp(fJNdX2D6RN\+>69W1roi6bZ5fo&_WQO4SMYbf]NZPW=6;bg#7?e@V0ZAE?:1P0u#L:OZ7dk2[UI0ma
%/;\+0Ys8=l:O/!T-S,*+#W&:]DR79m/k!7%MQ2KJ!76F&:[[XEcUEIe<Ts^WeEh/I]sIqa-._pfBPms0U.>rp)d5np-Ep:P7m-#P
%X/su?8O_9P(K_\Qm[dfu>9<Z@$!:kAC5IfRK"[h_EJ>,c<H^,`rkgG5)r0M"Gp#S[<s.>Sc74m'Ndt9nCnVU>Tsp#;!_oVO_(KZE
%kFtP+UIW'8`U+\)LQ3&d4ei+7rBbfTWgW*;H:CQ^:5fh\Y2nS'Ftm4mj9DkoQClBC*APs$,V?#7`$q>+V.Xr)NBNgo;KU_+SF:in
%8uT=:V0eaiMF`X*r5-SR`\p9E>-&O*OhaG6R<=2j1FU+X,mR64:<G]J;?8f(<M83=&d,(4WeHgVM2#b9A>;8$+*%o(LC%71Rs?<4
%'r+4DJ>ce8m_>%PaW"3Y.Q+#CbFOrUVM.IG_>?EZ<ni^o+PDi8T(0V&DRZ/GMQgO6lOWCQ()ZGo?l+"DUSO3Ll1lVH;2%Oa:1!Z3
%#RpiX7ql.o2uAWg*H`CCQrt'-H`S-23X!R4T'Bkt&;c?CZPuk5S:QL#$/28HmaP=="]jVhKLBW2^Q<A#,/.)4[i\o9V9NkD'W'E-
%dR`=cnVV12b?Em,+%7BYV(Rb\o_]_*A>H0>o4t3KcA'n>"GR`=G$X$CF-a/6'=L#RRu993d-lk+S[lft.4';2BqM;4p;)bs;",>0
%5^0^bo<<@a/+FI;+fdJuIT"M(>f4OoDBt7E>W96q;lBCU&ktF'06HnqK/&IAeW>S'LTU5bH6AS=,@\D?>jukGj"(/E@B.BsDRfI^
%]6*aU1!@Yo/c[)YSRIf5m`sYJeKS<\it:J_76,=bTb7Y]=KL_A-XR,rJblRS?f?k6/ig/;l`^afG!Z8Q=AMV-BnSXgYbR`:1<qGL
%:^^i@+coI(S,)#^'0^V.GZ2>n<H\l]MJ&Pq.h.SA0AC#ue3\YPT3L&.?g<9ih+7*VSCMR%IsqVs7]B7//r?hX5Ydh?/2WS$T'FXa
%']4!oC/;DE`'T/L*'Akug553$:j6FloH7j)91^%q8T]ZV-k'"WEbNBn:EsE0;OEut*2+#o@M)hQjBG#:qT68gcM43".LqD+ApI'U
%5A.Y4&!,^+5)g/lH;hO%q<!@$o.=*)E?a:sSmu$R>aT_FGu.X;i7Kg<3h=@:;7fuoaGhBU#"!$&2]D=n>n>VpOcV7cFLGX"D%Yt1
%.4[I2#a9g?/'50M'>uJqV]?fkY39#BE%Z1hJ_lj0mELkJ&Ef.1ThX!YOh<2n/a`djiWq\:"f0B$MVP:*=&8D=I1bFoi@V>@P\/:U
%A,/p_2HVGqNA,l`+IB.F+YFt'R33\Y%5n5S4&!4>$"hs_d[/(R=Np9Qf2=`mRW"/*:bBpF9&Q#/i'^.s'^JHZ7YaEjk)R$_G#eT#
%58>$"HPTS<5X\M%RD:-8Ibu7XF"Dp1=W`]SVm!%hI*'pG-OqiY`WJc'*/M8]mc"M`Et`nN?@i5;V3h>i7(slG\T-+:\;bglTq%c<
%4OE[(R'BCg:/o<QdL;QX/"m.Z1)WuM5d(Z6=HdB?30>=$2(=%UU'tfOFk"kiMP(QSb]Q[J`GpWFQn0V]Qsh4\Taa:1(k(_++_]>>
%mg?`ULW$D;b<d#k-s(oH<FsQ?`"_cO5*Bdme0lfU&1G+?5^R9H`#Ul\nOs4Q[%3JaG"R]k[Z4=A^%ENAXUF55bmX/hHD$-Y^tCuk
%1i+//R9T&Lf@(:p'Ec^qL;Mu:QLbHXBCsp^C)lnE'RiMTYBP34LG/BeUP=D,:E?L"_06$>kDntBdo,+R*8DhBW;e1n;:8K+P?3$s
%qRJC6ij98QrU\mlf#4(Zp9Ge7BF\%sRiT14k6E@M_S0G0Lg=XFR)\dh6CV[?SOJ7UeDen1k<el+SYWfUI'@)k4VNUHN6jtEL!ZMh
%R5U"E08!'!Y&=&VC$R<kYHtI;l!U(.H3";jA6%glL@jk:JTUOIa.$uQXQ-1nIIp@/KcAjP1eXa.(fFCV/62KZ&F\5k5iMH\%K6JY
%^h"s-c/4GPi'@=qF45$@+ik5LGBPh7_-8X2f+(s1oPiRAb^tCI(!qP>F,]"Lr#G(I$hsR>-_I@K[#oQ/aMBo76o^&\MWc0*#9&<Q
%brC=3blS`EB@=s-k6_u86S?&odKsW*`9S:*F<b`#mF-i?pQrYp-Zd5H%tF-HJ,8V`nbh9opHR8[J+^;NoQPfbh_'t"8Xf$_]BVJ$
%eqi?@V>Ve=1g<]`hoOL9fE-6gWYQML]"2@Q"OuoES4d2O.t[M?b*cdkh'AZ$3_Yh1kh!O"_5o#O+RB/C!]Wi?p7M$!6?@:O!&!iP
%<F9sr']@/*Pg1_u@^/NFBl)UJ8^o,1U#?aLOm>/T1lGV0k]^I)^V4TuEm7^9GURplB$(C1mKe7R7nr]JL8%f`osU]^n)GgeR\+mQ
%6[sg$.(q3eXhQ3dFTdiL$4sH^h$,O)GS6::jeTX<2I;-PmGT*b+Jssc.]j7#U"l4gY9d2rX!dA)lFC=B%F2l!8HR<l@U9rs'b?PY
%25P4oFe+Af\D7QL"Q$.Hn9^((a8LP\4Eo)J=$K"8+KRBC^=GhS)\d[f*>ckF><'23.ajV$Clf[o#U>LIk\/iQ_#qCo>,n<,aG9"e
%>!a%1bnJTE0-[cD_n^GA`UgGFDq,HlXj)IGa%'&U#:m%M]%MnPda$,tSY^AX7,;%D=AP0g;.k74"#O&a`ocsLhG6H1grSV!m&!bV
%TT+4jCb.A!!(%n/D/he2U"4t6Bk:mr)nt]%NK?e5$@=2PV$=lr'mpT*`5-_q*gD_WGCp[X=^$QEoT2(b!#Im?RR?Yi:!72tm]C]!
%kZpF)X'0YbRPhs`g;iF"0f%r;'-g&?.[I7]nC/)/O4!m&'bZE3#ETECn1_K*F#SGO2i()mFA+osf3n+[Lu_LLlf>9@Q>fjsW[r3Y
%p(?LcoL4c[JOp-tJ1bLFFJbW0ja4!?%.q!q8#nB)Z`m0Ck_O)Cm3ui_\n[N>]-[j7FaB.d;f-(LGNu<^ZLG[7&r[L4iO,S';VL+R
%V+GO(Uh#(nE0AlOnbd]!0rLA'J.AYu[]h3D+3e"7,m;i5jpo>X`*Z?r*=")]1[ke"]Is[X:=`qpNG\5=TC#XT6<J![%bD'V_ai-:
%JbRBBjr,@Ie(^D;Bp*_ODiZc>*mpkQHM&pM<r]8A6.)4f($e<tH/&+c;0V>G8J%Qc?5/IH5_%'@TAL4;>S34`@!EUF-[%G<WgtTi
%Wp#jh6^^=rJK)T*gnFM?n/^aiqVHI%$@lo_P73.DcVmSJ,P.\dig9u)9b6LRGdU7!<":O)<Mn'i<+NjVa#>EtL,>*-R9bS_LEu`_
%I*&E>1ho7D49c.=R"^N>gBf.]RpfRJplF*a6>XcNgf?L?/L($KWQ?JHo,PulrafG2)T:5c'OTIk[kZl;n%Q\m+[h+7W9kUiEr]I=
%:,P//`h)b$/n8;O,)p8-;YtMLW_l=ghW-!f^>oR/GNg>k6:r__Be=M0IuZ.;AR<)jmuYXfKHU@<N@uc!KrB:+Q@g4Q_+^g&V'a\N
%TTpVg;k?]Ul^74\:PZOFU"4NW_`cM(&,#'(3qf72DA]8!gmt:CkXNM<l=ko+K8M'=r9u>2''24EHaST$U%LgN,j%4";+]>N%o)#=
%6Ph>#gtlN+6c0*li?<Us-gRmVTENpfi+"&1&\9)/Yk+"LOW8Ddg=4fVQ45]1m>n@W(pJ$_OI@`WTKZ?ZXV+3KjW4=U2\89Ec.X,Q
%?Ufhm@"";<pYQ3O0a,1K`/j_MK34?)08PaX>1WA*"(XV_-b!g7UI!u>#1Q\Y*`(HcoCZ%1W'up/a%_OIUPUBDDQp:#lk0qZH]r^d
%a4U`)*fPi+fim[o*5(]!=_D/\@gE586FLM@P?_<=+(\e"R5'h[HtMldE@fPHF`_:h*>r.l/@8o.Y*(0cm#4tS'J]&'=CtHg*-%N_
%HY-EFTem?7,frF(gd<CfL%I`ji4sO2Q91CSSU.VKT`?6/6T",USC'L=,nU'ISZ&M32U/b\32Heq%1M)\lF*g8@+[TiGkdRWM?iHq
%\Zt"(8\o3@q,#PS,tF"qpd8=/+lKV6"Gd0E^$V7E4`m?i(@Hnp<[@4:\"bmpRp._8OP<uKZoUO[dmKX9P!XOWlWn;NU6"!gEN74@
%.UQ]j>jR?Tnfn>95Z;k:fIu;J]`F8*b@nAB34u[WQ)$>`7_=,[GjZb_(F0J3:AKrRiP2k-iUE[i&Y/p5WHpb,mp8U1RW"]rOCV]t
%lD,)k[M8A@k3*>N!LrCO/El<9TeisZ>T]Va*u4&\Z').<_*=+Yan"1I7im[WBIuQ/T%cC[COprE$boOrs4\-U?Lq-XqUCD3&YP^o
%FA&aPQP4_sPr<#L-dJjF(#lq'4njc<h;1nDO0oZK4d#a2%,n/p+N?#e[.WsJigsHY)49hg@k">"6%2F>:oTd#RT9)H8,7<YI(9L[
%[$tBmcNY$+:EL)[96DaB_*=oZ^8LD%TQea_#j`LEXY/Ug]t^O>MbJq5I3a6J[M?n(WLpIKfMp.*%m>`%=TcG%;RV$8[N(jpL=HLL
%-`slL&e2&)nOp&<UnII.d\e>9G`8b#[oq^G,:7]?!f(9VH)jko%sa<6F`FpH-i5hbQWEjkPZc*^FaEZb,N(c`%7fjC?(8-VbS@I5
%Xc4`h]9q<e@P5j_.^`9C$[pS`MGa!Xr6D!3W+`MlI1KQ9pFr*Ynm8&tQs?Ele[jW=Gcph!Hej=2n.s`l0T"/Hd)_>Us/_-CWV&)d
%e*9?<dGrf#lO*U1<NN05"RB1/bFCMRZKlhk*j&jVYOY*mgVp=37>R>=d!8NbR2nF8$!/\eRH]9APKAu3b$I5OR.uTGC_[?1k\dYn
%"iP78(`UoG-=0CAO'';GaE'<\bgj[W"=DcZkX<7B5;OTD%o9n)j#"`'V/`8]Gr\X$HH(KA-%9YO1u<bU;sCXQ<8\eR,BQF!0c&%S
%T]MjJ9'tm1gQL2O!P^N#5E:l@B&VbCiG]`b.lu7^!_2_1\!PqOE0$iuBGq-&Ak0p1SquRdU*j<W>ju1tg"oC4%RpJH\%[]IW!SkL
%okj!ff)i_SbZZ`/EZZ$!`V_1GB.FQ*=DD[KL*--+5Q_fPAUcfK[,*sr+?7m.$1MTtMl'=N!0.+rS;g(4s#*$RctHR<.6np>A()Zb
%_dhJ=%'AE=,<Q-*ZihRWh=//06qj^k/M-A3:N^k_gq\Ai7:OjI]:M9KP5=$=mn'3"GnU9!F[X'[C_XH=bGhb>H;J,KK,-QUUk4Yc
%JC^,3J6s4-\1b+*&A-YL4dC\%LZruulSAPX$_-A`gQH^Gk%s(]V9uY(!m_.E+/F/HqMGK.HO1jr3Q"flB[e.O&pr<fY".C=4'"G-
%88mjI@$sEJ6j%,s"(U:$nGCDKQo57#Z?IV]n8]!J)B/njTrEH_X+D`h#F<6`g_7Y`KUuo%l2qP%6-iM^Lk42R?!2u"@1Z^ArR>o@
%aFeKAN0p(n6;k-O6]k8>cBJr-At"(KE6ZSMCc&O0<02a/mRH`FOsr`\>T*Y?]X.3\25Z:HSX\93E551*:L-t@)!\*RP(9QQie1J0
%k!X+oB1+0J)M)je+P4\@on@8/LEY@b'<<l/)T:GO'')&KA.DuVl:&qY_nY]bS%"9]^7^YkL^b"&+s`-j88$,*K]@-b)HjtEUtu?]
%%M=>k[uK=E;C#^]Sg]=<X,,/mg?V5pkF+Xa=a><9aPX?,IY-=eY@%.;2T&nh,]`O40\!"??2bM9<c<:m3g%UP#uEOmAddtp'.;mY
%#&hQ,N]$:=WC'D.HL;]fgc*Ng]>*_3o7FW![@"(=&BQAV;_-R`#`_qPg!+>C4nVCF]]s_^dU6.3WZ)-'DR0:0hJf"p,o1h7D2[qS
%$JV#00!WL36Wfo__AF6</#h?PY\m@,[DH'u$N1Qj@`\[o_\q9lQQ;NI%pT,bs1ulo$fN'Tg`>aogUf7d2s9q7orkS79fRCl@;qO1
%70CHM>HLpV\I^JBQ!RLL":<7^3^TWNQ;EI6L;Y^t!?6HQ_3[2#^)6M5(/+j:>*&(gQPNLEctR[M`1L'@7][Uu//W2cT^kS@(h`J$
%Ch&f\Nt/AT_]g"^)efNR]4gCs<('t=i''i]l']?&',=884rN-C,I(?Y&&chmrtGMphW)Y*D)=0e2<BlXQL[lYdV$qQ\(5BqEk#l`
%b<>1"+mrUGNH)K%)iM"Oq>HqViTSjsfua+kdL*>/%%_i7?+>ZZXMLF94nS4pgF(_HJ9\E>9A*#J/ae-Biopp=#6=tpl:RRZ/^Upm
%e*(A!qT"?IkX6uSM3WXAkj?@^H#%?HBjr"EW^d1&<q>c:d,BdDU(Z]0TYk\a*<+oAlg/!HgcQP9cL%s;+)Ts+R`%?"g;.8G9PHO/
%`qiu6eKo.2[ci!,TLHmu-hDSPh6JSN!4\%`\":4)S)8YMc\/__eSHlMbqWVEl+Lar%*;k^73A[EqT+E8CW,B'\+L45UpY[0QUSiO
%L,_sfeoE0hDCjN@j`&oJQfEek?g_+/NH+.@Dli4u$1p4Lme)3'[5I3Xp_TbumdZ:f>1),WlW1e4iA65.=^u8/T[">cm5e/nYp1q6
%JIppVI%[H5rOP>M.g6SsI:kg%q[i>H:5mh-;6U1I*K9k`dkEp;0``j<q=3t(G$KE9U-#Wlq\NulMChL5!qU3;a*j[UEb&NYZ^,Ws
%o[2TQ2PNQt/HZ+#JhEcZ^nt*5(+p"L!hKoXJbkAiI;BZp1`FeH)@&eCX+QaU)+8l`0\fVdY-H3m#fn6G5"i^g@NpU;g97h-$tZV7
%0R@]fHgH#GG+'#,6_CIi8*?5u_[\>6?P3dLHT;8j%p2:n6935j52GI?_S@<8AHqj:EqMR=mAAB\)B`3c2^-9Jpsf:QP9Z#t@#sa)
%Wg\K)f8e)tfo^R2p7OMX$auokUN"k'3eTfaEE"("71K=2>k;gRWlb#Q8nY."(^4sG5N$VIR4Fb`K`O\filu(k5Ja't\)f-e>h3F(
%@PW"ES,8Gt)[f8O?M7qa-+$Y4m9'`g\"r>[4)@OteO8_71cpa*_)f3;bmH4\:(,,\[\2@65/Q:q'Nm4SC[305<<;%0+_B(0qUI4X
%1/,>DTlJYfld;X1J2:%R;HKq=+utYn"T+SB*cNYFkh%M!8e>tl`t)h8C7.2eJ1es.-qV&d@X=4G%QNU4[;PQo+k,:UmoO_,mH].E
%Do1EbXA]4ON/q/aS-\,5\u/A1DZLlWH2d>U&9;#glNQ8a^N*We`?'F8K[b+e1F/k-d!KT!Ju+/CERSR[OE8W$^=`DR_"JFWY!E$N
%HD(eeq1\J6c9%RLB+sYtLHNuC/R:19;OhkGc'k^d@TUkk#[e>:Fq,6`(8^M[*uN1We(pi3pT5Q,0`mf]ERa$a7BF-6W1kd@\d[m>
%L(T;c=8$:AH<1\'<laHbhOfq=S!C.$9QYB+_ENiPV&--#8/VT5]:[>t%I(5BZ>o9II@(`$f&"ZHF9C,48X7kmS*?7qU/di1D"2R`
%HM7b.!*VJ]*r-j$(#'c=!6A,8$^d,m&bP*CgdhidfbDiL\]gIprLK8NJLud3q8_(_3JeUG)OAH$4/5kihpB%kZ4V^JRRdI)).kp/
%CS[<lF>e;][?D!ScT#*,e)JF$"#$PEf_0AnC5lmam/a;+>6?]`9`T$6?,g=\E,HT_0mNqdm7g(Orq0TV=BnM8DDj<P/JsuE0=(6s
%oF$bb+\t$L`gcF__/.?djc)\Mn8.'<%*m6_nC0CJHWYMad:jod"IhhnZ?Q@`BQfqZhUac"krsX`ahH;+h3)(B$JkSJcfomY=5ZC^
%*$C5%cLe;&aI]fOA1_PXC$#Ch5l7Yqh5=]KN(2\PfP59!028hLI'^;t_MSGY%WCsS0uFiDN>$)m\+oHKB+LF-ekLC;D,Md2FU)7o
%bSN6T,e@.[L1P87PIUl*)=T6_2^a1XQ"9oArXL+qmc:iQbLF4tE%3l-^7bPrmO2Lj_+JW0>#6<XH?HsldJCaJC*$k.`eQe/!LejN
%!'n_N^=CdQ9`k;^a"[Urr$01`LNAE5@*,a;@>3c6\s6i2]?QjtLngDQK(OR2on0NUPR^8HTt(O?Y:)2mO[cXJA'l[pfq32akFnHa
%O.uH27<DXI5U.Zn.FI(c,0pB&HegFtm<";s<0]"D[qEZVo:&55W.]ET#[=Ki*n'sWHM8hnd@kLMkI),m`o?gDbheq<i6*Q6FPDek
%jM\he=#u_a@6O1*f@$DZ(/&[^k0Zo\9?&C.A3_578die'UrcH1_Ftt^UY'M,=b(Ng,G%U<c9`"f4^Hs,5O<H9I6K;CcH!F5G'g5u
%G(?cfaSs8U-4HL0k8V=Rq^$J,qZB-0clEYT`AX\l_[\R*D'^QtP/,0<b!B($3J0Pfe'0<5h9Jd.hQEd:h3AM*.+]<goLDVbE,q(:
%q"9S/L$0V-V"OZATD]ktS0->un=_W/?nYjC\iKNO`M[oB]n]qBpWkSk:Cm>bF3p`_Hi;Rr[qPg>+bgMWp#5rHJ&@'Ap1N\5s7;r>
%q$[*bs7N!+/:uStl&BG\\?@Ft4,3a]f>1d$J.W<l.+u5=OI4!/B$ih_K_(8`gAe\I0)7*jSR]T-[K3n3=fjS>f2If9$#h*?;ir,;
%%Y0dP)21D$_sg]j5FH#r!A*d$N?pd\NHgP6HL"lZ5B40_TgQf`;J!C<AHIC$kL^\jl9Qo&!VmRPHB\rYP20Km<DNg.#9_J/\%Fd,
%.3*g&\2eRKQrB]'W6%^g?oq0U]R\P,>CY7;VR(2?GS9SkbgClYnGe2#h5'Kr=ac)C`KJI[n8:L8FlHpSID?.CSJWBn'uUG">OTjV
%[!59TU\[E\2Hl>MD8YB6(&En*4i[7l1@`tbMgL-dGN[MeN3"&(_i*.j7ic1P9WX9Zi9XdSN(TPq83\gfl:U!BI(h1Fr`F8;C\HqC
%*Hd!/8JDB`jL^'@*8o-1h/VZ%PahEnFk>YI6c<Z3Xb6Ru]!9!_@*p4>pc_4>m\7Ce"$mh;&'Nq%ca:t>B17m44!/R\r2jt/$(EQa
%aSTgHDC2+)a9&7>G'6OcUW(SD*:DJ.NB8KM9D(-ZjRl`pO$h3kCk@t%qs<]Rm$'m*gH47S$/H(J\QN]bV5K,\El+/jnoTMf510qe
%St^-.M@HpY#ZGM,,UFLLgLhL;?['5Fdn/T[FOCCeEs"^G4L$ZbaViMh,8iKcH-4nk#!u3V09[!4;R2*m=tJQkd3!`IF34=3/)P=3
%>OAmW0c(s:e[<j7k8lHn"%dt`eZC93Mq4#)%&?ZXV$m`_U0UO[@[\?C'#DZ[?n#!DEnkZ5;5Q5qUSX1eBAWPk8u$45fWj&Fnk\"c
%s*"Bf,rM3]*f\:W/kuiHJF7P%TVlN*oYRCO-cSQ@ou2[O(ba4uUZdQ<S#,%U*bLM<?[<NtdCZP/X!+ZhLI'CV3jTTL?9nPJO)\qm
%+#DOsZKNGj*qJ\EP<U)F$2I"#\D[YL>k$An%M81FT6J(\3Tou%QfWa0*J]FD.t&cdi4F681CU.L"3Mf@%0:O\07r5H,"VcrT.\F9
%h0-iI45AObT-u*fr3-2Rl1r?gh]p/38A/joQ62<+9G7*!%:p8?DgOY`[a-o#rpu,s^RHBgs41Esq9'3_O]*MaQRDkp3sq0.mkb4J
%7h(b[J%`Bg[s-$//`(0]il3]LeX_uAf^9W0LJpBdfmf4i]qb?#HZG*n#e^qKOVk0k&Rug7q,[F<1Sb+a/#8JrjYK$9rf]A,X9Y@c
%=_I#<kaoe(e&tn9%3`:VmhXM;/mrrf`>:;HjcUlJAuNioQo!*1\XrH=5t6i]`[=\2iEnu5Q]/PF(pcW=>&;s#T6[b]2]*Af)sL_J
%aO>"JlT%1U=0C^7fmC7VWS3=Y19O@G"'nMphmj%bq-Y#jn^EK`\9H]6Sj>:dG/'dq./`?lE]r;E7;736Ra+XLF!t-$7IW0eHqq(6
%1=ND-\QaA?l6%=n_`pS8En[m&j^XLK*mk;cRt<a]*D$H?gZ@s>287oR&:s+b`5J`(GaI"9\*]+AaOabG+q(nNR@cB7^7A2+I&VIB
%qp+LoJjkQ.:H?I7$K-.9l#8UX$7e4P?Ji\#l%##^W73nn]6MlU7.t1S$aX*=XbT%2mL%^P.d6@cXcBKADC3@[UUucXEa"PT.5i+?
%rZPN1G!t/l2BBf:T&TBe\.1:/T(Mc\'?*0+a-&C;Yi(tJ0`eDBBk[eNBUP@qdlgVTIu))AC)o,25'OYdRk>W6BQo5uV1ThEV6FF,
%*"LPUfbD$`*V59'hVaHjf>d;0*"ng?;0q!8@Bp,'@#cI>#J?:[SXA'@Qg7c]M'e?ir<06,%fI,t4PepCT3-&gD'!]k!Q(f4e:Gnd
%\7<9On&V]aMiP*4mY,FIi^$u5KkJc"1(=.JId])Wop!*tWTHrd5pqJ.kYBQ89\I%3ldYaK>#pI43"b(+?(B7M_[XO&Gc?<S[e'TN
%1G`#f"E5klFTYs'p#g"gAJq#:'M;;_1NO[Yj=Gbgjp+(*0Q<cKedSY2Lf<1h6X)_-[F]Hi:ODr24oNogle&ngJF?UX;8%eBBe9>h
%WNeR7Lm/8rQQ*)k]KDjJUmF@uL>XY,S_0f[7BEB&M2k>oN/(ApA$%tipgI:2!FqWO^rNZV&")^If^stE%sdo4d@Y;]N/ut\.sAG=
%2j[53M$$-qq=_a,DK2jZ5_,]kQiu$]p+(PIIW]f\b)`=X5+nWI;@Po)G+8SL&,PY'<!/^NX085!'Y5<Jou?jDZL6#P5Y&`l;0g[-
%GJki!L9FXed*J`I)c5G%h?*fJHp[lrh\cBSa/=B7jtAYqj<O??P+$l]n=p``6DtG8GZkk+`R!Z652G'I)`\4@!9FNanfg3<1%:e^
%-a%*0p;$\NbP=$me%^9g<=:ZN'3IXTZ7O\Lfb#L@RjUqBPJ*pV'*h9pFbrBQh7=Js](gonWOF5jYkqb1BRgc8njID9bes@u#?-#4
%'m?jX/MW^h+F1s[\tb!08.:R=i,SBU!79ka-gRorKVj;lN>f975Go?Bp.c"#H5SDmf!=a`_N3Q:lR>Hi?7ng<G&(UF([Fh.qMs/^
%^fa]1+3->1duBj,]cB,uqs7/e>gJ]mEXS3,G;/2E\^Q$kC<g\4F!+JD`:#R9Hqpq21t/Vo\XR=oE-phR!HP\T5p[<.TndH7"6Kl(
%8j^i@p/M(TAq\_7WQt1@Nq<d1&iq7SmCkP(a_<h1A,"\g;ui2cn?7u;[P3$bV+T"5b@+i?]M24<8SAoc`i[7Ugdo/^(kkl;p+qQ.
%5i1s<)QZDKl-s0=-:le8UgrCOA>Z@hT]-F?LhDARLQ@pRV6_65cu6mmIU/XqRFIkUiP@bbb!=uoLHMsSKnc^HB^HlmZ@f0?,G.u*
%0S#ql(L?rl[$1(1M,lkY/'urg_#Y*5*p7VG*(3ee*fU*\l2>-IR.\57=<cYLbOP:d>cggToYnk)?`-g:#T,e_fFDTA[51eUYHfCf
%6ABrA\^-k?3rq>o;,&VkdSXl$5bi<'?-_Z\K[C(MO:P:F$C@#-=Qn;/lm<VbW5]45Mq-d!!/0JGN6&AB=m0P<3\X!<K#ST9Yj?2M
%C%UgY2+G'671ec3`bEg-&C]FQObJ@#O6YYNM^(9r?<D2`T7^GEoGLoXYEc,kEA7uJrSh1u@Gco;H.U>_(3f./a1,pZhh'AUg<DjU
%.[GMf9(`14Xp7@T*/8K[.E794iPFIY!WO5KZ$kp(NqKb9TkG?MSbOkED)u#!-jV9OX*WA+J4'H:f4rEn`msm)W"u>3J?3apWG]EM
%\h0&=_2]_QGj1nJ#H&P!1$dr7:1,]_+pc`g<h4\l%'FQ4hM4:$gQf9ZCWknZmXVH*gs<*@3RBnHa8Mudi7TVf5b-L?1,9htc32Mq
%4C)[=#MqCWTGki;6"CQ1Bi;(`rg"Zm&dbZtUgM`Lq\,sNV/Dmh7;JGDgMlc/#8lq`AEqst)UO)gEu*2#o<ZA!(2E4"EmU)6%Dg;J
%1d&(/-_\U3E/bjHd'>h^5FeF>0XiNIJc^&C^mpD&[VCOIR@/6-\0c8/Fi2s6o\Rj8c"O5ac86ne!],C6BBjPrBZ6ESn.52"7-SAs
%qcL?SZI%in,QHNYSNG#p/VR+AJ@;.SE_Vj=o8;:J1@9Y.>7(=3fU-MF`tl#_E,2KN@0Z9642FI'oaqC30g"q%?>bW!8e`@S@/S3]
%<u>H&H\jJs^":ninXUJa&'I+;)+32+R;El:?"Y,9c3nKeEo3.j+n!"m`aF!sCLcuu0/bK,4]gBUiglG5#(H+f_36Z/M7Tk;m-Mk!
%H;/iWdI(LJQuWdCXdReV)J^4qL\qLVp_-/2H/BL6$/2WOiO!"uM3i:.["Iho,l*W'5$9Dn@Ygq)Ki'X99P;Se.$r>^1Gk2f]1T(N
%;Lf&7O7pY'SEPSAHq@FVh"-Nq5O)6n_e<A+#<oO2(%\eu1;Q>n[<-bRNE'4<4IF"/>>n"$e7l-F#)sI7g[sWF%h/IJbp.-YnOo2=
%%;iUnS]Zp@*)?=)'F8X.!-EVkHMmQgVt)>mgu#pr5H?pOCntuc`T+JOV`HX'^`om1Lh(%_4r#-Y9Seq'Vhh1=joGTg2Pp`Kj9D^g
%g&'3m_omcLYq]JcWne?_phNkOY@#Hp%VL/q,4pMhB1Fd#S,%$2LmK'=GeSM:TAFM@ht!*23b(Mf9UgF6!#SOF/b'lsgC/WL#5$tp
%5B)5%%e"\l]kIh,Cp<]uBIM<n,kbocUdZiV]>$631so&W\oST?FH^/Q(o4^kV]ht\OH]%o3-)m^V%8?&4qdr]cALIK#^k8&q/g+r
%Sf`(6^HFUHN\qj_kOc(EYKtbE%i,iW#ghbS):aF&3_$neH+n]"5-%00NsjeFCcu*!k[i4K%mHWc)mA5>;tPHIo\7Q8gmYB)q;q*:
%50B;4[P0igSnPfSUABF%1"0aKfTW5fMtA`%9)RK""9*(![7s?#XtM,L-F82`jh-Yiro21J^3=W^h:S7\#G(O+>$=/#h?DmqH9NF>
%1UR+:Qg&BDGi@EcN(tD0rJc&"Vrc8FLuYBPgpSllogp7r`&.W[*=G]oYHiLG73uSX)/X$/h_H0\NG<4V]es.c8S[:E.r*9[BARB6
%nPZn2+J:^0QAqniYCVC/^&,l`6mMiEs&L@,*U`G64]i4kd7gC"\s%j],fa)3g[sp6&SPBcX3JdD0L3cJLKfH7A0#GK!<TrA]5!/L
%8="*$(O\1lYsprY-3Y:7H:)db4LrpI,<R^E;l6U4'kd^?cr>+RG%NuMS8Pl:7]\?]a"Skf7e$+i+Qb*mX+p$tfo8P4MZf,q6S%T(
%Y(li!IRbQ-?19B(BU`Z[4PeZPIq<QF]D?j#C,`bc\"IkjUWd\g*Dou&N:c,m90.IXK`S.9pjttOl9jP<'1cW.(o(fW4.6t6R209k
%9j0o#\mOmWP=odi*6e1OC%tQVF/1\Kh[J[g#qn6'n9jsC5/#jNs!DlCGImd8UC7d;*A4[sXe/V!=45hObdr9u=*l-ebtT3kY6Nh`
%j*cST*'J/\h+,t_DX_M%OZ0UHM^,s->g3HuG;/'`li3`]k?Y7jGMScba.)\uR)Apj$%VbK!NlstAWpJnW?32Ppg%0Y2Uut_nLJoP
%=jcic$h><#4ODq76O0.-bDBQ/k5WFWq"b;C^+oJ.nF.Fan]QnJq+,gk6aNkSmLL7uDVA11b?]D)]hT%moo%LN#PMph?.(?<HnMRO
%OS-8I\Gl'DH+nWH52Fk]kD(&NDd$C1g*?'<=k\$gUYl$/pFX1<UW@t1qR@<e`OZ](:H'-YFR-)jqM6FMg#qTrJo1rF`i\]BV(sZ4
%Pf;S0[D1lC#.j6Ph1%8.7N&M_&;-.(VfWCW\3oSHMcQ7;8GA"mF,50nG-99,hV`m3(VkCNs2a%-Ehqb?e17:a3Ds>:li6hY3">@!
%`5:RYGUuR5"*)o:9hj0p7PEL8"2MI.U6d(l0m)f`l&ATDM<-UTf8m84p[J8h0B2*5,+e70`2E@bptt/Enm44>pj!PiGr7SRr6(t$
%C6mND'm1EbJ/#$oGp^GH1]M^K__GRM8oXOUFNE$`IQQ_&'b>HmSU<T.IR(7(SnjTU_ID@lV>OX]oBF9?4?qtqIs^qh*R4WM;gLIO
%?_+4`iT>P5XJL+no8$_1TRDjha*2J&5]'Ic#nned:d?LASec;=*o2,C04(:6)rlDQ(VmjF^YCdaWS'-Cc*GSbNI"_Ml&'_r02K(/
%WBp07(%Am4\UHu[SFc'.bn%+SpBoW%l1R6s]fi!*CsV^*%fA7;\0(,EJ2jZW*mrtl5NZh+Z0"T37]^Y+o]UasCXN'%KB:BrhXt"n
%ElB=44l)3r16o]d`i"o$7Mb-X?&VgJA-;26J#H@K)HDS\Z&7=jm]boo<=P&GRQrg_*\V4jeo^c[F62i?(B:n9JGO<qFe<0.QiU@>
%S@Tc\=6*sF&4+M-]YU9HpZPTGng:*:lq%;(O'*,[#VLN>4U5t%[164R;l^,WHp-BY2s!P3bkjLMf1UA!Z%V:%Qgj7H\)Yk_rgS:.
%hWs<bT*O[Ef+*kSF(R\8\-MH42#7T+ZT]k#TENPE7)Q'J,0OUb9W*'b]d=ca''H/F(F*a&Rk_4np%dsc^CAdn5/7%\b(AJ?!dr&E
%q/g+jSf`(0^HEJ(NXESp0thE"X&G9d>_f@W("ntD?!bo_CjDZH_&`=mIK6D^)LFenDNB!6Z^hjC:G:2!QgiuXHG2-5p[A8iDtD/3
%A!)L?(dt..6u=su2W5D@EaPDUYL<a(&?QnI&q4YOGX]98na!F(&$_`#$JKmljuhP73M12*cLXC5q_p+3+70(_R2Y/&=Z`6O:H:.H
%5T^34"(Kr(D%)Kd>ta:W)]Z>jh9fXQ0Z>@<4P^RCZBW3sRU#7bX(0'r"X,m&Nf.Pt;O%R>i.d>e?D\\MBOSQ+O,IgJhgTGd[7rL-
%+I&LCDa5CQS>g\8\+n!d!<>)nTC#H#^r_`d74E2Zam<#-!E%%=!NKm>IESSJ&^e$noc^RT0hG`1i1X_;&15))OON9:10hZ]$(ns\
%5K%<nk<6@^_TRob4Q!]&:[bgV^WG["^$^@HGn;YJ`tHnH(A'ko@3*3a,Mq$ol[S.SFO3ce`9nor%A;.%`#Ns(9@1;"d<]1mA?S;k
%I2MCF[HU*lOcaZDkO\TN_lW'MAAIrpSkh;RkP7CKrnA(gn#-Cp+4JE1^HP]O`O.dVetULIqADG1S3D6\*V]4Yq&YOr!1q`iK\H-I
%6ao/%5G'"1>E@a^>P*;*r:b.4>]92VNC/i">rqXhZqe]lZZDptn!nX5/Pe<laY>]!'W_)=?XldfS9R'Uf9)OE@mTPu^%p+4H+nWL
%4rs+;o7N)#2_D?XmKkT+/6."N1et57nN9'TSkor,g!=?V6a-3!Z2A]rj\?W\i33aFidulUDTG].9;-4S6S4R(6"itYLf+]\f-N7f
%H--dsIO6n"21uVLM?7T%P$<")0BcHDBb!."QJo,J(Y7K9.sJ1@pr@L[7!-b<3#R6qGhM^9+jmm*qd+d0KAl8O@LPQ6@CO7LTTuJW
%H5BbRd>*t0M&=]3dDON:B<LpFea0/^m;gA4YKDp3T_E_3Xr$VK@hI%20B1GBme^qn<I$58?kDNgeqp=VHTBKM;Ae?ho/42u=q#)8
%N3[-9?-_Ze&bh(HOLO!\DGWbpNh%,$K2g66rbskXTXe;>D8t`_i!3E2qac8+\2g1!CsMW^%f<^_!8^Q`\3?b6()Nkue$rFsY^eE%
%GsuWKI%oZ>oBdLf4ZiaaCs@DmTpHEU?d8V1GOXT(HG2-3pM^:@n++ZlTh*E\.KWraHEb\PE8o-):..,"?gl.dm8\08iB%9_D2o]R
%+`CguYi'Q=YJW:`_K+K`Ie/8?o6g#`I(HRAc]:*OhmBb>\.cY]]hCG0i:rGE*c^IVN_F^WidPT?d8PB8Oe6MFgqIo$LOI)UQQ5X>
%6\NTW$8l^lhch]POgE6p+^;B$+Rao)[.07l]NdNW7`^b^*lK(?1cItr5bis,^EU+08rXFos1p&^Y^QQW@Zu`V3AP_P!,]FT6PX_+
%T,3#T5V4h>LFVGUdEnHb':4WkS4,csk`/MSal$0DT[mq(@t+\u6>/SR]+FA"/Bd-_b%HdX&$qpQGubCjnT&+OcZ_&%dl[!pDt7=^
%0,q^R:aG%A(#05]I4H%43Sgm<h&Cqt@]^i_kl,2$U,qrJ.D(lMoId!j24d'Cf-'q(n@a-23@f56R..Xiq-tu=IFQF.[l9psm*5-3
%Nr$5/qqod-E.(?J.kXRs<cK_5^MiEs2fJc\H%UF@*D/H,+lC0FJ55'F@W=^ffC[MnhKT5Xhk9-Oj*qRu_"BV#gc-'`g8/V=m9Zbj
%Vigk53'J="bL>iiEf`G)*1ku!^Xb>@TnCN;^Q..J(^kYnfZfcNcL\`]oBF9_4?r&>J(%<miQ_FZeZ-)5i=mQGLY<uU2`'r?*C5a0
%7N]]=Z2A]riQeU^ohced`?baPh2nDd<m"-orttJ%)q!(54;>$%!P($JqG$aLZ'eMm#B\Vn8:$kES+=C-N0Y4WP18bT4P$.N1Y(pd
%%f\&+!^>L$o(LN7NiO2!OTEl1'n8-%BirAkD2Fm-n2Dg%Eq=/mV(YJ\H_.>%VOD0L3QAFc4PcQG7++^"C_G*L>&Kg^ao+]c+HWbL
%)Y^^7%:-?t2_j\dVSrhYRB!Wd)fs4b>YRtpbO"Ss4:QtN`!?p6.YX:SfT@0XlGTZkWG;rn>rC>LqYO77#u*cHGLfDk's4aOGW+p1
%\r1=8:b)@t"gf+TUJlj!"dN5F:b"sjiu96(/l9eNce>(G(kprcMrrCL7ej"?[F*]4<IL965:["T)r!.oB)e/2K]Wkn;\=N(,0h19
%NV#@5A-*n#118.>-^HTVMH7Va'Ii6KUAWucB&?&gSAX'nNC[(SM>"jdV4fr@(9p^Adce:q:@kJK'$DuU[#(a]l'iXhfHJPq)[0dY
%=U@HjB%fP5buRYBQ#bP)Nu^.C9ULhG.d[hh@I(\jY)_ouf96&KC#f*_QIqmXGNDL_q_k%(dl!U@Ep7X2ES/X0O(j4"LdgnbE,[iO
%k,:&@0O*6U'ENi_@4>bQ<@qAO&\J;?,3BQ#C."'>4Te7`!3aJ09@Gn;?'C^)?-/FRjjRGiVL`pFf+n84DUX\n[3a;3@Le5h\ZIA=
%ri%et(l%stDTc"in.JOU`l=rH)XID:pAJX=nU`CK>qI`GCKmud"0iFf9ki>5]\)P'I5rmZSoMc^C,;[--JYHaQZ@rM^>!o,(j>ht
%'6Da'D34"K,3O)u\Y,"k??+FSI>#1RdCd*\"9\ELlSmtO0!3U+%F0FSkqmA/-go9=b*oJH+QA_ai[9=+"Z%Lq;2+a`/!t<8!^OH0
%I5#u4A>GU&5))"Aj!QZP.]n.SF8Y"is+)uWJtqYrUG]F?3p2ed/T5NDc,K;-6^dX8R=JhP;l=XK-s].modYgY>1oW-4_Y#/&D?kf
%%5'8#'o#Jt'TZXpG?2-K]+-j_Wn5jC1"Z558k.PlF_Y%N2Q#?+ge9>O:IF#f?)C3%74]a&80pCD4p!F9_ZgiOQ=*ilbBX/ERML0"
%H#;)2[)E[D>q@h>QIs$Ld-*P@6d.Wl1/1C3!SZPR]Z"sJASPoI1aYRn,6]s&WaRU,g&+2o-L2glq4=(N8G*88C!-27W7Hm8/p!;I
%bKF,eP$;pdc+>=OJ$ScNF#&0G(&*mcMXFtbrmL]KG:4^#A6n<T2n1O/YIZ0^\6^k>M\DHY=0ltg5T["[X$$eBhQ75heI.RG%j)84
%M^*o6MTo8iEN7U-"7NlVQ?Wo-I:%=;I2`E9_92`'/WDcq"2*"Aejk:Q-eg8b9ue,^\:>Z7*B&iI,?9g_KcZI"P]:C7[Nc:8.EK)=
%qXFK'P^&=dOS$QO3Y=i+q!m%8@6-'EX_g'rOq)Z$mC4@Rlj7b8L3FImK,6<0#&6d[W#lL&oV]0XffriA[BAf=?Rgi.'_Q#gg^kV+
%QTIS@7^u6MfEc\Y&KBb*6%UiZ'I=UU:17U!ga>j5M#.;^LU^!QE/_D^MN)VR=Kuq\:Tt[_h'H6HdI%PuSA[SMjkp",qhIb0pu0R!
%iqIs&q[YA^[Z=gfq$Z=t>o<V0^])d(^])FVpu1+[q"+OU[t"EBT)\MN(k;@j+9$mQ28V$40@mnpOD4Ib*S)Z`RYm#;8uI^X@VEk,
%at2!a(THPsXq3IJ8_39+O/%MO'hSEO8nCI&Dbuj!/5cX7RG:&Y*dpB/#jYPfmt]2*?'?3%F,O0)RajbOZ"GAojLQ(GLoB^a=rV"8
%Hc]6PGp+kR-H9ME3"JUI41\J:A0]cUHHR5K3QjTgVG_RdR`VDqradPL9C)'3dTKrbFZ0JE.8#:FF3$Nn8Z"b?nMJ+o=d%iGho=&&
%b&Xb9V.D5jCm`MXQZ.AccYmOm=NHqDr<`_chl5N[bSdAd4`+tPn<GhRU=4,\J:@qsq4Qs]F8%&/e'J80V`$AU)J6lI;]<S"8nl)u
%1LVI:H@<RY;X%U.<Z`/KPR$=3H8GIN?*j2o$r?bragAK*SBU=bD[1024!rO.ofDg$4f8F#hi=T=[ZO%nSdR^EUK/Ge4EYclNmOmA
%/F`L0h4u#N5R;(.GhkM"i3qJ,Xg`RR-)VXaY:ZeU%CZ%Vfp`oa[[F9sXBJ7.Y]FLp*!%JY8_u7erH;o+MlrQ,!'Oi1olb1_=>\!>
%2XGC.CE)QG#0Mi)QE66^1+![dO><#Tdt?FN&F@g%eVo)QJ)l\'k6o:^19=d-!AhH(dq1SnfAs]2j55YT0$^#"]e0TpV`6a!/isi3
%334Q_A0Mm</k#8.qO0@<7PK^[&M23j!ZA:0SQG=?7T[7\bpZW.ZaR'BD/ilH(!Y4!iE1-G8;dfNk+^ed!`"fmcPm1>IQruQ&8DnJ
%FFZ"'3jc1];<+^Li)T9iK_33aT54EQ/E5*/oNTlo8Tu>"pZ,k0\-alao)m;C[EKSUOr%#bVHn>4qVjm:<+]NW:\rlc!Ki_WOE.0V
%Ds_HiEPfg@M4g6-3H\"7"Ab(0k$!/T>cGR%eVfJ\fGciEph%r#^Db;lf9q:081\ifAiP(Zl0gEVflhmu+33HG$=9k&bF6t*2T(f+
%-BdrlkAns?FQinbU!!q%b,/GabgThKZD6VN]=;DATEkuOn`)+NRrs31:0bAI,I&hgFV8GC67q3V7R-RsU.4@g%&Lp";[oJJ!hm*J
%9Z"WS8(MWonZ\-G$WO^Q9>4`h7cM!T@nX6&;#A<?ag_2X-#,$Q4jAAF9j.!f+NuVT49,?I]fXO\8Wk.m=6Kq:B5Ag](LnH4O@)[\
%6>O\fJTX@QEd!$0pKp)rnO1s-;hpkiMqo@2YuhDH?#Q=YaN1ku8gCumn]?WXY[n3,M.p"Rfl%T8`8V0CY(@M7.V\qmqCJP>0B$/q
%fqq:`4F9]'?^/"$^s\4Gk&G@_l*Kg'_rY(XA^hmPl.t`q4hO=![c2A[6Sr2=c>59tJPjZ!V:/mJY_qMde>X2+74NEh\;\$nd6"Ym
%EBV:'1.?Lg`ire$Z4Y35V)8"*]7#5f0;P_:om9rks0s7((MnMb61XM1WnNUm(!#6PRbh*oWt9e(Z'6-)?^+]W'?76W!r-Dh-D%R:
%<tc%GR`NbY.@j>)F[%2,j4H2qY2+2!m(;PP>FZjP6jSH-S4O!So$*i"Pe]a]4DpbDPgL-O^2P<T?5I5Ri>YqS=9RDJ-3c/7n<T*V
%[Gppl1qkOVW2ME:BY<g.e##`#4C%>@%d&l^PD_Js6n\qRc7A_,;ET\?cr/8l+X08iGI>###$+,4_6S=tCY;\a!bIBBo[($UhMSA(
%9DNE%fRR`JAJeKa2Z=)K!up-!B]`EK*0,1ah-;;"39>Z=kjsuQ\-BIYbl%>ZFLr9!K4KLB(73'ujHp:0<<=5L?QXNgnN*HI=SstM
%=02ML2t82j.YaeaI'8mkTuUV$D2D(CU/(t.2iPW&&4O'<%=Xc,-$G\e3"6]d].8#7#cUn"6'i?IhNf.Ab$eLD&s&!$`+)aihJhZ.
%,XTCieb=lLC((Z9j/G(Z")kBo8hsLVYea!OoKBBZC@Ym58C,a'_q1\>Ye`s$/dnOS@q00qcZ$Sq`kU^S`Z/.@_8JEO31/u2W^X-Q
%S4)+D8M(mk$rppO,dp,6N[U!/'R%!>n8\+$D(q5T@A'HrPn!8'?;<,8VO/!.1RFqRBr4MDoa1YMf?a;0Ftj$!Q"=%'D8GB,JU%Nj
%.UVMbek0Ct/o6>(TKmXk!M(RS`GN\tqR+:'PVpAI32Egfd)VgF1'Y:Y-W9ki":ZEbV'c/Yjp'?/F^%CG.a.%7GRCidi"pWR8*Ci5
%(2dKJG)DDZNj2X+ACK;"C6@/I&B\cdDeGB`jQ>H)`mZbi+ML<dj^\Gi@_Egu?%t1]bm`8lV8J8/W]jHd+A_%7^`034?t!Y.HhPD3
%_I,IU[Ar(HJ2T/'D]uCm!Y-s0_'6clc.sGb8m#.9FhTo\VP/G@]P[-P>ljk8O?n]35ci(4eFD#W:.<e_=>0C)TU50_WPFp.#]IS#
%'7-^YdGE6j<J2rSNUH9O)08GIPuLsi%lkq-A6H[5K'H,@I3:r\9+)1[m;CWb?<:7um?Fn/YA;g'_d>g\PsTF0_?(%J.f:dGEN2EY
%VQtB1eXX"^?BTCD=JBE^A]1Z[nXHI[R2f2@T[(B-d:U,t7oh=:b0qp@$JqR4'q/?bgKB3)-1uK"<^IFU\qj&C_&m(s/_thR\Q6^-
%1jU!RVHpPMOo\>hi_-TDGBnh%ra#tZhiOYfd3-s:2%A9/'c'=C6mXVn'k`P3"2("S8phKsUIG;R7`]UA$b0M11LLX-EX=fGM59-A
%=c<O8=oIA9a9#AH`(sqkpOQVq9G/C<*(0eh`dP6T#cr`8W1sj[68BU91rmI$=hr;&;^&20635`5@q^\1<Y!`LN):o`QNKCQ'#'<"
%d0gSiRc1BF*u5#4STbpT+dM3'>t@V>HY>rtd9DL"-rP\:[#:u3^N6`2?0k@1Z(@`i=p8$n;Qf&(pt0N.FoOh.mHn,WmHpCBmHqM_
%gY4YcgY5G=j=WLj9@jZhqZ8^qQjk:M!b2$D>DKJ/298.BSu%ak0DM2QT>R\p[VGIDrD5HtW!`nBV`D#AE4*S4VQ/>L)2bsIY=h30
%9srB]UtA$NcN/Q.8n#UuNX1bi[MO_efrM;1@Us#VCG.sj:o!j,WpO*MiHD7"ds;4G^PY=]KjME@'3uGG4uEhR1TDEG$946DRsGU1
%K$&Y(1uh=k3Mf8!$cO06;`F2nUPW<IJ>tV/_#:rmV')gkP.+Ct31"%q(UfE-Uo(R;J=DaZ$_8eM>SU:5B%uZ)3T\ZH3=aeIMie0%
%,n+;44\XQqCBn)"R)-rUQ^M:N.i&)oCS;)32Or]p\*sNLVpfg+i\8:s;,jWhdu:;bRsWZYIbj<cFK[p?ZM2BOgY91MgY4Y#gY;HH
%[^U0%[^V`na=gif#M&LiDYXH#-Jo\&LK=WW4&u1%<3_nAk'0TS(Y!S!LTcQC3e?H69W=do:J+mYc[5D@;h[Cm]Ot9_TUp6D`THGK
%CY#BL+e3QAPN[:A>"'k+iF-pki=aBVk%a%Z?1>fQWnP23>ce'$Al0YaXHRo70Y]2KhZ>q>NTR_L>a(B\>@@pre6t5Q9ioS;2#qRB
%FT#;n0ld1N$@sWo!fQ5*J;Sq973B\WQ4/k8r'M,*'DVtB>;(S`(m?$$NpaoUPh$BRdJ[Zq_;8#L/YV-`R"RISJqcC1Kq_;q(#F[5
%PSS4H](9F.GQaNg:*iigZ7jR;V/%8DIGkIJC7fXehkCJ%Jufs<9V+q7l4S/=GX:3Ld#Tc)hj+O`SLhWa-t8Ze*iqYM+#HR38\@X>
%#&:(=P[[/iYaKiL+P^f-J5Bj_@%G5eL45Y^Kd;b@f.@WhCa<JRic<&]`qk[*i'&I^d#aSLG_WB+F9%59[OMgI(@l!@,^%4B>)O.h
%r*K`q8TJV990ElFAWTWgm=smScUFpBS08-#6I:\#M`:=*GhosS=T2_eoi:+8;Y3e1\TNk<?[@Ne0'8Q21LM+HR3@D0)L6?aJk8bf
%f'-VHTK0NtG@U-RBSg4d?IJ>q2t\oD8)%G$2J0X-P^+MUV`)G/O?i(q5i<PKW@P(!>M4kOd^5GT24KGbeC&I40sV7jO9@h'UG6nR
%cPNRg_rBi6-3BMVZ's\k-:;ca[U&Sh/X*\9mA#Y2.NY:a,M:cteeU3/g`/ef(]#X4qFem2OE61&J7q(h?Us2c]pi:D3!\Os:B'hh
%j^UnhFHcAh0*)`Nj*)mr$H/GD75mh^OIi5S,SA.3n<T<>'O9-E@+,#Y\.D<AK#b"Bp!rONM=LSF["N*DMbMQ;R^B?H&Op425Y"SU
%-O)t-0AL>1U:j8n9ST5l%nX9H8BdZa(QU>\5<JMQ#>qmI!PE>OC9Rt^4`lnP/4Te"Z9f13-CLN&6X`a51nG6,.p;;`RBPD8ST%MH
%1P;msUCifYbtsD3qF_/LWYqfKWOn_@>jilp,,V3H>2+c[bHZRN;CsKWbool"`NHrmOn/Csi5'#jC,ePc&(^EQbik3#BR/1l/K`b1
%5L"c7^[X\EEm2""Wnb[)Uc!i)7<r2dQR9OjdbI6RiO.d%ZsCp??dBNO*@r1rcsLDk2J5;gMN-ALa?n8OR"6,8i\62S_="\:(8W)8
%ihkU>:kj-Y6d/6]qEP1`>01B^[$QV;V._<,RXhZ7.ccBJnsrRNKg&&7QXp$p%[1BY1_#c),GScTShuGj:O&%@htK]7,:I6.!?S)M
%.4#6m%$9,Gahc,Q4W+Tu2oP@;f_&97&8.3h$s,m@7!__9m+eF"7Ca(j>gCn-qWS2KR"2o\lmoBO53NBM>[m0tAFEZ@IEGhuDu0Lu
%@gqhuoi_i;$5d9RWZc1*3YtZ!WbRgqo(6l7r@cBg23?+`LJD81Zdk5:d+0BRrj;HU0*n^#8h0j[h:h+dCP+$L;</2MlYO<m"4H(r
%kluD9D*GO5`4E'A$Rp3;<P3L8R^Z_Za?[/nLDT9+r^7?4q+FT[g(OLpamt&hm.k0pZ4lJB)HRoQSe^')(g=D<6aD(/NAmn;(Nm]O
%JR'l-f`QdLHOdg2hfDpe.t0USa_t6C;TRRmc)_tr;EbtG)%#-W'e+kZ#\U0/jE`K89n4hC`^2=jK=R,qR&MJ&mNt:e)4SFC]*s4g
%?W("u^TUZNWUN;c]1H4>?.<`#2LJRh3Y7m:pU3EUSO]'uL0h[?:H$Ttb(.B\FeiYXZ'(\7*%<./bJlqXS_Vqdjfh'oUl>E#W^*tI
%":37SJXQ6W$&QA_R5BPO7+W0@M=aYnA(a)jf!n)``IA?I7L!s:.YOYdH];NB:lY?g8>\8;hf-Ve'hIA6>MK2pCZ5INS1"Tcfn%6\
%-tAb5M\u-p^%fIcq\3/'m\DSUQBHX?]FRh:p"rQmm^tqHFet>ho'q+YjnjB<.@E;d(IDc"<fJ+t98.SrLV6FtV8-W?-hY7RO2!8(
%m+m0k)b+iH\%a4gG!^0Hci<ACT"!:UK"gt-9d>XeLM=)Z+GN4)]0@!XDJ02C035#t_[m&B,NsG.]"b]%*LZHeg.J@D]VU9`O^.j%
%cedMaD0VNf5KRWR'LVg+\hO:qM9dG.DG5$2^a%H.PTqe@XYc2q<*FW*n@o4q-<XcXTHGVK$mua:FE#L&#P,OI^YS]NDLNLr47V@Y
%r5^I3^J"t>l`2566Jdp^2q`h)RRN76E.ISBYtZuZ#$</kab'q:?31e9n)2`^Drj6NHZZ'RcK%Mffm,6>VV"g<c94N=q[IhS:l,po
%X6J#-DmQf^-Xf!i">m.&9H=*efo&&_q/38rn'SC\3n),b5'=uCrm%pPLE=</nJ,%Mi=GblVd8)(cG*\Egt:b;>ik$b!GPSMUspY/
%YWLfCRs<B*APBt?K/-u3%C3i_]hh<3^_F8r3l"7"eD3`;HA$He`Rs(3/"T-P%FgOg.5FK6%"QSLJ4kEn'`sr!Ts8[t(:/c1,)(%(
%*mP.tr%F1Ue,b#loIcAW5=OXF3W4_=ptPCo:['d>^hkJoRM=:5Q\qnGP=taa:)(WMckkuB?Pm]9[f1Z^oa3\5?M5>1cu#6(\#Gg/
%m.c:+YdlE/Cu[IAP#]Q=aK<+955^S2eg'CWc,9G#S@FHg`YU%_o`R/d%>:%GGFZ-i2a5!nBmk+Va5dO;Nlf!Eqs<_[5*lkm],S0[
%a#k:!=PYu?D?jIL>$H=Vct1Lg!4*=nI!b<7GPjf?k4s7^c4`5YS_5#l^!Ut!6ecL51+srkgC)+gI-0'QQf:Qfh1aj&,=j2lh"!+h
%n><k?YGS*'/b"/4TA7A!Un9(RB[H=HP_=3H1=^lM8cFncmABD1dND78mV*Y7$Cqp14Y_$hJT]incGPjS2Xj7^.B[Q5Q:*,IImGDe
%kUW!gc%VAC<`8ln'./d:1D6[Hn7\PIRUe3hMIc5]C"alqP*03@2E,bk@+5B^Sf$B(cj)`IDX7Dn,gEe60UemZ^ap4X$^bbs#(Y'=
%[dmUl'u`@BH&]'Lr+OJ+06Z6E3S^5#HrT9YRM1*.D>J$'m,[YE+$O7K3Tn:YieU?)\.kK?/97pYmruI!cQDGZH$?>ER1HG8W[0B2
%^UtWP6F,r*FWjo]'*ue0C[m<6*"dMgGk.er#rdRQZ)R>.m0*jcohA_.d:LMc7.+*Nmi$-SpjgNIG,l>k6urJ9+u,!8$.a>n%aUPd
%J@DsG,&,c`*BQgp-pdjq/`2VQo+jJcE&uE;_V<^"iU4/.h(<DsjR^iMq\$MuQ<"6b-q5X/Gs9--ZC$P%s&.oqE:/.4\Ab;sA1nVs
%09t;L<j`Wkd>rT:R$2E0_[)oa7"Ug^p?;_HkbGU-3nk^@:<0)&PsdYq.T;CUr4TGX8"o[ni5OiETg:u-ZMTKYX%;0SA>TI^B=rCG
%RLm!oV'q(c_d;o^J,+(+eTfpWCPPU"?RWSsV;G51pt\karm7,t=<7tH88a@R^$3pq_*]m#PG<]o\l6'Jd_3'.CFPH+E4eOi,.P/8
%[sQuSSYGUq7c)9*-%7An[A0#p4ZTYICL;@0j:$poRb.shap%9&3TR`5CAkF<YM&RAB(^W*>poh>meC*!dI1-tcNeL%4s@]rR%5c9
%\rtemkhaZ?<qkE0_o_;=?r\."Ji*;?&bggb6ki+]?O>X!gg2JJ9V:pJDo^hgQmCj)&Wp]_&<Xr#Mi,9-^5Zqr&fs/FB?pJLJo_Tf
%fcp?"R^+Ecd-?nO>\j-f[ercI]>qPWq^L_q3BQ-$HOajK,3j?Y;sfObYB)j3B4D4OENi23/9?2lBCT6mZ@%&%]5aaP)B=1Nc2J(u
%]?%dWrpD<N7`t6o!ou\-\5YF?]GuDiYM*%fg3Xs@@!)pciKt868""ft(A.[_8qf\Ycs$]=WICOUmU=72@;/^LSFZLo`Gu!H_S3]d
%iS`^9^XmbOO/hnLELn7Hc]'>>Uen"R`N,Vn2Tb(ndfjj(aN^])hd3/Q\V$I`j9IiX3p?U$ICjg\;\i(r1B5[idGM<&C!nU[D7Z7^
%R:35?H_WNC'dAt?^Pa,iX\M+LOZ5?Aak]1&33(d4,q_(WkpQotpk\nk,%\^O5D[;]r`H<&KXN6JqHB5IF/8#]lAI7OXpfd(1O;6P
%Msh<'*0k5bf\C1QI`k7Mg51[!I=^cW>A:sNN>m$W>h7IQc%IaYr(A'Ca%,mk_AhMF!ipSl/5L:I)VB0gj\'+]g2)78dH\PnF0206
%9@T*e0B,f0@e>;hdg2biSu0Vf@X/XN;3P#SPCg,U^bi.RjTI4t1_)cd@0keM`\>_@4":fVE-`Hu^L+/"/V<s4]B=flZ^kfiY1$%Q
%gVFcG\J%5Ua_Z/4>I=+;E_Cj).7dZoe!64Li*b`+)rAkgb/X$%GqUP@pq7Z\C%Q1'pt^i)LGGJhp8N+3)Q7\T//imq<hm7;!,g4!
%)8Mc!P8GOLHJ7n]lb%R*O<a7:IeU&eSS=9_TVL8D[L:DXh;knQ'^nKq4+-ZJk&86D9EEdOo2lA>$;Xm?T;p1@o[eOQ&s75!)1-J!
%NGG]pp4=e..G-]?FddH@ME>0k)+;V]cbD<?gDk3W-su-FVPdi:f:kp1W^Jd]9IV`*1]e35Z*@$?[3IGpd$oGG9(<Pe4tE0:A5P4K
%mE/)X=]\7[m+g;#$0MdO"TK5C(L"\P5&oNtq9->.DJ2rMPO+r9<-G"'_++fqMpd8/_4),JD);UX/EC$h2J`Tb7;!!9OJD-$EVP@_
%hV#jJgN8.VV*t0$,?ocCQTIA\dQbj!^7Q&8qe8M15LT&=7q2/en.[f)bRKp,EYjYhlA5?82G`)\m]Pts8NG:YgVD%fk>X>?`m$B!
%/(+O%e$s?+0$))3UnA>lJjZGW?YoOe5MBh0/hg$Jg9,/a]JT$@1*u2=J_==:o_nj3-=V47llh!gS;3H>"cr@dS0I;XYh?4NG'lMH
%:-3Q^S.;p^<_apncJC.d9n96)4hp'e0CYQLF*NB]ROs\l>7k?l_oQQ0^N?b'UWo-EFH[g1aZQW1SCD5CeI]1>SA"%1,').OZHXb\
%5!YYCMbW#XNmpRBEH?Ycg.`S[dJ_@=\;k[jc0rcD:4eE+Wt.-;6gj)lSTtd6"5i8B=B"sJD.l$'^YG>t:.J+(o_>"sp*db,@It=o
%rbsp:+*Fc*chEk8"0/n#+3GIU)(CISe%HI--RX]s^b$\5j'%'mBE5]RnT9CpVL!NiDtcAYH\6,F8*$520sZ3Xe_?LhD@%CF7t)G"
%K^@*G!88N9#MHa3C-qN(a(b%$Fo>c=s#0UPhHb!n#H/-G30g9/KES#h]aRsJ`\`W#lg"]s#sML7QRDr!*C?$J,SZq(m8.A9Vr3LZ
%Xk*FoA@_e:42.>mc<Kr(IQEX=W((a>7sihh(gK/j3kFp7%DTSa_aI,_eQ(t]!2GLB-.ag7h;t5Xkufs1G^`)RbR7_BI)0^T:FCr1
%WtBS;khIIK_SEjnHCh3B)>Hn)`b4jYj@Cj<>&[safMcXBGW4=JaE7jnBAK.$n5:;iWs"d3_hAc`0B)YOC=N#AL81I+BUQLQn/Op"
%SiIaiN<_]Pdk5/>UN'>Rm*)17di4@ndFi%["SPBYjQ'JO)>seMpVpoJ1kAnjaD*bZU]Rce_[7@t&Sal72Y[>r&f@nV>@u=uYhR:!
%mcZ$-LI7f4:HlkUMPGgc"=$'s24@$CA?Wd=0H0`@RZ5(IZje6fOTRO@X3DIE1[r2Z:>8&V_dRg%jo_a7DArn,j9\^:[bG]JTLknY
%Y1fak+j>@hhO9'S"WFV`DrYX:f&8kJ$"(KFj>>!)+qfc?Df!s=!.4EBU_/fjI"gWcMe2J><0IE@`oM?Xe;aVH!m_EVYoP[],>AHj
%(22N:SApYJ0@4P/$Ku(K6XsV-*^#$lgH**@>M7JLC"nG,fBIXBb`uNDUK:p"T`<\8K.dQVl=:qA@(H%N-#*$fO<2@FRpj(?*p3I8
%=o>\8hY_NUapcJmA"enSmW-@/<SfsZH%*ugNT%A+0;RqAi+F$WgeY,G*m)kL5B>r,cQ)`M?p&DgUh4<Ua@l!I)ae8m^"2laE,NDC
%&*B8#fh*==aY^?)/kQJ9nVcDiZs-&8`:(C*c.*SdPk1"W.5lEIi/'k:T9FZ(^g-U@XZB@C`@p<A4WiO`n"\Xd9q9B-TSfi6*T)pA
%o*ucgV\=K+_5/beeDJBZL+<_P)L#VQ?MBL2=#b-YQN?i5pMC>+Bco?h?DbDS%PqBnc##Gr%(=0,Y,\$[ON5^RJ_aMo#,Z[qFq8OK
%Ln[f23`<Hd")"M1Sh0D/%Xp*N@oIJ((l^h@6L%p`V%D4&in0Jb%:4IOrKp(9,:&oWe1$5M-p,TO?hh8;TDp/W)umG&I_3,W&_KT(
%3T!SKcr<\a>Am`[%sGe8BU:\aP`=Z=_^<Tg=.;[l^@/OXhTl_[)"/>,T,dA3kk#hM7UIXPAk+tN\?4+Mh^0t=8;Xc=>WW&=r'"rR
%17jpl)oH9YI\pWM[,E+B,Ca\a8)jm`NlU)ANRM/:EuW%U0*+fOT=,P?DB"YQ5OS??U\WQhKQ39Q^ucQ[.,#R'C!/^T=e8FPN95d&
%[sU/_-eWH/F`D4F8T;Gb8M%M[MZoi]f"ctilGQ\'ACnJ`q5U$qr(@k(iVGDqh(kN9aZSQ,^PY1Cd'a[1!4meWk$O="!_3N(j<OUA
%.5t"N9s"p%27A=.@6`u,N!!P18p+^_KhR?r6;0O7Uh=Q+;QY4fXo'KXqY.C5K^Iu`iIYZW*(a.6Ao!<bN44iPYIUl3a<FrI/7Pu!
%@X!`:2/NjkD:f&&`#]G(CNo(`)'[R7&`MHX1D4$IFt&:<]]2L>rhha%O4C88\Di:=VrHLoI!!N";RVKlB]e4$)LlY"`n*^AD;C6e
%>[K%Ig.8C7Up1uJE#Fr.1@cPLAsR]iW7Iu4?Rrt7Y6REpZSGng8"5k?]0#Q@BnsXJq*=@8le@3Y%^T.*"u\h?MB;OAcub,-1>>!>
%h)MCU3tZV[mOTbup(o/@+YS"d5>'3_F>8,'OlI^sn1;qqbR6B.Pun^(k=>RG"ZBAl2b`X,CZH7M<!QTlan)*RWGd94Qc=p4)nD0@
%QLXb^Y]6b&270)T%n<A&3'1=$K,rYfm.:aGp'(phaN%m4<;4!D*Ch.8Obph#K7"AW*t17l&.i@'[7[\&`X$oYBj;h*-difS4$:>`
%e80SU0-0Dpf7R+f4<a*ZmJ73c2du>KlWs)e?L6GB@c8m(R32=3m)og(:$%_b7V2ae$@Ar0SoaXT+Fs>0PfPpGhP0.;4l>V\4`BFG
%;>>N.hTHcaIP8fA5c/+>+AX[fDGE4)h!B.5C<X*s*uL,UkakiqX+@Tq)M3.c0GjnSP#EO(:OE(^9>-rnjKs?PJ@iUc1D6+<@Llmb
%^K>QL9r$Rq1C&/W[qKe=3g_fY,-PZX6,^]DNP1"6f^:RS/TlO!o'Ik')KXt].S&M*#t/:HPOPDSfitW0PGbiRm**#tXuSG+ZB;g@
%s6.SsY=[MMFG2L)n[.=`3nY%mV"*\ikqK'X-aU7Lm2kjWb[bP3&VfGaBl!:_ro\>pPB=%#(a!(TV:)YjlKE5rrHKi\s!ZSO!tsS.
%kjoV0a'"8/e2FI7)h1:@g:+O/JGo1L^*tdJ`BS:>YsL3UMNYlXhD+Ylk%[94DAF(,?28&+oie8`Y#@5//U;;Cea1b%[]A`$iM2S7
%;k2u?;fL\0GO-n!<1W!<%Sn7sF*qs)>d!VWok+-G3DTm#=4eo8SD3A[][q@o8LWltl/"\=\[&Q_D`DYdfIb4NV!MXF[DrMA-'.:I
%SC9?!moH3UpZU&fF=-a92/agin9_"?5BaMs,7c[]EK^1jh]$PVSncpTd&rEIp"%ZcWg9kRn+_&8nEXE.q-`XRJ&I!:cWo`U4D!=r
%-6@PLNu[6J$S3r2B5TLBBsAdT[T;e7T(i+T"oM491M.oEkhYkW[oe@ZBN*NnNMd$Y4$KWOgJWOgYdr3*h!+c(04Wi1PP"c\@(M.5
%RW8f_],<[@0rloW5W`ij.JpD,)XVaU2RMX3Zj%/AM94E2$"$2ni>48a*LT-6/&jgAJhNX%R`53Y[J&PIg!"e`/87W&oOcr9RL7`q
%>eciu1U_[V`G`5uQTMU4o)X+aB8!d)o&q[+L=-=A>.sM,pn_Nn2s/0(30'$I_;_p-+4U"dq@gK9VKLbcTBhqm5*&Y8l24<-&'cpk
%@@?6_[p$C_rR@sNp?pS!&J0u<i.O6+ebua#TT7l"<MqG+:KHXA;TCg=M)s4_kK=S7iUak:bK-$?q!FL`'-e(X"SZW6["lqRBl+E+
%g@$[8lN_1@piO:C-KO+MEh:`.r]qCF8DleRN:)?d2VsO$9=)V..Mcs"bJC9q`IrFEHA;0R?e--cj#_$`o'fi2D_Z4)'jR^KcVBP9
%KU;(*KDlsjDN&E8eFLJ)hiW#@D?2mhp"Q@8_6)aZIV7#&Zrp/Z=j,uu[YRDEecMM;?&'`^$J]rU/pN^V$isOef*,uR!t4$X^-]6>
%<k(2s!7+OK!8rh80rb]l=SQ)@m;dW/g%f\p7s55YEnRU:kSMTmi@Q/[!<d45NPS+2_-DN@In_sQ.+#Q`/7?m1M$c2fG)(F<nCMJk
%eH4l>H&.TnKgkQR+!RcXlPW_$L.K3BUfB0HWn*LR^gS/f^P/<m=8[>I#lR"JHUe&gV.gNc5DYe*V3W8sSh&-VVR7-QG^$YSNt<-i
%"iA4mWWB4[)g>=&]7AL]nWVkmiFJ-5J\`->`s%>FI0M.S'VOK+Jdn9s!*-rRaHaLud;-^OM,sm%hLJYc%UeJL6%KiD@>\hnJC+j3
%dFFA7YT=&M,$sRc"<33'i*"JH"DI1l0P?gZ$eBG?)H!HI5d[C^U-RBpRUugBcE"b3q4Y0%n@pW-)iLPT&n9o+Q>1:R)2:"G!mh-Q
%$8n^G]3WR0d24o$=a)CLR_=r%)96cV:?"J^-Q\*$VDAT,q:80@I+D5D4p!;7.ad_.(N@YRX7HnO-\WD'lKG=ND8M/-Xk)Zl`1D82
%Rn+?0>E#(jYZHtEbCW&nqg`SYB\Ne:=E7Xt53,W"5:'E\k%g/n4;6W6^lc]6]pUdMpGB6KJiJ<:c1EM'6&M-Dn/2G)(r0P_(s6.c
%N?CbWTf;CK,"l/I.+gC1@#q,,bkJ^*`IWJ3nL#u1qJl!Aa`qGV%2H\D7m8*@0''&QSeq;%oO=F78N>,D%i*lUbkPs>PrT.`Mn0-7
%IulHH"C&^REe(iX9\C(bU/c;-ft>rdZHgCZ!PTA47\.[s>ls.CjqEMtjRU\?95K7IV<kP-q<Dj)CKs2!0o^ZF9(M@FlPW:,eh^2g
%3dgFa0'7#X4QK_Kf:q.Wf3B)OB`70jGLB,2F74c6'?agFqn3`@Iu(sfVc@da_EO(a;(sUs5r+uXghtY,e]pAM2p:1!NF3=2Au/4%
%%dfNp$/O+h][;/eh_0[m^[uL'J2qHF'3kf5C2(#d(@^=Ojks?Yn6hdn@!69`B,o]$'n<N''0\cVhjQo?qVb;8Rnc=b.i$<OagtK(
%lIoNd[P1>o=7?*\GW('(;qe+>35?BuP)GArV(6]?;4!U8PgTHQo!#tngJ!2+P4Fc#>^!Wu)3Lcd6ATW&\ABIda$VR37`7i@;GQ>H
%cjmq%&J8O-U=3-PBnKU`+@D1D(.0k'#K#/B'\4813L;nmf4Jo39QlKr7-Yq>FR=fF+dZ$mA+Vrd?nKT7XB+c90fM37<cCL:Vd0"6
%-2Zr$KIJTRoj%W6mKGSJ&)lS0\DP!dki:n=,LjU<Cr@\B4oS\Ep/,s?L&mLA;"icoWo'TBVkTf,F@UmtjC95B&;./H-\"9uabdWB
%,5sVQ&Ms#4F>"Ab4.UNHDjBHeRGGpH/9imJXSioDYk6BWc+n,Y0kW"IZLA'1S=Q0[nDd+[1MXUFD[DpL<c#U'V)?uF#C[W`J]o,J
%dS0,OaJ1JUr4i?%q6h:Ab!Ocnk&?4bahAI:95OBa7CT<.VPe@j`8+B+2Bb*9Oaqb&(S7/_Km-)d^Vp(/h'i&hmkki0YEP<>Zh)(P
%dn_Lj:$`UBge5UG(M?TgpVBk;OVs&Id8NJh3W%XaK1:0sqG_/pbjN,WG"5;A1jDb4gLeFnc_Q!Gk,7N^;GE+?mf=`h4X&Q=Z*a&k
%"\.:NoR(iF'T9bX7nn&35j_=AV7%D,WGM6g]5(q9/Wk4C/1k4:`Gmt!EjC`6%EV&O2V$gXG4.7=k3SI#[/Nq@1Eh0SEtJZ@il,Y0
%BE7@+=qpo'iGQttEi%cK=LS=.]=s`pJ(rM`A's3*8PD5F=s]qX]p5Xf=nHCT`lc-Y+qksk\E/3LlN6[CP$DIs*KsY]a(3mmV'+X]
%,n$dOQc,VJdh#kcOe"oRK9WpW8D<>+.E27*A)P$9@_K1T+'$qp-2Tc,MCdZM*.(h4*kUH3RAd_0Q<?IIkb&O!%"IgDKN6^][mhsb
%M.G]<688FM`l8h#Q+ogZU^L(IeC-TAoMVNt;Z:!:MUuV)PlgeS><T!prp<a;MefpXeE,g"GFOd'GB9DE&n)8tjC_FEl6tFjNIHWM
%=NG4;cdV`eKlCa!S.up=(U`=U/a'XmQ8l>m]9nnFfR!/0h&4FQe$[%j_BCSKRN2KjWRD(,-a&E42F_KOG2!MeYNP0:hJNG2j9UKM
%Jhc6(JD,V,BQ<sYc(A$@+YZ!^`P(6MTH8!-8a">r%-0T^gcsCQ>0pmE`s55Cn\%1uftb68bEG[s`U^hF(adP29ncYl`MF/eAZjNZ
%r6'=m_:NiA2l8L^J,6WUk1,/'G.-$%SVT8ia"E9&Q0CrLqfe74Df;U^V![GFDCJ+%PrctsEim54n#Wtnj]uTic\h^U8au3+efj<n
%Z_(Q?QJ0ib6Md@dk%>b5W97J:`L#l]8KZ\\K&E(bnP#M!Lc&kq\O>VAPqTA5otj:a-1ECrgVf#S?Jk4")Sjl(?2hOE4YE#Q/%,*s
%;`<+s,LtK-,t`NTAB2eV`k\"C/cRW-c?D.g;?CmO/6UFal_nC0ZCZg0Yg0gEmS"VcY&MmYGN)H$Ri"8+WObdIA,<4MagLaC]r/]#
%Z`2/8nAfH30<9:^I(eQfVLqqEpEpsY<Aip.k?a[DTR&#K41s=6WKeI[D0).--sZ/$<Rt[:.T`h_ZL/-LBooK#9i=j1rP29R:.&o1
%OE4G-H?O!qDL(>C>Rng4T#WVHF?(=N84U/j#>_VS'*?YF;sBqu`oKa![0^>G)r;KpM:[mX7+&1sEhXl%$>UZXo'.AW;>C19F["+t
%&\%l?mB$a=FuC:X8=\A3X9WU*R`?7o_f1V5Vc1ObFBe</EkT+k.aVedr4D8U@:)ULRqk/ne`AsmS)9DC:^GiHCKk)m\j8qf=04O&
%[.PnqZmAHd47)e8HbSUj:O62_T?6>=`[=NJV,Q[B.(fdl\[56/7(+*-@ip9#52:fnGqHFMItU=:g!j:$,4!#Dh*6(Ie4>M>@nYIo
%H?5]1d/5@.jh,g#4K#N7gqpomGJ!;4D'(Aq>QcoRUsJ5]>tuG"iW['Zh>QY(Yr_Fr`.jK]&BFZna%ar5;VMR;)oB<hfJ]4cR^mR(
%0V$a3_@=DB862\mqLHC<%Z/]ONQ!Zq1FX,(ak*&25#^-s(+'dn'*eFc.`l6Wo_0<JQ)u0?@ZKHARrbi6p'$M2N>iC6aoN#hJ/taj
%/:cT*GZnN6<Xrq<O&WXR^K@cP[5mX7_o(Q++*WoTM0EG9h:9M/?#Rq_bX#_HS3f<QZXYD/Zfl,j"p(h(,prWi`T"TJ2Vc0AbhWXk
%gSdesF+Df^FeaFpj6qFuXW6;C=(>U1GLJcnj1)u?+aeU@PE.B2=).WueaIlM[aLXk"W)o7B@\8E`"Li@>gg'OB$AdQE-@)aTo^U2
%:=Xpp-%&nqA:m)TRrX$ZrVA%:r94BuJ+;IljHnji#k&a)B?BVpK$>X$d%1M:D/ND&A)Sq@5L#%*faj3Lj7'VncJCeT^g@ql"f't7
%@K0cfoB'^GT][F*^6RV/(\cr02fk?YE7jtQe8[:4Q^qTc#P_Ui#>tS\N[K]paorN)-H5*+T>%Ot*3-@DR0q?rl8+i`&KR5K'-EEr
%]\$[U*,!Ji^YF'T<5E?p\`Mjc:2B=I4RQcZOGh#r&K9?nJ)u):*[^]$/hQlQ6.=7:"l?\0m*uE`$=JO;lL9_8e0Idn5+^oDpf:cD
%2rgf]A0R?[`.cB*IV"38&C3T9YCBE;r`uX[=).!(MPW3bR$Y^27X$mcSBs</b"bGjXV^IrGRAiqU[m$&gn>q&e\GGEE?;2G5oF!B
%c`Iu_GiiePi[\7@Tdsi"W@S"a2WZ$E'r#IBn2lDQ:]e`e;/lZZOh<"c82^a_Jq]0UVsGKU4%8Haj3o-U1(S+hFI%\*>?!B_MoHiT
%#R`ErnD32d+188Di]J#<c`P+5Se(GW`F3#ibdMB!rN_&?/!MggSVthR3(4#WEP53%$#_9t1,@YuJbi\+;>or:f&"lWlF&t@ER*=I
%@O\1%J=)_.]S/<UYW%`c8A=1B`dqr`mkAb9S7N/0On+3ar>pu>?JCP3\<W+../T1/Gm.bsZHh`4_%2tV!C&Qu]?=Kms,2cnn'>hA
%d[Vm3L,et`qX5&N/g>Yr=5LDTG;'*,dX<ec[O=h*K/mu[j?Z9B\Y!`"/g;AZrqdLjie,&lS)6q"K9_ZfFd99ASV=D#D0"T!Wim@f
%kI2*r,._HmlDUBG^e:IDq>Dt2hM'DH067'%S%?rWP?-QHnci1Zk_R?iGs^f:S*9M!V@>_-pX>&,ICt)GEKL6VlfoF)#NItQ@Rs:2
%i!Qmfj2MU$]P3M&!8VY0Pk9-Y@7S7;c*)NKOCR4Us)$JfD8mAegca<`h9?#p;M-hHZ=>"HVnA0jfdN6b1%mmIN'_tiF!D#5[sS]8
%S@@U93#uKn+P.hJ*e:g:+t`g+;r!p34p=;EHA6:2qpSeh[V(3HWsh1L8c9oWnuqYVM2AiibA!`3Ra](m2=,$iOV%+^e/]SZf0&uu
%"V5el2f7_WLo,CX0H?IYpR\kl=4Opk]ID#<W(%Fu&60Jbm3o.E-+9h%UoZ>OdLT5_G)^f^je+&EVTq71l*o%^0smfTJSZ_CU@.pX
%Q^I;EhsK1`/7r?l`In$EV16Uq.oN\,!Yf]6B-ik3N?1&:>mbrAdT;=BPm25F9Dt(L543+J+BDCmekfm3IRhD0k$1<]2e:`L#L4:I
%>2J*n#0h)Jas4L8WC>>Nrd-Z(Ge"fV:),G.\P5IQ(7$NiT3Mrj/O+!`5KA>HFj@1,\$-?P&f6<@aWGh@K>3TtU85<DAt&!XfPX@7
%D0etM1\:C$5<(M_/f:G!.%%I(G_$OYX?6K_[B[QsQK]6r=IZ3Kn&8'Y2nn,#5NDW*^H`tt=Kr3^FJa8K48GrRkeE=6IQb2<^!RPn
%_XBPI8m)_Sg^6M%QA[5-1p+^a?Lr$0K]XInD'WsSZ+<IVK79VmI!T1699.%Os5(23jq/[DhO2o[:mB\!Tm0UUK%/$LA:poSgP@mQ
%8`;J0p"**5MLO@6#R+L"[3aK^g(*K>(K,0>l@iGM)/2GV&!W"ciW-:iFoP;'9,E".>>NQJ>6Z!OL2!!qY5cQNEdaptE\BoH7q-+!
%U9]C\DtkP85Mef&^U''1*'Um0\'7*.pnVA$qV^m6UqLoX7QirJW2q([in""SUj)_W/G_lt]mkUG%h9to7&Ne\oh>-nHM<6>KXt')
%ghaU>/>3/M1aIiNoYK%BSh.JgK6Yl;kBK>HLTg-EEV1QKr'q`T%rQu$*/3,Y:'ZF)+RCTh"#(KTr!]!K&+0r14XEU6Ct`6q+X;YN
%.OTOrQ+s-E54YcX@MYikKf*:0Hkoc5K!He2s"_eQZ40K#]!&dYgh2B/._'a(QHH"7\,ZjVfZ0\T<XA-WGLsI-Q>'+2>He8Tb7rE'
%6J=P9O@"lC.;4se[[QM^9tiLR^Ct*Of.t5ci0Ai''L`fB_`s3-H+u\t+Ua+hln)C9d_Oa^YPSO12VMlW@O<nXGJ:&(@)9mQ9(h2@
%WX5ZDkL/UlAAc;SOtM!2QgFkc'$.:um8YU<FsgELQW)Q/c.WRBKbBnb1P0PI&I01B7p#IH.WW:cq<c89:uK'q4o6=H1N-?`7PAYe
%)SRnfGh+\#Yk[`(P.[PMm!6@<5'skZeYDVLK+oZd_o>)`/.]n%C=utH>`mHeVu8Y'9#J[MFaRJJAuunfJ:F5cS;:$Ur+2W'?,[SC
%D+@hnm`r(W3mC^=^Shm-$O%qsI'i8'QEjZQUW(,DN(*uqP#;=fk#p#WhFdauq5qq(+qDmGn<\7HpP^B;k"gtgI9ePK,kUF/(t%&T
%-69Hf"S>rHfd<,:fNWR<dV!g]mOuiU4(o1<)58rB&<tmmWg>QXBh5)dTeuqtZ6.'D(kM2rb?D_eA(5E!#=<rN&+f\Cke5Pg(n5t8
%gH+HR$3HRf:bmS^Nd)kkS0;0o]IVBS7_t^u<Dmdb/).\Gm$[hO,^Mg6@M\-Bli6?@c;p])FeXA,Ukg@57.oP&n\c3oA[?A)J8/9s
%e<KbE0J8&_a5Rj%r.V'DK>W\-!2n&"+Zo2O5&U0%jN<c20+2;/1Hg)@!^:Z$X$]&Fc=o>%]1$hCk)ZA*NbsiAM3VVF2YFD?P:e*'
%5G,dAO*.R8H6JB8Sl@k^e'!L/8A-]'J"nm@$YGne)FiM#Qd(EkSu-SnRdJ1k%%<8,kL]/jiPVe'LqZ@PW&L]88`5I)hY'V>X;U-i
%RXa+\FVUQ4`Fh;NA*0r0-PLGnJWg(NoMj4.J#Wb;e#nNe"QHJo>]q7hjG.`9m)]c*kLO/[7U.ZZn22qjCh'B5mLLp`!ij]/M&`]c
%7$h$IC<0<onf?1&f2%a+6(kN>/=Eg[T%H'q_%l9dp2S!V_0_@0NXIhJNb/=RmfZb(nqYXYHoAbR:<)PfWcJR";;4p--pVK/[=H*I
%fZ=K<\coPhPAL#Ir1*D<^tc,eX99K#-n\?Si,21NX:S&q/g=EjE&--DmqI?RG(mgrZCp0p"WTDR_VP-4"g6S!_i<R7!Yet;d>9+W
%BGa`X7Bt<YnrYKMD.i/uQB>&Bf;-NM>`p6STmL9tGBn8a\GgWS5M<_VPt?FOcf%*Q9&@:M9&@:M9&@8uQ+VMqQ+YrFqZ#!`>$+08
%WKdia+qL$+,5QX7V22jkluZdZ*Z@">:!C7bqgrUha^%=b,-;a=6@Q6TaWetAi]@6;hVHVogLi/8Ot&*+k7su(V$*f"8UaB'1<Zn)
%<@RXUYX2;HP)"!cX_Im$J=+2-C:.ZF)gHpgf*:!Cr!@([I\<:-Z_s5s_/jeSAM&bbUnh_??p,ujVHGhsC=XB(+QS]EisZkY.7!,:
%[Xc?.?TbKqFR/3f[A7NH[[-9,?a;pXSq6)I4V1ke[/RnMbZD3'cUdgY$,ZV\Xjlk439t&0MQ;Up#LaTY$!cRZN<mDS&8f4b6XO+8
%-;?IrUT\tg.peb<K^96hp)td5$u8?pOGt`c<#_of8:lE$9.D>#^k)L;eJBp_3)8PU-iR6"/pQk:qPJjf<<E?PXAGF[`8Q21WdP:d
%'t._<n#Ll/XZ\Ni?h;CD1@grPB53s</``%q9sPa+Ih8/`L%+36p1k-@DCi8#(5UMjS#Y&Or`Tc1^,t4?en3;Gf61+tIpM?cF/c=K
%hD?t_?IA=$Pbt%'MGj:bk:S2O^CTS#NQ0`(Fh],AN*VeS*kCjs8i:pW2r=2Tl3]8G.e26L#U5pJ^7F"JaC"<(PJ\KgUjI#.c6;H%
%VJf2g)"pjZG+cHlIu4r^`[@$`D7mHYF=&TT?,5;cNXc2u.S7*j4KH=4J$(F>?FM8>6j'n9K[R76=^e:gISKcZG-l-3EN5rCG-p>^
%4^rnbM6`U(jl1rc*<(a+4ZR*gW7"hL-@RLRdubc-BLuI?@VTi=aOK(\)cP5?`\Gsa_\E[G===Dl]^)09Y2Te(\),:mR@t@E,XY42
%?&agjs($m3)(8M8AR3;o]gt4k!6KXsAL[,f]=enuQa6)aM,!f&q"SV)>4_3r0<AQY!R<sq+6_b=kb1Nj7?bCXXhucQE&WXQ1KauB
%2f/`!i2&qSGF0pc[l.,3F/lnmF'@H;9;9UXBf6`#!d@eS/c7%.:hT@fcg-(jq=`qOU&ON\o"Y/kmd%gmjhG%AdJi:fORca2O87dZ
%52a32GLZZ`^X`GGU:pTuJ,dj,QqH,IKH#0\`Q:;lm_V%Tr2TagQhW)^^D"q9g6A&=QGi:`<s3P&+ado]bO`P6)(Wrtj_F%qM2c)Z
%-AY`Z\6T'G,NspBF*:Qs2p!`:0jpl=b_q_`Tb*OT-(GJ>P`G"ND.f6,)-k@R'`Kc/@%!C'A9qZO3*o!I!2l@ZD^2Qh>'7VVWlGE;
%=P>>F^ncEIW;,Z#$lAt)CrASCE`fC5nUiU]k_!__*Fp'NaZ+;@X7co7@$3_Q(L'(*s$+bZ^7XNaN?iV&MGGm%naW)Gnb*uAmk:``
%hcK8k00`(&0DV@6D(7q(95+T"/.J&IZ*;Wo;GsT_7n*#p8^%Uao?_6J.c-1WTE[\ib+[M-Hi(XF)aCLH[J8\L6MR'S5JQQ=V@f$"
%]56"r:Kp!u@fI_:q/Nsm+,]'e(F]9-&'=`Y7c3Q5\=Xk6n!_aKV@B@&FRE.Y>!eoa/l!?K(;a]$8"+^LY()\ms6Xa./SV9edj2hd
%fmO36$-g%SE4jQ"p_aP"/=o)?=T?".k=31-^@G&Q8E>E@Kqd!V[A7^n.a)*bcO#4GZZ23cDVr4KQ$g>GWbLrD[24fjo^0\2eGRGO
%%6mIjTA_ao[NPH;1&UP\1&U_H_]S=jQsXn#)k2Z=S:pO_?qVC=<-I&P"Cd_"`PsSc[^o/U?9fG<(Es1o/3XKH%7<\H\))^^G6Dfj
%3OL,#J'IQ-F3q:)!R@kHk&St/&O-5&rZ:8t1N\!C%IJD=:Q<b]_OC]5)tNY+@?6TErJObN_;W]CIdn&BT?[6L8A8;/r?0sqmmEp:
%lj-3o2?26(L[rRG3nCTG)VHN6$H&#F.u#M<`/XJ[c#\QhT=+!tKOGnRdhX[o\i`t16>m7=9_4oe34?U05ANG"*6no9+C!p^1&h-(
%4fWB%fbQ\oRHFoQ7F<OHH4ZpAUEW\i[ZSUo/KI7;g6=9_V8r,=O8-8N^i&ZE?Yk0uU:q,jHt`CROl>dilf"pGk:<aCc3)j/D[Q1\
%F3PDP8LfY8\i]5_Yo`-\Tf?qV?'`RQO<DY<CV"<^)AWQ$\;!O\36AEtN:\dVbk2.`4]_kHs1)ArH,>gA0*9@d[^YrAU<Gq-0F\*D
%-F-9R\F\.`VWTG;22^N+YAMgYWVDg&2Tm%AEhk^>ID"]_\:#<6>4Bk&2nWh&1S^X;)B3PtDE3>BpER4R;bKlT=pE*f0FDiW=7d,n
%RY>+2@n)Daajm.&h:hMAV.W)!I^$%Peth.>+He:#d?[te1nAG+8=FaMp]<=EZ29<0"df#ZIlG@/AIbl535V@%LV&@&#8dphA:&\`
%__H(147YM:K1OE*gt)KVLAh>q>oYBm_^RAaM.V'162IZY>A`S1-pO8hks):"mg)]eH;.T"lejO\'mPISrU4uaMP^lc4rjZ(%>`?$
%O-$CLS#<AX'L&<?37kq>#le=W4g"?n4o/LIVPRa:?]oGglEjNZ`a5!ge1b2$_d5iIAj(N`!W2@qrHh?1PruLmJl?re_D.:/nZ0g_
%^jM#7XYdPlYUEF<$lt+7coJ%m+apcrc1Lc"'*TBSq#D)FF?CROh%+)dEKR29pBe!\J'[LXBL#AJ:Q&PZc+uJXJ)M(&!)M?S2GI\/
%n9OPnM9^5/.0$1Z2="`4.aAC><b*q<PV%#fBn_i-!hYpN\k"<j6rk]$9Y6IFIc2ATXFK]4Nl!95YkjftKs)RLj>iM3[3?R>b?IV>
%AANr@g5i(qnP,^->ig6`&O;KnnR&a&2`qT7.`\G9ouN;$(i7,q7(IH+hPliGq7qh@9:s=_-#*b;N@WW&Mr,T+-s@#ig,1L\R$'@>
%0iB$r68W_o*afg#4&R@q]h5"&*QXo+`4Cb6UiK;g:YYg:<.B:q7D:p//&7fZ4'h4Jd^AWQn<q4bPW0*$^EpeU8h1*=dL%)3,o`ib
%1X(t?=^_/npufgaSGHq<+un,6@%cBPf1QQ9r3bGqcFPXgmXot]hkJM-N=)a]Ek3'P+j&(0^15$,1U&]s=hlAQR/plBp]=K5WF3N3
%\3`WJoObkHPd[A0YBqLu+L\P*i2cGJ!DL>X)ZdECa:\c@9LJlEf#(/ID$2k%`_5BZP38qtA<88!Z/hc(G9->ZTN'Dk0NDH(*2E<:
%/Ik9r.FC?QDbGZG%G5KLFHH1t9B@.-Oq+9<ZC\-F&l"u&lrqf?P[mo'^ff6eTt$q,kil)\j)kAp=/I+3#/))Zg5nF%B&Lu95,V_7
%.=9a4lFT](^,JJ#KK2LF&Z0"a>mN42PEaIj)&.V/MS9SSir)Sn*[It!"KItI8p;KmU@eHu@#L0J[^ZR0lr7BE&Qo)L1qM*M&rH[2
%Ks\"mJi`F7/aEaHqeO=],M3@moaK_EPPfCl;&F9gr`CZT%&q:rhlfPBX>>jQ)rW*9YEf4p@;)AYM`.E3.&L5A^Xp'@`4f*[.AKQ:
%$dfSF%&kiuLU.qI,c0)&Y&"[%@0-h@[?e<)k^dYqO/6B9S>67FguG?(Ld=j@=,?_>(U/q\$hW/<o-!2KN:Rc916G4kmWZP.[)k>2
%&]X5#IG3mQW+P1c+4o/8,PKjK>nZ2Rj:4+R0B>C7Zoc)p8DHt-XchK:1U&1%@'"mS!odpKl>X7RjSkkhKLq7PTK=ZSlUJtb9!YuW
%T^8E&)Is>I&5.V8T(rdBlK/1F*[4rrW_Vt"?-3F+BumKC,m5]O"Qj5C0_`l%ffH)YK(X>j0SJ64K?>K:+q5qR!Z\32:??K]!q=.?
%S/UTZ]RXCsKe(BE=9.S8Eq,sQhcX#_GfoaD_',g@\Uh-oN)JLR?q!m=/pa#?j:ns6*TSU7"@I-o&;.5$\O)R5.fcX?>UX+?eZo65
%H(F"!Gc;nOn?H[8&Ugsp6A`_Ccp+r*'sd+RJBNIN"fgl,^^LlVJ;_g<TB4J3Y7N3#-mG#p-o?:oH0GEggi_?=r3/p'\qkQ7q/LVC
%eNEZt"L/4dS"Kkg2!_XOGYiT(i:=8:-?M@'?q"D?!Yt:$!lXJq9W=.qN$t]WFKdN4!&IZO4a>g[j_PN0%#sUTgim;p"WUE2XQ_h]
%!1V2j">FR"]`<fqTaErGn/h9$'J3$W?lI2<QYt4qG<=jD;743WFduB<3VU?'2nmG]i\Y&^RsK#!HKsiK+f6;\Ntr3bVR&]ZXZdYN
%R>Z`RBPOA$^eDWDX28ZcROE9VVBWVmdof.0CH(3I90XTG),RD7`bX`r@72Z`'"CtYM>AQ)`e(9LaUB!C2;*IkVmeEtA9,[4'7TL-
%/A$!rllC/eV2Z[o'(*OV)4,BK?EC_k-@32%4&Y",EAHLr>7=sALNb/7d^B"DI$h"sQ5$S=i@k<d<i@ugZprK)kL>%0J?C5V8W\\T
%!ink#V%/>6CL`$K&i8(@JnE.U0Ep"ReK$/*YkOT7KqZ6?+iAuEIbQGH3jRKB:dHoB[;=1.oSYBLeMf]H5<]HHJW8@q_#C+G$@>N#
%dUP@Q^oOm'`-=$9rSj*rR;*=5*^tW9=a.r`_k:m6(J(cqoj]D_HJEX=]s4D`%3hpI"fj?X'0KZC&h1MkamO2mIS(l#mG63K/uCs^
%l7b%/c1\Dbe6)&O%?f5*mUjr"(M]6i.L*8W>6A_@W*Z0kTm_hOLX?m9;>7IN1='A:A7[f";q;m@'"r;8RlV<f[GKFdZ^tce5[gf$
%-o<_<iFS[`'"B\QfO@Q,NrieAG?J?PEs:%L@@8,%R4n\ZN!SbW0P^>#$)puh=+O*-qG?Y80^RL<(@Y@oI@M$\?pc[7F+@CPSMsD]
%=JX;bEap>;URMf]115oQnj6eaT*hF^f3lkr29W9Cjd04cPJpt7(0/b;m9=Ydc`*:K$Q5o($pTmu+_dUhhMite#atDO.qIsAZrfnT
%$r`bE%('Qp]1\`;1WN0L#+<B6KJ,6ZT!<2#RQI&h;q$o";e@Ppl.S^2)(!:q=g/hZ=d2^b8&\jUq>o>pQK*PEGP,,f:Ml[7dNDp#
%fWDD(&t9e"=42KLe5UK8PNc?p!o0aDm0OB$>a_t(c=>qDoJacoK[/Cf@11!N&_.PuX4[Pn$VdDkTisJ9ntDuKGq#';O_"HT$,_ks
%0s?3=)&sM^]hV6%(hJlP,Zsc/liQW_9<*VHLT-6VJS:KH[RT:ra;,\F%1dCr\:])13-/ZX-B)V!FmL0k.60oMUT1^K=R`<H/*Yc&
%^BUfGoE=D)3_0Q#dq'-=o1,S-H!i@*4[WoLq%JYNoeQN4/WO"le[<M1"))PPb_3?afk.Z,orm\"R<1li/lqn.AWWu8N\lCNL5Ro/
%ld3df>?F\V18H&Ke]D?]MdWY%6UU;0(+l;M`KE`(*ICP,p^/<X-Da*i^(e31-Fp8e&719TbZRjElG*i!l?AXJ`*EtO;ER9U[@*jH
%>p:2<Ue]j29VeP;'Z4AKZ,k9+dQgo%,;::QV=[81:e,\s[re'Qn9#UjKhe2[=eX<PW)$l+R:Cr]mM]\k?]g+J8tWZ;K!cT$&;n`f
%G\JSGOgd4H?)(Z>0GPXB;2.<(B@<\1k0X7=1"^.^AX?T1X2<)D+K\[TKi-K"@:U)TM)Mks/)-@Mfm:)$jo#7]QLIq0<Z^O4j()SD
%9SYFbVRg&qf'rC<A]?<(8a9DL=u`ZM-O#$;2Ef-lFPFXCiG$),UE+-i_*3,HCCpfR>*#\8I]FeRF4L]T+u/blr)GeQC.+i*Y_?,c
%rk.R%7Qa*S>#k<Y-[bapX>\*3'q/:]*i]S%4_-C?0)"hpp!pRnbQOMJbftb.RsUS*ql)uH8dTp7G6f,EL9'nG^ebjPYJ$"C&DNU,
%e%=3Wr/0>a*lm@uHM-EX%tQc(d*&?blJ5f%M+`$_P4r)5n4,rjajFG"^IqmYii8c'NWm<`C8F2B($U]-JRq1\.GZ<R#4H2%6ZIa-
%"TLFrF^6ot3:D$/V,!e?1HiF\8I8%06lMb0N@euNlIrNMA8KsT,(e0RoI0g(G6?Uo0S'QZ>)"%Zj"(t=D$h?B%2716j6&[A?Z?/,
%3egD*(3nec>>T=2qD$M3!-@q:PX8'r`bbsjY>!4Vl_E9t/$"O=nh%8<ZU'Ebc1\C#'hX=9b`4rq&^=s]3,shZOBQ)TjQtFhY&8SO
%O.dW@a>$BR4iqIX+gPRjms(S6o\3)h</N$8"[:eqeaN[50A\p+(>GGM&'n3U`tDp?2#rcoe7MZZ/F*TWB#QgK@V`5Cm^bnlIb#?(
%)Xu)f'7Z>9[5=p&"M>LKI6acjKe3bA)Glmp?XeS>r:LO<dB,o?+["]mYd@76es_R!^Iq6AD,o3'&7:DW_.H^OEZiV<cmjcG6<2J8
%iArN/;Q\@/0Z?pq!)8Y?8!S0b&l6\c\dTJ@TtNViYIW,Q16`:OB^MMO\]N@dl590`PV@kWNF`.=40[(Arq'sMn*(ih?lV:^[&`p9
%Gj'n)P@7'o;\?>iO^$rTl8V(%",MX=UnBhs+rNaX=<L@eh\.%#K"\9sirj!lVmsM1@On)TI5;?Fc1*E`Z+?IaHrbHnfP%V$.&`o>
%H!et52!`2i=E(,&A9N*sNp^f-P]q@k\sK]uN=Ngh&3Y3-X%B(L#2KZp7^BQ,*+P$C4gV@m)k@,,fb@e5/VQfH^dulD"`j/igG;;$
%r_2\&m9#(teVdYO5B<dK];5RY@9D98?9O7ZQ)/Da5GHMaVG_U\GrbHg,#"[gpHX>;l1V+1$X&t$GrWF3o;iuICDiA3?k9FG>I%A_
%<<-OtHq9.uq=j(U*U,?(9sKXZ]P?1'3gsgLBR?fHG+Ba$g<6,n1Tign:.KB`7?5Yq'""'&cc3)2KT5lapDiS(K*GI(]KbXaD&Nio
%1AHMt`I&el<g"].%o3V%j>!>^5G6^=$/d+??_C)X!fNNNr`0o#Ya@Q-`7!$;W`m9u!4.h/AX0SEe53YA*nbqI_qGQOETK5e=.I`b
%<61$38'R&kY,nYT;M2<\XlqF-UT91BkOtiK,Vr(30a<9:[L^7JdagX[NJ9mJR9$A'KJ=D\Tt3d):Js<jUIsO(>O&XNfMa[59dtq_
%b+Y3n=_":-&K_b\bSUGS6'mOOd5+L,+0[#f!A0ZGb*#je=."/BP,jp$g(q<J-MiusKr&U<,S@kPjH'I2.lhRHok=eEHHe1i:3H&W
%C'r6s=g*8NI5nNSkqM7j=cZn^[Do[!mNJ'6/@dT!"B^hu^08AUZOI&g_*_Ff()O'o3Wm2m1CgRg(gU@LfsGlpHpa0$b3e$B4^TIR
%NMrfkn2"-!*NO.es/0jn8\YeGMu!e-A>l`ggYuaUduV$9`MGJ`:Y"h*J]np24&+ngM"\3OpYU[+JiK$n_8\d1Glc3pkKTcVjcZ\$
%bPL*faoJ4gP"RQ8$p'iRZa?X(4>g#,>H2bq-DLm5AS$HiehT:?cVg/*ATB:9,eTMZG#SpbTQCZqEG'oH!tS=;1U?')n6Lp;=gW=_
%GBiaI10EB:'*Xt'!="J8-"KeogK1VFN_':N4!?1f:$G&,DRBY*2=jQuf%>LG(t,nZ8dnVZkUqjP*0j/_XbdGs%98"C*&qH_2Kb&B
%1eu-4[;_C"XTb(J("JON1KfLFQQqmVYcZ/RN71,1)mF#T6'N35^"*LlN]g%W-Bc:>?'pj6;II=7<G`;BCGY9fes/`qj-`ASX^"`R
%Z<<3)_$Hq+[ViK-SG9"@MZe!f;e*q#@/>!o<hk9MZ*9L5(0\gNWFgWECrW)XUC]D%r*r-RWbuB19Hu.-?^Z!\H&2JE<?X)>"3*+l
%@T)2I5UJtlbjlXPBu3#VIn:k^&^Dq$?,+%kA[e'qG[RdYk"r?M74D?h]UouV(dY(B3>9UPe[se4MYst[%<@!Q']CI.WdT5ZS,!:$
%Pd,2bFB8j-eRr?SQ^Oe.l#<qZ,i4tS'QA0s6,V,]#[n>]fL(aFB&@IZId(=8DW"$kX^L3b6VbY6&UVfuW3MR@Z*6#leM4p8X!SUE
%c<tQ>BR2bW5-pUqiCo;VL[fZr1,#d]1J+L$QD,B(QC_5f95A9(re&5a*kXkeU-iOeH09QqM7"\l`_`uGIG>7hJSq2<:#i%j@Hhd<
%h-ge5@5GlcL8ScUU?"blg7qB47YXN!W2HaG%Dbd]l9LgeOlOL0bYN1/X2LN[$)^iB,Gst1b,jZa#(G>o2dd`-aiYZ<A0A.[HF].%
%@5-urVh=n-%7;@gbBgm12n:ks[='NSPjG_c?HZdk(\#=V<r0m:&]Cl)p>(I@PrCGBCPc\<$k8Upa\qVc%C$RJPog&:^afd*Rkt*]
%Q<"ViF4>)fJ47$!ptoQP6mNBK#[XM?6^''B7-/PF@'bZVGT)>:IC=`UACL6cRQ@@J8LA./e:_9=TG;P%gi)Er/6&W)AQAZH8II=#
%^_\Q<.U#o!kaTIi6mUV,G2VSTF;f6Oqc^0]X,@'s#?:S\a=ei*io84HL87/\D-B3(qBj*5#$fd?;BU4e*9'0,57Z4-%\[nR-'1a2
%jk*rOrBSfMR(+EuAYX`MH]]#`ABDin-8+UbUQB<O_Q@I7i`VI,+J#5u-YZOFTZfUiC`#l^6\/%#e0Gegm09YORRCh8m>u7XrJ@s1
%JRYgjB!Lo(oaO:Ta`%qc*7JFj!8I!BP+h;j'72$-S\m;=!5N9QaZ_c?S)dn]bCH\5!.^u@q9HrLmO_h:_gp:+"tX.IMNY%51JsPH
%RW=<g9oKToErq;$h[DZAU`JiZ[biKn*6Y+7Yu9%)ND+kK'/D(W*#?n.K?78a>S[2@:X/'U>K%pPMK@V$(f@;1N<f+@VMPKS`DcMk
%!K(^KVJKBd_,8@k<-P^k?LU9TTZd3`Ao8B;hr8#J^U8Y,P[Fr!)IY!s#scuA(D@LBRENbX.13/BYUfFpVXp4hn7J*Fp/Xh,f41B!
%XO!lR=H_0>]p<9PU6OGY)4@=%;dk,TZ#$eh\lMD-jA6,5#A-*#NE\GU[H(MVZ*o?%)tU\-1:7p+hH6+b3rQKW9CbJB=f;IL\OnH/
%,=L+`Pg1J+BF49'>FYQ^7rKk?lkuNfQ\CLLR]/k&DR'0"T@j?6mtE9I8q"3n9BKuVP^3ncD)1WsFCfau7b7@!;1.':V#<"D(.qk:
%$V3`k:gOLBVg3DOR%7^2$3u+.[*pj0niEr#\jafBm/`0V19NNmkPI/`(Ef-X-dldV%oQ0tf<][bp<e9?:l9GX#eJQ50h+&@+BS%Q
%;rFEfBa4U?ZVArcgP2fkTFP0Gf'5&cc4="P>pkPSAt(l#3Y&3=M)LJkh=Hon5L&c>c]@^Rb6n=,L7NXT68jGNEN^GIZS3!)<hcO*
%L8V*6m:0`jP7CH:;e,EQRjBoQ1'sJj>LjJ6PEc6DD<KQ=ahbYofNLFs!h7#hS>Okd8st:oYeV"*$]>.NBda6%26TQl>4;R55j(q"
%E,csG$Nf8LRC7gs!`S&V<F-$eC3\2)f#6PCZa7Jtg+<=uZ]d!,h@L>`'7XmF_#MPAO!U:+?dt+"Ee'D!6$OMed1aS'P*ZZ3R>`K5
%B[JbcLcNH-pW:!<M,M$i@np)#/FAQG;GqGt8ld.GNZFKDU<-6r%2`4EQ-a_qHe(^3:16"`m8_W$-&7?mj@At&jXh&9>_*,LEq_8g
%4QT%0f5e4]C*%Ma*I(<25e/kB?4G^gaQbI^$NlF>ZsAI;Bom4Z]k3)%)lQXQ/MZ#>jTm$9.]l+BZ'?k[(Oru:CI("*M$T]42+:/c
%R)2#KE2HVF.XS0rIuuR0X?n?PYNJL&2BSOjXUIhogQG5E&+Ec/e/Mk[PZYV&C/2/T0g$C*peAjfJ_5-Dp.1D<=_:7*c:b\PM4'bm
%gBs.`B5!'(gLQ`X69CY8/=,QTi%gF_ih0.X"hK$q%D9l=:Xbca)s#=:R@l%2_od,&<`O3pTV68Z6a7>AWA7@ZDle".+n<4MX+/Fm
%l'3Y)?7?J`bPg"Z><[*N!K4SHQ0B7pmpe+MY74OTZ.`^$a#I>fHU&3m]?.MsR0fKZT`IiflGV)@\7c@n(G3fmE.seHO/@qoC-upg
%mWXn$4GWQS[u+:_$U8cGH=rhP%s3`//mHSG"3]An@QEpdA``JKk3*6=,Csj[('_754-Q$t_7;QV.Etnl3ep<aWm6E0ZFtk?ALE1$
%QaYCAc>$eDV0[GZ_GET'aW8cS`\(YKH=o0`WDP@Bq<gS%e+uXlR2501+RU*udr/r#??ABC4cWZIG#9S"2INF?=6rFj<q[T/CU?`J
%N-?&bW'#EL3=U!X?@"iQ1jTP+3kb2uPhehQ^[$/`Tp\f\auB\kN@go'4"UFG4Dr'JmlJ9iRISe)9DW54(mF4'=/]O4gq*4@&?u+6
%X+=8tF]PC0:'\4,[T/f!.Z#u9Z`6N><M`nk4*4D&<QZ(]&=8XiVc_/#:tqd6+'EZnidSutea/cloFe*?\'?2&4M>F:BKcs<8QM1J
%bO4:e%_qB8#gtIrH/G,KZ+;eMGUCGb",R%5D^`t*!+Y)\"qi:(do3YgG=^3E51JCTIl,'!(i3EE7@c7#7]Ou@JLD/k>cBf3L5r8g
%NJtl'_gL'W7L&!IBDmtr%i%&^?]\53KdV$.R4YO9S;abuCeb''qI<O/njgo*?,7DrkqmZ9Bgm[VPBQ;CU1)`U):k6l+uOP`#%JA/
%%<'R)oDr'_H)RX#c,22'p\gf39D#BOh#]iAX#m.&AKA30%jK/LiuLO(h1@:YX_RO7>9D@o]j9.`W1lh5Xm__+;A5h&$jTH)5p7qe
%OtKpY'T.L>'/lY0@k>&j`>XN=,!9X)1R-Bh7Or\<'\'[/]%mE8l_]j(Ko@:g65E^(1Qp=*o?a&(g'hQ.q(4DU;-)2Ha_kl0+Mb;S
%QMM#K4F?MrM<P!4#7D3]3Do#umYIJhM(<cDWE1Soa?A")3S"-Q"a,gmHg.$c/kf8@U:MOBbL9gMne3U[PlC'*&<l0T1W5NYVT,Bc
%0!il%(tIEj3EnI9RV;%Hfe$5ShR^k@mAPD$??0Va,$RkDiiIKI?rs+`i"'J)U_=4/=rlNtQD-C<OsTgXSXf'RY,D-Se+Xu<"l)sB
%2):)7])2=sd7SIn"-%M*)KW'36Hd6&d`mOubK<cqDlD-$U0QC01@KO9A2$bJ2f_RB_kPJo^dN*W@^7OX[QThs3tFXlmh)Gr6]G12
%]1ThL/Q74Hb3Y2eg[>%`%W+8aqe41bZPkLel&uk*]M8hAe?N.bY]P[(hcMS&(CM6,@U.#^UN^Cp#NoM8p*g@;R"AK[M[N0oQIqX<
%UZ@TRa^2bD57Udl`f0(s?:EM*_q,aI*B,X4FJ9*a['1ZlfEk2%hsW!LSKm;bYGpBla':B#N%Ef1*t.c`Ti,Ol7I8l\kR`AOX&pN+
%9Lhme)3+;p20H2u1%7;[&hUcF@&I2A9<F>C+Du2L;QRq@rVYU<Fu>',La:>X`Nq@9lmsIMH*>#dS-DikU4*`/%o)jjd[&.&=GVr%
%m-`[U&%juYnJ0mF,h('8m:Ak11i!.1J@Vs,1oetE,s.A\VL<X2$1BeG)*1H'J4^hnKWA40qJ6J<)3o%I\PDOX,mt.UqVg9]b?&JO
%p)p0&_RAA'e+GW0_TY*qfi2IH.Uk!E"&C>])\V;KDG/Pg&N-].j/$1F$q,07^ueJ4$=I9i9k/_-AdoJi1P_MYP:Xm802f(K,fr+L
%(E!<lNrN([H>]uiP,PncX_"-#n6#U[R0a&aV9JsD9Kt(knor.d<Q>J^&1uoG\#[5.R=H90e]ASj)%2fBI;2H<WR<=`R`o00EoEo3
%ge+ekXE8Wc;c"9l:-uOE6/QI@lS!F7Y"nhX1gs(/ddKWN!'ueX\QS;Q&8oi2\ZRL8@#\[Ae9pR,q[^)*7`-I*"+NiS\HE4%O.?fa
%/2a*T"HGpW\-DZ1"='"@ekpkC=`-@;"[<jZqSM2LUZT]!Qm2u';iq:c@*G-mR@QF6NU\V,D,K*C!,=S3!GVfJJ0C+s3kRjcTbLjZ
%VJ(=tB!D?g,eY(Zh]);I&SDaDV?\,KU_fX1eJl;fm/dWqgh2s[+M0RD-W"#<.8c;)d%Ni*hHC[F_?24;N`?'[/W9aM<phP8Fs^A]
%A4,,Q:Qk\e?rcNrLkCN!c@$j_b887>+Am+4,b5%QhH<uC<VPeblT:q%l9PDS4uGrR[6tSAgA%p1Es&WOIT[m92LnU'3,<dVRZrKL
%O&P7r^rg9Q!GCI#eIq1F"lHp4Gl7h>j2ViG.R5M87pE-:fReTW-ZNI]f@K+km1AOf">'6k)Qh*^qRZB7B1UVPZbXI@$oL[#7g&J#
%$FT&`oi[%hb&N^Uq`TA%V2+9_*[+1P_Qlo%#7A5-K_1R](F=Q=BNk"Wr?$NA!r(UPL<QXsp:!J*s.B'<roa=DQ7[ks[bT(E?c?<B
%9X72pW9F2CBPn4ir\j:=TjY,d;\VU'%Sn3MdRL5aM5"nPoXL!!D1r"/l2hX[CZc'Kf<Fd-m/#$iId[B/I[]kUBnFf8d#JPlM*XVD
%i#`!-n5'=cUa9iG&Q]m@d]TsVkd\FFV\`J189e)5%=7)10dQ&:D*QtG>$1XuMo@p;q0_UY3#ALfo]!rPMW"!&;+ON?)9eb:=ig6@
%H@`kP-JcM:@NVK6%:q@Ai@u?Z2%R'Sh_YX/PX)X.0=Ld]Q/qZ`pi;9\b5"RrMRD*%#GEjQ.EH6$\E?CH>e@>nam?EmVF#uR(+R>h
%IPggVY?@0JQ27Sgosogc>X]oED#%tE4E$?Q3?RMG$Pmp-^]&,/(E4<X--`UYa46'X!0e@#=517XTRYWTB(p;1F)u8!lt87e1-Ffn
%9P]pa:X`o+3<?KiRg**DI[/V^aKFOB&Ik+>UOkN<(oK>4H*YOb.]NRo+f\ALPNc\G/H>YV/hR418r\mZN_0bch9_S+d]pc9P[CJi
%Z:hRPi'=N#iBo=gHYWRO_9e,NX;Wt+5heRlpk@3:Oo#%+PZq_l+*lsc93<Dt=G=FG>#[?C>0@,6EXoDi)7kN$ZG78M3^h.>lgqQs
%Mfu/"ki(CnE?FkmNPF<AN,I+bIXg[t9?ao'nVB^Cdq2?f+A<_j!]U7r9j0*![qGY\Y]-Li\dhHof/G-!Qp2KOFH$:;@%H<OL+\ej
%n^THiml57]Ajh*5^\-SoY/-\@i>V'QmN<Fi1g&4u`,j;l;2hXi'_._K0;p)d>G0'NY8`NS)=8.aP9r)pXF:unUW2.C2Z+d2jS;bC
%iY_thijA7hE9E?W\Xf24KnHe)g9iJVHQ`cQ`t=:&,XKTB339=bUL!FI$1YOc?[CX)F4n=b[XM-Q?<Go]3af2B>Y*#Od@<LNP8OO;
%_K7&:cS.V"lr8[f7\S8j0A5Rt(t?g0c`LeN'UG^Y/lkA<kR*-T=P(@1$=HC9Era(:5A5gWbFhKCj]\"]n@ICIX&m2IIujuD:05;Z
%,1o5D`&\V38ES;d:7"8#<U55h.B-aM+>)Q(g*1BW/+rS(Cf8c\r__TE.dAR;%d;pr^cjoS4Gn=Z77M9+@S&s#[VMp%+A-ORRBe;J
%Y1QW,gC6d`B%jZ#B@C/3><XP+5KeVlS+?JP-?2W!8'E[Z+/2*PkH[<o2gR[bVsCZfg14f'=k1-e_5]f.'H5f=JNU,aY@m<J4cmj8
%IX5u^*]=MQUObA+%9)q3;C)rn2k<$,&`61`7P3:.C1Dd*;4FL",gC6*fHhtVZ!c6j#i78.TG?,@Q>bl<Q[>OH3?;g<,2&N$g5H0#
%8Fh"Ie$9BASu-udS`8Pn^"-<<Yot6Ap!M^8HEF$D-!mmh=9n^WA.4X2h"'8lH/9d`$0O+lm8tsJ!Y8RkD2XJ#dPq6VFO^bbnFg!;
%LAY0Hkp;aQ.9%I1?Y5KqPj)NBq3Q\WK;7lSV!t)hj:GHf$/o"X!Q2pcJn3Ndd%EQ@Hnp_A%f51$JE^sX'OeRg%4Z\\1?a`tMWQ+`
%`C0SJBN6K\/F*pLA1Y>q<@8"NrWUXI+RmUjJohB89pnr%5-VUV9jX!g.OMI:"#&u#al-kt6pmR?!Y-&MKj&>[c;;h8F!]`\54?AO
%pXDKXGAbPFHEHhGL"Y[RlSFu?c^)'g?-O6LWdW7C(Qu4.<Z,GM@P^p)aqjBLB4e9fi$Z(Qaint]Cnk?Dm+XZ6j]9piF@J2Y:H7m#
%AF4aq;@TB"12F"L(DMJ?JjB\1dM\Q7,gG=3NNO<:VJ1<<GSsA$,B;mHgRcWc]\N+lcD'4"F.Q/qSb%d@lC;E@#WQ:u,_X1r&(6Q]
%U:NK82ScL>F@TcAKd@lCIYj*i0?jk^)A6li\9JcF,VttJQWq0EKjS>fS<$*$T$]ec\n`7;$0YG->(\D%O?TfbpY0KD7GplJZ)%F&
%;#gW;&dO:WOMcIVj^/AJ4W_)i:I/X4m+UkBrfKi`6b6H3(smdqE@"kQ3/%7m@Por4Esj<4cps@\J;+g]0-HG!1<ZbpUfP37Ht4(t
%C7S-;9k1LW-RBHEM?k%Wn01M\g<[j%CIR5dj1+T+r"U5h^KYDt+t-tV(Ns_c;%*E`7&O4H?DOBVs+QLVCUR:;k!MYnFWVW5F0Mtb
%nmV_[V`,PhB'nm>d9aiK/OK;!kCWA^',O_(4$&b0(rd_.Pa>T<W7jJ\JUT:YpYtt??6#R=-a@)*b4).aF]S5:7$I]LrPdd*]%eof
%q9t7=]';1VIoHt9e/L9C^\GQq\RnL)FS3"<9da11.*`q]Toghh%5m[>V,\*:QNXf4A[]EkkjN`+jdS-hM`jt,SBp7s6LfMsd^D[e
%@(FXd'iE)Q?Cd1Jc;V!R+!eL#It^d-_,j`A%[8d\;1QQSe&coE?gd`-X?>s6*rGPskj-ABL-d51[5XXKF2o-9g>t\Oq^cZk/5(Vj
%2lpgKE^HC?pG:`QcbG^QHb=%L/7SKS]raYI[PjVIkWSDhkX;pX/fdE&:%Z2T?LtcFk-_-bBrb+rAN)bEX7i5W<OLR9fV,f!<Mp^4
%BBK0l"[<cjeko(<a8s<q27(J":NkW5ZPl-l&SRn]1jjRe,[IeS"84X)W0ppb+HBL@?bF!=gHj'`6L'P$rR"T(5O`P.`L-9F?mL"Q
%Bcjm@Bb=F2icLp%Q>r#ZAnYbTBA?D0K5T+.,O-S`ju/J]"1u5!\!ru4XkLYVP\ti>YX33#Fl-#,?u3jH*jLsRS-sDD_oHkGE;e]C
%SUE;'#glYNedP^FaV[]U.TW($V0"<(]A2tLl;kMV&[ftA#,jq&/&Mogf<"+QDr*XR%:K]EL1@M4M1dbDN4G`EfT/CsDL<]lBJM"t
%]:b@T!/!0`P<sG7A%CCdTC5jn3#3*O7KX7UF("m.Al798-C='2OHf9AE::7Pgma,Depmcqq_]eYdDIfH9nDqX]%lm1*UPc*g:++s
%0+?Wr`(0K.,s4-:[hgilf#V$0?`UKj?k\+<2'XK_5nno`)@e&a8l%gN2`p]NTgCu:>as#ViV'h_)QunVfFfH?!%G]?%lBT9&Go*\
%EiDf=.NXpoNk_*&m44?8T*Pcn]+L'G/Jj"Ri4"?G;pcF]3(ZJek/m$B*L"6k,dQO<,`Fde<Irsq,plGSm&jdNr)Pe.8"tTl/DWqe
%6:$A9[4RBh'&"ggna:G@8"KNi3RIN$"8VmpF*[OVf8$9t'2"s"^N;1uHI,!'_[+Bgrr-Bo],b\5^\m?82Q7@NB#AH3^I/-#?.o9[
%hkjogBu^@/,nn0*I:KA3&"6gD<=I%B/k-T;0$6rPTMoB]quTeUlcIIWr+$%^3"E2*K23;HTfD<I8rZW"g&j+$XW%hKgJYP_?]/,L
%=]qVP969l1E_0h;08ZkUKPJ<OG43JlBnpfOT+=>f=0^%qJ4m[k_/ec=D9VtTD81Lb*=[,)CYT3d.qE^pGtY5>RK62GrhZRL;1&0,
%1:=q8EW&?FOaJpN5mi>&)4B@SdGSgs[GVo9@oR`SAh)igFe^9$6u9=.S1]AU%514Yb:9Iq0Sr9X0WY<*m##)`J&-\#Qqf$kY:>69
%FAi/E8K.!SMG[k%P?MB[X-!'FcXf&#$:.Q7>$mdVne`5bT.[Bl&F7)MH65n3/C!18]NGbUbX(iIKK0mRBET(a_\d(;g$P&WVc=Wm
%2cLuu78oe#lV!\c8i"doX[-Mf(F1_d0!=p8VWW!#MJtVQlNel>G^-<:A(W\pq$d/Q/U%knVHF"J&ba__%9c87"'3P$T]/q6GD8hZ
%oV(!'[m"W7gP\(1q9L]%]f[)cH,]rokErrJDX>ASP*Ks[B<AcUF(sJN2TFa4S/cC"o%:/Y3Gh6up8uSOf2u3&>WuFmNf,LHmAYNj
%,B`SKR>@)BDFSbM<HG*NT12srS<jZ[m0,lVBFHm<h'SQ^.+Er!ZHp6)0c3g6>Q1I?h,NR*k(%pfXU.MSU*Ia`#u#,b;s`=-6guI1
%`X<_#>Tp[RSXSV21fTo4[db@4=I<jk5(0Tg2"h)+^KKSU:e6d_ZXD0a:b6'@Vf72]m=m:L/nb1^idsV>ih>%:;<JjpfjsiTUF"r9
%_/Q@r]M^'Ts74It26%LNiql(BLMj[S,e<_U.T?rd\o9<T%TUlT9L\KdpRQ@iVN`P_`/WO#pG-[L,r]OUmdE9C:%;TWNGVau;^\n7
%f0=JZIU)#l]To<8!!k("UY8`cX.AlO4si'Sa]UmWaOPoV40Zg&_+j'_[GVOp!nn3*_YCWMB3LF],M4*td,R74qDi%&qAcXcUpa7p
%g>8i['T1#rJ5RKa((8sB9^_0aNTX<='_7*7kK1!M1B0k\,&*S8:NlXXH-/H(0>R&D3058b7A/llk%R(,\A(&')65Cm!J8'i$'2sg
%9<Gi`;+b6.d)./96o"Oh0J8_d6S<,MH`cLJUaL[4YEhh[[k$GZD4#FG32ii)EY:>F2_RI&C+$hD7X*-Ze86#5A9p!'a@&W5Y?^uN
%F:uHfLfYXX&s2?r!J<CjlZ:d8j_VmK3-&B.eRU`a+NOa>)nO`JZ!^%\Y/k8DIR8C?l&UpY;NUa-8*J'PcUA/,r#)'D>@Hj:RTl-Z
%/=gY*6M0DnIJNZF:@9P%Rt_o8AH@?)8-OlNb1!5`S9dNHroM-lG4AIW5_s:*BaB./]^>7DP\:)@PKW$]"Y.A#m]C)DX5gr"eK5st
%2PN9W!u_9rWs1'k:e!:E8FD=odpXfF$@9Er!6"5B[540fY@-l3J@M1Q%>3V&]\ChO>oW"CTF]MJ&fC[HQ?VPd*qt87b8;HS`WKI]
%C-W.V%9B:8%iN8WVe6;qaQC%T_:rS/&FL/?AL@,\fi\Tb#UPc?!FjcLBW08t&X[0K&Jc(E#LUWMGT=+^J[hFpB<;Fj3/V=\B)l9E
%+(sep&<JtHK:`Fr^RaZh&To%)*<t-!8Im%p2LV'Q]SgXmJZPD!fjo]+RoooMnZ[b+,<M<"5XMPIFN@AIihS2o&6nHY<6^=8iiJ0r
%L?"#j:pqN0KM`]1opM?e@pE1iC5`s]\*d'pi9O1h27%)FUksdh6\e)1?8/nV:3+4VHaelfRCmP2;'Eq7B,I\15XCAL)!Mo[lP@Ln
%gajLQN]%i5*E^:'NQ$lH?;nhU;GaQLr/FTrEO5puXXL&YE"96Y*(7K/Mfe:6(8a,LkjrE\/0'E3#L0.s'HQuGiQR]E_Q/6Rdf,H2
%b@<ib2<o,a^l2V$YL`ghcIDWI6r#1$&WRLtYmN&(HerQY^-";][;8L\9!nhepJdctg8m40AXd9cdAa%Ef%n:22e5A8089pjhH5Jk
%ft\tShIh9/nW<OH,PC$<n!Ar0]/D:SH+jU2?FI>pL\Ea>+8b*KeL"P8hVIVW*-WJhm>pFC\+dLQqhs:hJ</N9g&?)5HedM.]fYX8
%mQ]KTLOu#TL<Id+="hkFIKGnANo9~>
%AI9_PrivateDataEnd
